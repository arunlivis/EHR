var Data = require('../EHR_Json/data.json')
var hip = require('../EHR_Json/hipexam.json')

var observation=[];         var observation_1=[];               var aa1=[];     
var Pelvic_Unleveling=[];   var Pelvic_Unleveling_1=[];         var aa2=[];    
var palpation=[];           var palpation_1=[];                 var aa3=[]; 
var Piriformis=[];          var Piriformis_1=[];                var aa4=[];
var Gluteus_Medius=[];      var Gluteus_Medius_1=[];            var aa5=[];           
var Iliopsoas=[];           var Iliopsoas_1=[];                 var aa6=[];    
var Hamstrings=[];          var Hamstrings_1=[];                var aa7=[];     
var view=[];                var view_1=[];
var AOX;                    var AOX_1=[];
var other=[];               var others1=[];
var d;                      var sho=[];
var funct=[];               var funct_1=[];                      var aa8=[];
var Flexion=[];             var Flexion_1=[];        
var Patrick=[];             var Patrick_1=[];                    var aa9=[]; 
var neu=[];                 var neu_1=[];                        var aa10=[];
var level_1=[];             var level_2=[];                      var aa11=[];
var text=[];                var text_1=[];
var DEFICIT=[];             var DEFICIT_1=[];                    var aa12=[];
var other_2=[];             var other_3=[];    var ck_1=[];    var aa13=[];            

var id;

module.exports={
    login : function (browser) {
        browser 
        .login(Data.user1[2].username, Data.user1[2].password)

},
'Patient' : function(browser){
	browser  
	   .useCss()
	   .pause(500)
	   .click('a[class="firstLevel"][href="#"]')
	   .pause(300)
	   .click('a[href="/EHR/Doctor/view-patient-details-open"]')
	   .waitForElementVisible('#col0_filter' , 60000)
	   .pause(500)
	   .getText('td[class="sorting_1"]' , function(result){
	   	  id=result.value
	   	    browser
	   	       .useCss()
	   	       .click('a[onclick="postNavigateToProfile('+result.value+',1);"]')
	   })
	   .waitForElementVisible('button[onclick="openStartTreatment();"]' , 60000)
	   .pause(500)
},
'Hip exam':function(browser){	
   browser   
	    .useXpath()
	    .click("//*[@id='treatmentformsContent']/div[3]/span/button")
	    .useCss()
	    .waitForElementVisible('button[onclick="addSoapNotes();"]' , 60000)
	    .pause(1000)
	    .useXpath()
        .click("//*[@id='treatmentformsContent']/div/a[text()='Hip Initial Exam -']")
        .useCss()
	    .waitForElementVisible('button[onclick="gobackExamsList()"]' , 60000)
	    .pause(500)
	    .hipexam(observation, Pelvic_Unleveling, palpation, Piriformis, Gluteus_Medius, Iliopsoas, Hamstrings, funct, Patrick, neu, level_1, DEFICIT, other_2)
        .useCss()
        .pause(500)
        .getLocationInView('#flexionLeftid')
        .pause(500)
        .getLocationInView('#date')
        .pause(500)

        for(i=0; i<=4; i++){
            a=Math.floor((Math.random()*4)+0)
            view.push(a)
              browser
                .useCss()
                .clearValue(hip.view1[i])
                .setValue(hip.view1[i] , hip.word[a])
        }
      
      observation.push(1)
      observation.push(2)
      observation.push(3)
        browser
         .useCss()
         .click('input[name="independent"][value="1"]')
         .click('input[name="unlimited"][value="1"]')
         .click('input[name="none"][value="1"]')

         for(i=0; i<3; i++){
           b=Math.floor((Math.random()*2)+1)
           Pelvic_Unleveling.push(b)
           not_5=['pelvicUnlevelingLeft' , 'pelvicUnlevelingRight']
             browser
               .useCss()
               .click('input[name="'+not_5[b-1]+'"][value="1"]')
         }

         AOX=Math.floor((Math.random()*4)+1)
         browser
         .useCss()
         .click('input[name="aox"][value="'+AOX+'"]')

         for(i=0; i<5; i++){
           c=Math.floor((Math.random()*4)+0)
           palpation.push(c)
           browser
           .useCss()
           .click(hip.che[c])
         }

         d=Math.floor((Math.random()*9)+1)
         if(d<=8){
           browser
           .useCss()
           .click('input[name="legLengthDiscrepancy"][value="'+d+'"]')
         }
         if(d==9){
           browser
           .useCss()
           .click('input[name="legLengthDiscrepancy"][value="'+d+'"]')
           .pause(500)
           .useCss()
           .isVisible('#legLengthDiscrepancyOtherText' , function(result) {
            if(result.value==true){
               e=Math.floor((Math.random()*4)+0)
               other.push(e)
               browser
               .useCss()
              .clearValue('#legLengthDiscrepancyOtherText')
              .setValue('#legLengthDiscrepancyOtherText' , hip.word[e])
            }
         })
         }

         for(i=0; i<3; i++){
            f=Math.floor((Math.random()*2)+1)
            g=Math.floor((Math.random()*2)+1)
            h=Math.floor((Math.random()*2)+1)
            j=Math.floor((Math.random()*2)+1)
            Piriformis.push(f)
            Gluteus_Medius.push(g)
            Iliopsoas.push(h)
            Hamstrings.push(j)
            not_1=['piriformisLeft' , 'piriformisRight']
            not_2=['gluteusMediusLeft' , 'gluteusMediusRight']
            not_3=['iliopsoasLeft' , 'iliopsoasRight']
            not_4=['hamstringsLeft' , 'hamstringsRight']
              browser
                .useCss()
                .click('input[name="'+not_1[f-1]+'"][value="1"]')
                .click('input[name="'+not_2[g-1]+'"][value="1"]')
                .click('input[name="'+not_3[h-1]+'"][value="1"]')
                .click('input[name="'+not_4[j-1]+'"][value="1"]')
         }

         browser
           .useCss()
           .pause(500)
           .getLocationInView('#neurologicalUnremarkable1')
           .pause(500)
           .getLocationInView('#otherNotesid')
           .pause(500)

         for(i=0; i<3; i++){
            k=Math.floor((Math.random()*4)+0)
            funct.push(k)
            browser
            .useCss()
            .click(hip.fun[k])
         }

         for(i=0; i<=11; i++){
           l=Math.floor((Math.random()*4)+0)
           Flexion.push(l)
           browser
           .useCss()
           .clearValue(hip.flex[i])
           .setValue(hip.flex[i] , hip.num[l])
         }

         for(i=0; i<9; i++){
           m=Math.floor((Math.random()*14)+0)
           Patrick.push(m)
           browser
           .useCss()
           .click(hip.pat[m])
         }

         browser
         .useCss()
         .pause(500)
         .getLocationInView('#walking')
         .pause(500)
         .getLocationInView('#externalRotationLeftid')
         .pause(500)
          for(i=0; i<3; i++){
            n=Math.floor((Math.random()*2)+0)
            neu.push(n)
            browser
            .click(hip.neuro[n])
          }

          for(i=0; i<7; i++){
            o=Math.floor((Math.random()*12)+0)
            level_1.push(o)
            browser
            .click(hip.level[o])
          }

          for(i=0; i<=17; i++){
            p=Math.floor((Math.random()*5)+0)
            text.push(p)
            browser
            .clearValue(hip.moto[i])
            .setValue(hip.moto[i] , hip.numb[p])
          }

          for(i=0; i<3; i++){
             q=Math.floor((Math.random()*4)+0)
             DEFICIT.push(q)
            if(q<=2){
            browser
            .click(hip.def[q])
          }
          if(q==3){
            browser
            .click(hip.def[q])
             .pause(500)
          .isVisible('#hipdeficitOtherTextid' , function(result) {
            if(result.value==true){
               r=Math.floor((Math.random()*4)+0)
               other_2.push(r)
               browser
               .useCss()
              .setValue('#hipdeficitOtherTextid' , hip.word[r])
            }
         })
          }
        }
         browser
            .useCss()
            .pause(500)
            .getLocationInView('button[class="btn btn-primary"][type="submit"]')
            .pause(500)
            .getLocationInView('#walking')
            .pause(500)
            .click('button[class="btn btn-primary"][type="submit"]')  
            .useXpath()
            .waitForElementVisible("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 1 -']" , 60000)
            .pause(500)
            .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Hip Initial Exam -']")
            .pause(500)
            .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 1 -']")
            .pause(500)
            .click("//*[@id='treatmentformsContent']/div/a[text()='Hip Initial Exam -']")
            .waitForElementVisible("//*[@id='treatmentformsContent']/div[1]/span[2]" , 60000)
            .useCss()
            .pause(500)
    

    },
'check':function(browser){
  browser
    observation.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < observation.length; i++) {
    if (observation[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa1.push(current)
    }
        }
        current = observation[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa1.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Pelvic_Unleveling.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Pelvic_Unleveling.length; i++) {
    if (Pelvic_Unleveling[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa2.push(current)
    }
        }
        current = Pelvic_Unleveling[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa2.push(current)
    }
}

//-------------------------------------------------------------------------------------------
palpation.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < palpation.length; i++) {
    if (palpation[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa3.push(current)
    }
        }
        current = palpation[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa3.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Piriformis.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Piriformis.length; i++) {
    if (Piriformis[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa4.push(current)
    }
        }
        current = Piriformis[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa4.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Gluteus_Medius.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Gluteus_Medius.length; i++) {
    if (Gluteus_Medius[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa5.push(current)
    }
        }
        current = Gluteus_Medius[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa5.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Iliopsoas.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Iliopsoas.length; i++) {
    if (Iliopsoas[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa6.push(current)
    }
        }
        current = Iliopsoas[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa6.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Hamstrings.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Hamstrings.length; i++) {
    if (Hamstrings[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa7.push(current)
    }
        }
        current = Hamstrings[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa7.push(current)
    }
}

//-------------------------------------------------------------------------------------------
funct.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < funct.length; i++) {
    if (funct[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa8.push(current)
    }
        }
        current = funct[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa8.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Patrick.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Patrick.length; i++) {
    if (Patrick[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa9.push(current)
    }
        }
        current = Patrick[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa9.push(current)
    }
}

//-------------------------------------------------------------------------------------------
neu.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < neu.length; i++) {
    if (neu[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa10.push(current)
    }
        }
        current = neu[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa10.push(current)
    }
}

//-------------------------------------------------------------------------------------------
level_1.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < level_1.length; i++) {
    if (level_1[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa11.push(current)
    }
        }
        current = level_1[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa11.push(current)
    }
}

//-------------------------------------------------------------------------------------------
DEFICIT.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < DEFICIT.length; i++) {
    if (DEFICIT[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa12.push(current)
    }
        }
        current = DEFICIT[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa12.push(current)
    }
}

//-------------------------------------------------------------------------------------------
for(i=0;i<DEFICIT.length;i++){
          if(DEFICIT[i]==3){
           ck_1.push(DEFICIT[i])

           
        }
        }
        if(ck_1.length%2==1){
           if(other_2.length>0){
      aa13.push(other_2.pop())
    }
    }

//-------------------------------------------------------------------------------------------
browser
  .pause(500)
  .hipinitialexam(observation_1, Pelvic_Unleveling_1, AOX_1, palpation_1, others1, sho, Piriformis_1, Gluteus_Medius_1, Iliopsoas_1, Hamstrings_1, 
                        view_1, funct_1, Patrick_1, Flexion_1, neu_1, level_2, DEFICIT_1, other_3, text_1,aa1,aa2,aa3,aa4,aa5,aa6,aa7,hip,view,AOX,d,other,
                        aa8,Flexion,aa9,aa10,aa11,text,aa12,aa13)
  .pause(500)
  .end()
},
'Result':''+function(browser){
  browser
   console.log("observation--------->"+[JSON.stringify(aa1.sort())==JSON.stringify(observation_1.sort())])
   console.log("Pelvic_Unleveling--->"+[JSON.stringify(aa2.sort())==JSON.stringify(Pelvic_Unleveling_1.sort())])
   console.log("palpation----------->"+[JSON.stringify(aa3.sort())==JSON.stringify(palpation_1.sort())])
   console.log("Piriformis---------->"+[JSON.stringify(aa4.sort())==JSON.stringify(Piriformis_1.sort())])
   console.log("Gluteus_Medius------>"+[JSON.stringify(aa5.sort())==JSON.stringify(Gluteus_Medius_1.sort())])
   console.log("Iliopsoas----------->"+[JSON.stringify(aa6.sort())==JSON.stringify(Iliopsoas_1.sort())])
   console.log("Hamstrings---------->"+[JSON.stringify(aa7.sort())==JSON.stringify(Hamstrings_1.sort())])
   console.log("view---------------->"+[JSON.stringify(view.sort())==JSON.stringify(view_1.sort())])
   console.log("AOX----------------->"+[AOX==AOX_1])
   console.log("other_1------------->"+[JSON.stringify(other.sort())==JSON.stringify(others1.sort())])
   console.log("d------------------->"+[d==sho])
   console.log("function------------>"+[JSON.stringify(aa8.sort())==JSON.stringify(funct_1.sort())])
   console.log("flexion------------->"+[JSON.stringify(Flexion.sort())==JSON.stringify(Flexion_1.sort())])
   console.log("Patrick------------->"+[JSON.stringify(aa9.sort(function(a, b){return a-b}))==JSON.stringify(Patrick_1.sort(function(a, b){return a-b}))])   
   console.log("NEUROLOGICAL-------->"+[JSON.stringify(aa10.sort())==JSON.stringify(neu_1.sort())])
   console.log("level--------------->"+[JSON.stringify(aa11.sort(function(a, b){return a-b}))==JSON.stringify(level_2.sort(function(a, b){return a-b}))])
   console.log("text---------------->"+[JSON.stringify(text.sort())==JSON.stringify(text_1.sort())])
   console.log("DEFICIT------------->"+[JSON.stringify(aa12.sort())==JSON.stringify(DEFICIT_1.sort())])
   console.log("other_2------------->"+[JSON.stringify(aa13.sort())==JSON.stringify(other_3.sort())])
   

}
}	    