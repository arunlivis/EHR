var Data = require('../EHR_Json/data.json')
var sho = require('../EHR_Json/shoulder.json')

var APPEARANCE=[];             var APPEARANCE_1=[];              
var AOX;                       var AOX_1=[];                    
var pal=[];                    var pal_1=[];                      var aa1=[];  
var Pectoralis_Minor=[];       var Pectoralis_Minor_1=[];         var aa2=[];                 
var Supraspinatus=[];          var Supraspinatus_1=[];            var aa3=[];     
var Infraspinatus=[];          var Infraspinatus_1=[];            var aa4=[];      
var Serratus_Anterior=[];      var Serratus_Anterior_1=[];        var aa5=[];         
var Teres_Minor=[];            var Teres_Minor_1=[];              var aa6=[];      
var Teres_Major=[];            var Teres_Major_1=[];              var aa7=[];   
var Rhomboids=[];              var Rhomboids_1=[];                var aa8=[]; 
var Trapezius=[];              var Trapezius_1=[];                var aa9=[];  
var view=[];                   var view_1=[];                     var aa10=[];    
var Empty=[];                  var Empty_1=[];                    var aa11=[];  
var Flexion=[];                var Flexion_1=[];     
var cc=[];          var cc_1=[];        var aa12=[];           
var def=[];         var def_1=[];       var aa13=[];            
var other=[];       var other_1=[];     var ck_1=[];  var aa14=[];          
var level=[];       var level_1=[];             
     
var id;

module.exports={
    login : function (browser) {
        browser 
        .login(Data.user1[2].username, Data.user1[2].password)

},
'Patient' : function(browser){
	browser  
	   .useCss()
	   .pause(500)
	   .click('a[class="firstLevel"][href="#"]')
	   .pause(300)
	   .click('a[href="/EHR/Doctor/view-patient-details-open"]')
	   .waitForElementVisible('#col0_filter' , 60000)
	   .pause(500)
	   .getText('td[class="sorting_1"]' , function(result){
	   	  id=result.value
	   	    browser
	   	       .useCss()
	   	       .click('a[onclick="postNavigateToProfile('+result.value+',1);"]')
	   })
	   .waitForElementVisible('button[onclick="openStartTreatment();"]' , 60000)
	   .pause(500)
},
'Shoulder exam':function(browser){	
   browser   
	    .useXpath()
	    .click("//*[@id='treatmentformsContent']/div[3]/span/button")
	    .useCss()
	    .waitForElementVisible('button[onclick="addSoapNotes();"]' , 60000)
	    .pause(1000)
	    .useXpath()
        .waitForElementVisible("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 1 -']" , 60000)
        .pause(500)
        .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Shoulder Initial Exam -']")
        .pause(500)
        .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 1 -']")
        .pause(500)
        .click("//*[@id='treatmentformsContent']/div/a[text()='Shoulder Initial Exam -']")
        .useCss()
	    .waitForElementVisible('button[onclick="gobackExamsList()"]' , 60000)
        .pause(500)
        .shoulderexam(pal, Pectoralis_Minor, Supraspinatus, Infraspinatus, Serratus_Anterior, Teres_Minor, Teres_Major, Rhomboids, Trapezius, view, Empty, cc, 
        	          def, other)
        .useCss()
        .getLocationInView('#flexionLeft_id')
        .pause(500)
        .getLocationInView('#shoulderExamDate_id')
        .pause(500)
        for(i=0; i<=2; i++){
          a=Math.floor((Math.random()*4)+0)
          APPEARANCE.push(a)
          browser
          .useCss()
          .clearValue(sho.tex1[i])
          .setValue(sho.tex1[i] , sho.word[a])
        }

        AOX=Math.floor((Math.random()*4)+1)
        browser
        .useCss()
        .click('input[name="AOX"][value="'+AOX+'"]')

        for(i=0; i<3; i++){
          b=Math.floor((Math.random()*6)+0)
          pal.push(b)
          browser
          .useCss()
          .click(sho.view1[b])
        }
        for(i=0; i<3; i++){
          c=Math.floor((Math.random()*2)+1)
          d=Math.floor((Math.random()*2)+1)
          e=Math.floor((Math.random()*2)+1)
          f=Math.floor((Math.random()*2)+1)
          g=Math.floor((Math.random()*2)+1)
          h=Math.floor((Math.random()*2)+1)
          j=Math.floor((Math.random()*2)+1)
          k=Math.floor((Math.random()*2)+1)
             Pectoralis_Minor.push(c)
             Supraspinatus.push(d)
             Infraspinatus.push(e)
             Serratus_Anterior.push(f)
             Teres_Minor.push(g)
             Teres_Major.push(h)
             Rhomboids.push(j)
             Trapezius.push(k)
             not_1=['pectoralisMinorLeft' , 'pectoralisMinorRight']
             not_2=['supraspinatusLeft' , 'supraspinatusRight']
             not_3=['infraspinatusLeft' , 'infraspinatusRight']
             not_4=['serratusAntLeft' , 'serratusAntRight']
             not_5=['teresMinorLeft' , 'teresMinorRight']
             not_6=['teresMajorLeft' , 'teresMajorRight']
             not_7=['rhomboidsLeft' , 'rhomboidsRight']
             not_8=['trapeziusLeft' , 'trapeziusRight']
          browser
          .useCss()
          .click('input[name="'+not_1[c-1]+'"][value="1"]')
          .click('input[name="'+not_2[d-1]+'"][value="1"]')
          .click('input[name="'+not_3[e-1]+'"][value="1"]')
          .click('input[name="'+not_4[f-1]+'"][value="1"]')
          .click('input[name="'+not_5[g-1]+'"][value="1"]')
          .click('input[name="'+not_6[h-1]+'"][value="1"]')
          .click('input[name="'+not_7[j-1]+'"][value="1"]')
          .click('input[name="'+not_8[k-1]+'"][value="1"]')
          
        }

        browser
        .useCss()
.pause(500)
.getLocationInView('#neurologicalTestingUnremarkable1')
.pause(500)
.getLocationInView('#rangeOfMotionUnremarkable1')
.pause(500)

        for(i=0; i<3; i++){
          l=Math.floor((Math.random()*2)+0)
          view.push(l)
          browser
          .useCss()
          .click(sho.view2[l])
        }

        for(i=0; i<=11; i++){
          m=Math.floor((Math.random()*4)+0)
          Flexion.push(m)
          browser
          .useCss()
          .clearValue(sho.flex[i])
          .setValue(sho.flex[i] , sho.num[m])
        }

        for(i=0; i<15; i++){
          n=Math.floor((Math.random()*16)+0)
          Empty.push(n)
          browser
          .useCss()
          .click(sho.Emp[n])
        }
browser
        .useCss()
        .pause(500)
        .getLocationInView('#functionalDeficit_overhead_id')
        .pause(500)
        .getLocationInView('#neurologicalTestingUnremarkable1')
        .pause(500)

        for(i=0; i<7; i++){
          o=Math.floor((Math.random()*10)+0)
          cc.push(o)
          browser
          .useCss()
          .click(sho.c[o])
        }

        for(i=0; i<=15; i++){
          p=Math.floor((Math.random()*5)+0)
          level.push(p)
          browser
          .useCss()
          .clearValue(sho.lev[i])
          .setValue(sho.lev[i] , sho.val[p])
        }

        for(i=0; i<3; i++){
          q=Math.floor((Math.random()*3)+0)
          def.push(q)
          if(q<=1){
          browser
          .useCss()
          .click(sho.view3[q])
        }
        if(q==2){
          browser
          .useCss()
          .click(sho.view3[q])
          .pause(500)
          .isVisible('#shoulderfunctionalDeficitOther_id' , function(result) {
            if(result.value==true){
               r=Math.floor((Math.random()*4)+0)
               other.push(r)
               browser
               .useCss()
              .setValue('#shoulderfunctionalDeficitOther_id' , sho.word[r])
            }
         })
        }
        }

//-----------------------------------------------------------------------------------------------------------------------------------------        

        browser
        .useCss()
        .click('button[class="btn btn-primary"][type="submit"]')
        .useXpath()
        .waitForElementVisible("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 1 -']" , 60000)
        .pause(500)
        .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Shoulder Initial Exam -']")
        .pause(500)
        .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 1 -']")
        .pause(500)
        
        .click("//*[@id='treatmentformsContent']/div/a[text()='Shoulder Initial Exam -']")
        .useCss()
	    .waitForElementVisible('button[onclick="gobackExamsList()"]' , 60000)
        .pause(500)
},
'Check':function(browser){
  browser
pal.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < pal.length; i++) {
    if (pal[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa1.push(current)
    }
        }
        current = pal[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa1.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Pectoralis_Minor.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Pectoralis_Minor.length; i++) {
    if (Pectoralis_Minor[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa2.push(current)
    }
        }
        current = Pectoralis_Minor[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa2.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Supraspinatus.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Supraspinatus.length; i++) {
    if (Supraspinatus[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa3.push(current)
    }
        }
        current = Supraspinatus[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa3.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Infraspinatus.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Infraspinatus.length; i++) {
    if (Infraspinatus[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa4.push(current)
    }
        }
        current = Infraspinatus[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa4.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Serratus_Anterior.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Serratus_Anterior.length; i++) {
    if (Serratus_Anterior[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa5.push(current)
    }
        }
        current = Serratus_Anterior[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa5.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Teres_Minor.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Teres_Minor.length; i++) {
    if (Teres_Minor[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa6.push(current)
    }
        }
        current = Teres_Minor[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa6.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Teres_Major.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Teres_Major.length; i++) {
    if (Teres_Major[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa7.push(current)
    }
        }
        current = Teres_Major[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa7.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Rhomboids.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Rhomboids.length; i++) {
    if (Rhomboids[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa8.push(current)
    }
        }
        current = Rhomboids[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa8.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Trapezius.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Trapezius.length; i++) {
    if (Trapezius[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa9.push(current)
    }
        }
        current = Trapezius[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa9.push(current)
    }
}
//-------------------------------------------------------------------------------------------
view.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < view.length; i++) {
    if (view[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa10.push(current)
    }
        }
        current = view[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa10.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Empty.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Empty.length; i++) {
    if (Empty[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa11.push(current)
    }
        }
        current = Empty[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa11.push(current)
    }
}

//-------------------------------------------------------------------------------------------
cc.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < cc.length; i++) {
    if (cc[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa12.push(current)
    }
        }
        current = cc[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa12.push(current)
    }
}

//-------------------------------------------------------------------------------------------
def.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < def.length; i++) {
    if (def[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa13.push(current)
    }
        }
        current = def[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa13.push(current)
    }
}

//-------------------------------------------------------------------------------------------
for(i=0;i<def.length;i++){
          if(def[i]==2){
           ck_1.push(def[i])

           
        }
        }
        if(ck_1.length%2==1){
           if(other.length>0){
      aa14.push(other.pop())
    }
    }

//-------------------------------------------------------------------------------------------
browser
     .pause(500)
     .shoulderinitialexam(pal_1, Pectoralis_Minor_1, Supraspinatus_1, Infraspinatus_1, Serratus_Anterior_1, Teres_Minor_1, Teres_Major_1, Rhomboids_1, 
                             Trapezius_1, AOX_1, APPEARANCE_1, view_1, Empty_1, Flexion_1, cc_1, def_1, other_1, level_1,APPEARANCE,AOX,aa1,aa2,aa3,aa4,aa5,
                             aa6,aa7,aa8,aa9,aa10,aa11,sho,Flexion,aa12,level,aa13,aa14)
     .pause(500)
     .end()
},
'Result' :''+ function (browser){
  browser
      console.log("APPEARANCE-------------->"+[JSON.stringify(APPEARANCE.sort())==JSON.stringify(APPEARANCE_1.sort())])
      console.log("AOX--------------------->"+[AOX==AOX_1])
      console.log("PALPATION--------------->"+[JSON.stringify(aa1.sort())==JSON.stringify(pal_1.sort())])
      console.log("Pectoralis_Minor-------->"+[JSON.stringify(aa2.sort())==JSON.stringify(Pectoralis_Minor_1.sort())])
      console.log("Supraspinatus----------->"+[JSON.stringify(aa3.sort())==JSON.stringify(Supraspinatus_1.sort())])
      console.log("Infraspinatus----------->"+[JSON.stringify(aa4.sort())==JSON.stringify(Infraspinatus_1.sort())])
      console.log("Serratus_Anterior------->"+[JSON.stringify(aa5.sort())==JSON.stringify(Serratus_Anterior_1.sort())])
      console.log("Teres_Minor------------->"+[JSON.stringify(aa6.sort())==JSON.stringify(Teres_Minor_1.sort())])
      console.log("Teres_Major------------->"+[JSON.stringify(aa7.sort())==JSON.stringify(Teres_Major_1.sort())])
      console.log("Rhomboids--------------->"+[JSON.stringify(aa8.sort())==JSON.stringify(Rhomboids_1.sort())])
      console.log("Trapezius--------------->"+[JSON.stringify(aa9.sort())==JSON.stringify(Trapezius_1.sort())])
      console.log("view-------------------->"+[JSON.stringify(aa10.sort())==JSON.stringify(view_1.sort())])
      console.log("Empty------------------->"+[JSON.stringify(aa11.sort(function(a, b){return a-b}))==JSON.stringify(Empty_1.sort(function(a, b){return a-b}))])
      console.log("Flexion----------------->"+[JSON.stringify(Flexion.sort(function(a, b){return a-b}))==JSON.stringify(Flexion_1.sort(function(a, b){return a-b}))])
      console.log("NEUROLOGICAL sensor----->"+[JSON.stringify(aa12.sort())==JSON.stringify(cc_1.sort())]) 
      console.log("FUNCTIONAL DEFICIT------>"+[JSON.stringify(aa13.sort())==JSON.stringify(def_1.sort())]) 
      console.log("Other------------------->"+[JSON.stringify(aa14.sort())==JSON.stringify(other_1.sort())]) 
      console.log("NEUROLOGICAL strength--->"+[JSON.stringify(level.sort())==JSON.stringify(level_1.sort())]) 
      

}
}