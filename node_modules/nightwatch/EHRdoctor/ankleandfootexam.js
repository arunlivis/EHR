var Data = require('../EHR_Json/data.json')
var footj = require('../EHR_Json/ankleandfootexam.json')
var inde=[];               var inde_1=[];                 var abc_1=[]; 
var Pronation=[];          var Pronation_1=[];            var abc_2=[]; 
var Supination=[];         var Supination_1=[];           var abc_3=[]; 
var Calcaneus_Varus=[];    var Calcaneus_Varus_1=[];      var abc_4=[];  
var Calcaneus_Valgus=[];   var Calcaneus_Valgus_1=[];     var abc_5=[];   
var Forefoot_Varus=[];     var Forefoot_Varus_1=[];       var abc_6=[];  
var Forefoot_Valgus=[];    var Forefoot_Valgus_1=[];      var abc_7=[];   
var PALPATION=[];          var PALPATION_1=[];            var abc_8=[];     
var FUNCTIONAL=[];         var FUNCTIONAL_1=[];           var abc_9=[];           
var ORTHOPEDIC=[];         var ORTHOPEDIC_1=[];           var abc_10=[];                
var bb=[];                     var word_1=[];                                
var c;                     var AOX=[];                                
var n;                     var note=[];   
var num_1=[];              var num_2=[];      
var test=[];               var test_1=[];                 var test_2=[];
var neuro=[];              var neuro_1=[];                var neuro_2=[];
var ref=[];                var ref_1=[];
var functional=[];         var functional_1=[];          var functional_2=[];
var other=[];              var other_1=[];               var ck_1=[];       var abc_20=[];

var id;

module.exports={
    login : function (browser) {
        browser 
        .login(Data.user1[2].username, Data.user1[2].password)

},
'Patient' : function(browser){
	browser  
	   .useCss()
	   .pause(500)
	   .click('a[class="firstLevel"][href="#"]')
	   .pause(300)
	   .click('a[href="/EHR/Doctor/view-patient-details-open"]')
	   .waitForElementVisible('#col0_filter' , 60000)
	   .pause(500)
	   .getText('td[class="sorting_1"]' , function(result){
	   	  id=result.value
	   	    browser
	   	       .useCss()
	   	       .click('a[onclick="postNavigateToProfile('+result.value+',1);"]')
	   })
	   .waitForElementVisible('button[onclick="openStartTreatment();"]' , 60000)
	   .pause(500)
},
'ankle and foot exam':function(browser){	
   browser   
	    .useXpath()
	    .click("//*[@id='treatmentformsContent']/div[3]/span/button")
	    .useCss()
	    .waitForElementVisible('button[onclick="addSoapNotes();"]' , 60000)
	    .pause(1000)
        .useXpath()
        .click("//*[@id='treatmentformsContent']/div/a[text()='Ankle And Foot Initial Exam -']")
        .useCss()
	    .waitForElementVisible('button[onclick="gobackExamsList()"]' , 60000)
	    .pause(500)
	    .ankleexam(inde, Pronation, Supination, Calcaneus_Varus, Calcaneus_Valgus, Forefoot_Varus, Forefoot_Valgus, PALPATION, FUNCTIONAL, ORTHOPEDIC, test, neuro, functional, other)
        .useCss()
	    .getLocationInView('#functionalRangeOfMotionUnremarkable1')
	    .pause(500)
	    .getLocationInView('#dateid')
	    .pause(500)
	    for(i=0;i<4;i++){
           a=Math.floor((Math.random()*3)+1)
           inde.push(a)
           if(a==1){
               browser
               .useCss()
               .click('input[name="independent"][value="1"]')
           }
           if(a===2){
               browser
               .useCss()
               .click('input[name="unlimited"][value="1"]')
           }
           if(a==3){
               browser
               .useCss()
               .click('input[name="none"][value="1"]')
        }
       }    

       for(i=0; i<=4; i++){
       	b=Math.floor((Math.random()*4)+0)
       	bb.push(b)
       	browser
       	.useCss()
       	.clearValue(footj.tex[i])
       	.setValue(footj.tex[i] , footj.word[b])
       }
       c=Math.floor((Math.random()*4)+1)
       browser
       .useCss()
       .click('input[name="AOx"][value="'+c+'"]')
       for(i=0; i<3; i++){
       	d=Math.floor((Math.random()*2)+1)
       	e=Math.floor((Math.random()*2)+1)
       	f=Math.floor((Math.random()*2)+1)
       	g=Math.floor((Math.random()*2)+1)
       	h=Math.floor((Math.random()*2)+1)
       	j=Math.floor((Math.random()*2)+1)
       	k=Math.floor((Math.random()*2)+0)
       	l=Math.floor((Math.random()*2)+0)
       	m=Math.floor((Math.random()*2)+0)
       	Pronation.push(d)
        Supination.push(e)
        Calcaneus_Varus.push(f)
        Calcaneus_Valgus.push(g)
        Forefoot_Varus.push(h)
        Forefoot_Valgus.push(j)
        PALPATION.push(k)
        FUNCTIONAL.push(l)
        ORTHOPEDIC.push(m)
        not_1=['pronationLeft' , 'pronationRight']
        not_2=['supinationLeft' , 'supinationRight']
        not_3=['calcaneusVarusLeft' , 'calcaneusVarusRight']
        not_4=['calcaneusValgusLeft' , 'calcaneusValgusRight']
        not_5=['forefootVarusLeft' , 'forefootVarusRight']
        not_6=['forefootValgusLeft' , 'forefootValgusRight']
       	browser
       	.useCss()
       	.click('input[name="'+not_1[d-1]+'"][value="1"]')
       	.click('input[name="'+not_2[e-1]+'"][value="1"]')
       	.click('input[name="'+not_3[f-1]+'"][value="1"]')
       	.click('input[name="'+not_4[g-1]+'"][value="1"]')
       	.click('input[name="'+not_5[h-1]+'"][value="1"]')
       	.click('input[name="'+not_6[j-1]+'"][value="1"]')
       	.useCss()
        .click(footj.pal[k]) 
        .click(footj.func[l]) 
        .click(footj.orth[m])
       }
       	n=Math.floor((Math.random()*4)+0)
       browser
       .useCss()
       .clearValue('#noteid')
       .setValue('#noteid' , footj.word[n])

       browser
         .useCss()
         .pause(500)
         .getLocationInView('#bigtoePlantarS1Leftid')
         .pause(500)
         .getLocationInView('#functionalRangeOfMotionUnremarkable1')
         .pause(500)

          for(i=0; i<=11; i++){
        	o=Math.floor((Math.random()*6)+0)
        	num_1.push(o)
        	browser
        	.useCss()
        	.clearValue(footj.pain[i])
        	.setValue(footj.pain[i] , footj.num[o])
        }

        for(i=0; i<9;i++){
        	p=Math.floor((Math.random()*16)+0)
        	test.push(p)
        	browser
        	.useCss()
        	.click(footj.test[p])

        }
        browser
.useCss()
.pause(500)
.getLocationInView('#functionalDeficitid1')
.pause(500)
.getLocationInView('#neurologicalTestingUnremarkable1')
.pause(500)

        for(i=0; i<6; i++){
        	q=Math.floor((Math.random()*12)+0)
        	neuro.push(q)
        	browser
        	.useCss()
        	.click(footj.neu[q])

        }

        for(i=0; i<=17; i++){
        	r=Math.floor((Math.random()*5)+0)
        	ref_1.push(r)
        	browser
        	.useCss()
        	.clearValue(footj.idi[i])
        	.setValue(footj.idi[i] , footj.val[r])
        	
        }

        for(i=0; i<3; i++){
        s=Math.floor((Math.random()*4)+0)
        	functional.push(s)
        	if(s<=2){
        	browser
        	.click(footj.fun[s])
        }
            if(s==3){
              browser
        	.click(footj.fun[s])
        	        .pause(500)
          .isVisible('#anklefunctionalDeficitOtherTextid' , function(result) {
            if(result.value==true){
              t=Math.floor((Math.random()*4)+0)
               other.push(t)
               browser
               .useCss()
              .setValue('#anklefunctionalDeficitOtherTextid' , footj.word[t])
            }
         })
            }

        }
        browser
            .useCss()
            .pause(500)
            .click('button[class="btn btn-primary"][type="submit"]')
            .useXpath()
            .waitForElementVisible("//*[@id='treatmentformsContent']/div/a[text()='Ankle And Foot Initial Exam -']" , 60000)
            .pause(500)
            .click("//*[@id='treatmentformsContent']/div/a[text()='Ankle And Foot Initial Exam -']")
            .waitForElementVisible("//*[@id='treatmentformsContent']/div[1]/span[2]" , 60000)
            .pause(500)

},
'check':function(browser){
	browser
inde.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < inde.length; i++) {
    if (inde[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc_1.push(current)
    }
        }
        current = inde[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc_1.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Pronation.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Pronation.length; i++) {
    if (Pronation[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc_2.push(current)
    }
        }
        current = Pronation[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc_2.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Supination.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Supination.length; i++) {
    if (Supination[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc_3.push(current)
    }
        }
        current = Supination[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc_3.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Calcaneus_Varus.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Calcaneus_Varus.length; i++) {
    if (Calcaneus_Varus[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc_4.push(current)
    }
        }
        current = Calcaneus_Varus[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc_4.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Calcaneus_Valgus.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Calcaneus_Valgus.length; i++) {
    if (Calcaneus_Valgus[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc_5.push(current)
    }
        }
        current = Calcaneus_Valgus[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc_5.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Forefoot_Varus.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Forefoot_Varus.length; i++) {
    if (Forefoot_Varus[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc_6.push(current)
    }
        }
        current = Forefoot_Varus[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc_6.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Forefoot_Valgus.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Forefoot_Valgus.length; i++) {
    if (Forefoot_Valgus[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc_7.push(current)
    }
        }
        current = Forefoot_Valgus[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc_7.push(current)
    }
}

//-------------------------------------------------------------------------------------------
PALPATION.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < PALPATION.length; i++) {
    if (PALPATION[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc_8.push(current)
    }
        }
        current = PALPATION[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc_8.push(current)
    }
}

//-------------------------------------------------------------------------------------------
FUNCTIONAL.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < FUNCTIONAL.length; i++) {
    if (FUNCTIONAL[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc_9.push(current)
    }
        }
        current = FUNCTIONAL[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc_9.push(current)
    }
}

//-------------------------------------------------------------------------------------------
ORTHOPEDIC.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < ORTHOPEDIC.length; i++) {
    if (ORTHOPEDIC[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc_10.push(current)
    }
        }
        current = ORTHOPEDIC[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc_10.push(current)
    }
}

//-------------------------------------------------------------------------------------------
test.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < test.length; i++) {
    if (test[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      test_2.push(current)
    }
        }
        current = test[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      test_2.push(current)
    }
}
//-------------------------------------------------------------------------------------------
neuro.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < neuro.length; i++) {
    if (neuro[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      neuro_2.push(current)
    }
        }
        current = neuro[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      neuro_2.push(current)
    }
}
//-------------------------------------------------------------------------------------------
functional.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < functional.length; i++) {
    if (functional[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      functional_2.push(current)
    }
        }
        current = functional[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      functional_2.push(current)
    }
}
//-------------------------------------------------------------------------------------------
for(i=0;i<functional.length;i++){
          if(functional[i]==3){
           ck_1.push(functional[i])

           
        }
        }
        if(ck_1.length%2==1){
           if(other.length>0){
      abc_20.push(other.pop())
    }
    }

//-------------------------------------------------------------------------------------------
browser
  .pause(500)
  .ankleandfootexam(footj,inde_1, word_1, AOX,Pronation_1, Supination_1, Calcaneus_Varus_1, Calcaneus_Valgus_1, Forefoot_Varus_1, Forefoot_Valgus_1, PALPATION_1, 
                    FUNCTIONAL_1, ORTHOPEDIC_1, note, num_2, test_1, neuro_1, ref, functional_1, other_1,abc_1,abc_2,abc_3,abc_4,abc_5,abc_6,abc_7,abc_8,
                    abc_9,abc_10,bb,c,n,num_1,test_2,neuro_2,ref_1,functional_2,abc_20)
  .pause(500)
  .end()

},
'Result':''+function(browser){
	browser
	console.log("inde--------------->"+[JSON.stringify(inde_1.sort())==JSON.stringify(abc_1.sort())])
	console.log("Pronation---------->"+[JSON.stringify(Pronation_1.sort())==JSON.stringify(abc_2.sort())])
	console.log("Supination--------->"+[JSON.stringify(Supination_1.sort())==JSON.stringify(abc_3.sort())])
	console.log("Calcaneus_Varus---->"+[JSON.stringify(Calcaneus_Varus_1.sort())==JSON.stringify(abc_4.sort())])
	console.log("Calcaneus_Valgus--->"+[JSON.stringify(Calcaneus_Valgus_1.sort())==JSON.stringify(abc_5.sort())])
	console.log("Forefoot_Varus----->"+[JSON.stringify(Forefoot_Varus_1.sort())==JSON.stringify(abc_6.sort())])
	console.log("Forefoot_Valgus---->"+[JSON.stringify(Forefoot_Valgus_1.sort())==JSON.stringify(abc_7.sort())])
	console.log("PALPATION---------->"+[JSON.stringify(PALPATION_1.sort())==JSON.stringify(abc_8.sort())])
	console.log("FUNCTIONAL--------->"+[JSON.stringify(FUNCTIONAL_1.sort())==JSON.stringify(abc_9.sort())])
	console.log("ORTHOPEDIC--------->"+[JSON.stringify(ORTHOPEDIC_1.sort())==JSON.stringify(abc_10.sort())])
	console.log("word--------------->"+[JSON.stringify(bb.sort())==JSON.stringify(word_1.sort())])
	console.log("AOX---------------->"+[c==AOX])
	console.log("note--------------->"+[n==note])
	console.log("num---------------->"+[JSON.stringify(num_2.sort())==JSON.stringify(num_1.sort())])
	console.log("test--------------->"+[JSON.stringify(test_1.sort())==JSON.stringify(test_2.sort())])
	console.log("NEUROLOGICAL------->"+[JSON.stringify(neuro_1.sort())==JSON.stringify(neuro_2.sort())])
	console.log("level-------------->"+[JSON.stringify(ref.sort())==JSON.stringify(ref_1.sort())])
	console.log("functional--------->"+[JSON.stringify(functional_1.sort())==JSON.stringify(functional_2.sort())])
	console.log("other-------------->"+[JSON.stringify(other_1.sort())==JSON.stringify(abc_20.sort())])

}
}        