var Data = require('../EHR_Json/data.json')
var exam = require('../EHR_Json/examform1.json')

var gait=[].sort();               var b1=[].sort();       var b2=[].sort();   
var pain=[].sort();               var i1=[].sort();       var i2=[].sort();
var better=[].sort();             var l1=[].sort();       var l2=[].sort();
var done=[].sort();               var m1=[].sort();       var m2=[].sort();
var worse=[].sort();              var n1=[].sort();       var n2=[].sort();
var describe_pain=[].sort();      var o1=[].sort();       var o2=[].sort();
var condition_affected=[].sort(); var v1=[].sort();       var v2=[].sort();
var a; var appearance=[].sort();
var c; var weight=[].sort();
var d; var posture=[].sort();
var e; var head=[].sort();
var f; var visceral=[].sort();
var g; var rombergs=[].sort();
var h; var cn=[].sort();
var j; var begin=[].sort();
var k; var episode=[].sort();
var p; var constant=[].sort();
var q; var pain_shoot=[].sort();
var r; var describe=[].sort();
var s; var worse_in=[].sort();
var t; var condition=[].sort();
var u; var working=[].sort();
var other1=[];    var oth1=[];  var ck_1=[];        var abc1=[];
var other2=[];    var oth2=[];  var ck_2=[];        var abc2=[];
var other3=[];    var oth3=[];  var ck_3=[];        var abc3=[];
var other4=[];    var oth4=[];  var ck_4=[];        var abc4=[];
var other5=[];    var oth5=[];  var ck_5=[];        var abc5=[];
var other6=[];    var oth6=[];
var other7=[];    var oth7=[];  var ck_7=[];        var abc7=[];
var hei;     var hei_1=[];
var wei;     var wei_1=[];
var tem;     var tem_1=[];
var bbpp;    var bbpp_1=[];
var pul;     var pul_1=[];

var id;

module.exports={
    login : function (browser) {
        browser 
        .login(Data.user1[2].username, Data.user1[2].password)

},
'Patient' : function(browser){
	browser  
	   .useCss()
	   .pause(500)
	   .click('a[class="firstLevel"][href="#"]')
	   .pause(300)
	   .click('a[href="/EHR/Doctor/view-patient-details-open"]')
	   .waitForElementVisible('#col0_filter' , 60000)
	   .pause(500)
	   .getText('td[class="sorting_1"]' , function(result){
	   	  id=result.value
	   	    browser
	   	       .useCss()
	   	       .click('a[onclick="postNavigateToProfile('+result.value+',1);"]')
	   })
	   .waitForElementVisible('button[onclick="openStartTreatment();"]' , 60000)
	   .pause(500)
},
'Exam Form':function(browser){	
   browser   
	   .useXpath()
	   .click("//*[@id='treatmentformsContent']/div[2]/span/button")
	   .useCss()
	   .waitForElementVisible('button[onclick="addSoapNotes();"]' , 60000)
	   .pause(500)
	   .useXpath()
	   .click("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 1 -']")
	   .useCss()
	   .waitForElementVisible('#patientName_id' , 60000)
	   .pause(500)
	   .exam1(gait,pain,better,done,worse,describe_pain,condition_affected, other1 ,other2, other3, other4, other5, other7)
	       a=Math.floor((Math.random()*4)+1)
           c=Math.floor((Math.random()*3)+1)
           d=Math.floor((Math.random()*2)+1)
           e=Math.floor((Math.random()*2)+1)
           f=Math.floor((Math.random()*2)+1)
           g=Math.floor((Math.random()*2)+1)
           h=Math.floor((Math.random()*2)+1)
           hei=Math.floor((Math.random()*3)+0)
           wei=Math.floor((Math.random()*3)+0)
           tem=Math.floor((Math.random()*3)+0)
           bbpp=Math.floor((Math.random()*3)+0)
           pul=Math.floor((Math.random()*3)+0)
  browser
      .pause(500)
      .useCss()
      .getLocationInView('#abnormalFindings_id')
      .pause(500)
      .getLocationInView('#patientName_id')
      .clearValue('#height_id')
      .setValue('#height_id' , exam.heigh[hei])
      .clearValue('#patientWeight_id')
      .setValue('#patientWeight_id' , exam.weight[wei])
      .clearValue('#tempature_id')
      .setValue('#tempature_id' , exam.temp[tem])
      .clearValue('#bp_id')
      .setValue('#bp_id' , exam.bp[bbpp])
      .clearValue('#pulse_id')
      .setValue('#pulse_id' , exam.pulse[pul])
      .pause(300)
      .click('input[name="appearance"][value="'+a+'"]')
        for(z=0; z<3; z++){
          var not_1=['gaitAntalgic' , 'gaitLimp' , 'gaitSway' , 'gaitStagger' , 'gaitNormal']
          b=Math.floor((Math.random()*5)+1)
          gait.push(b)
          browser
        .click('input[name="'+not_1[b-1]+'"][value="1"]')
        }
        browser
          .click('input[name="weight"][value="'+c+'"]')
          .click('input[name="posture"][value="'+d+'"]')
          .click('input[name="headEent"][value="'+e+'"]')
          .click('input[name="visceralPathologies"][value="'+f+'"]')
          .click('input[name="rombergsSign"][value="'+g+'"]')
          .click('input[name="cnExam"][value="'+h+'"]')
          .clearValue('#headEentText_id')
          .setValue('#headEentText_id' , 'normal')
          .clearValue('#visceralPathologiesText_id')
          .setValue('#visceralPathologiesText_id' , 'abnormal')
          .clearValue('#abnormalFindings_id')
          .setValue('#abnormalFindings_id' , 'abnormal Findings')
          .pause(500)
          .getLocationInView('#onWhatDateDidYourInjuryOccur_id')
          .pause(500)
          .getLocationInView('#visceralPathologiesText_id')
          .pause(500)
       for(var z=0 ; z<5 ; z++){
         i=Math.floor((Math.random()*15)+0)
         pain.push(i)
         if(i<=13){
        browser
        .useCss()
        .click(exam.pain[i])
      }
            if (i==14){
           
              browser
              .useCss()
              .click(exam.pain[i])
              .pause(500)
              .isVisible('#painInYourOtherText_id' , function(result) {
                         if(result.value==true){
                      zz1=Math.floor((Math.random()*3)+0)
                      other1.push(zz1)
                      browser
                      .useCss()
                     .clearValue('#painInYourOtherText_id')
                     .setValue('#painInYourOtherText_id' , exam.tex[zz1])
            }
          })
            }
        }
        browser
        .pause(500)
        .useCss()
        .getLocationInView('#describeThePainSharp_id')
        .pause(500)
        .getLocationInView('#painInYourHand_id')
      j=Math.floor((Math.random()*2)+1)
      k=Math.floor((Math.random()*3)+1)
      var not_2=['feelBetterLyingdown' , 'feelBetterSitting' , 'feelBetterStanding' , 'feelBetterBending' , 'feelBetterRest' , 'feelBetterOther']
        browser
          .click('input[name="didItBeginGraduallyOrSuddenly"][value="'+j+'"]')
          .clearValue('#didItBeginGraduallyOrSuddenlyHours_id')
          .setValue('#didItBeginGraduallyOrSuddenlyHours_id' , j)
          .clearValue('#didItBeginGraduallyOrSuddenlyDays_id')
          .setValue('#didItBeginGraduallyOrSuddenlyDays_id' , k)
          .clearValue('#howDidItHappen_id')
          .setValue('#howDidItHappen_id' , 'how did it happen')
          .click('input[name="chronicInjury"][value="'+k+'"]')
          for(z=0; z<3; z++){
            l=Math.floor((Math.random()*6)+1)
            better.push(l)
              if(l<=5){
                 browser
                    .useCss()
                    .click('input[name="'+not_2[l-1]+'"][value="1"]')
              }
              if(l==6){
                 browser
                    .useCss()
                    .click('input[name="'+not_2[l-1]+'"][value="1"]')
                    .pause(500)
                    .isVisible('#feelBetterOther_id' , function(result) {
                      if(result.value==true){
                         zz2=Math.floor((Math.random()*3)+0)
                         other2.push(zz2)
                         browser
                      .useCss()
                      .clearValue('#feelBetterOther_id')
                      .setValue('#feelBetterOther_id' , exam.tex[zz2])
                    }
                  })
                  }
                }
                for(z=0; z<3;z++){
                	var not_3=['doneForItIce' , 'doneForItHeat' , 'doneForItMassage' , 'doneForItAspirin' , 'doneForItOther']
                    m=Math.floor((Math.random()*5)+1)
                   done.push(m)
                       if(m<=4){
                             browser
                                .useCss()
                                .click('input[name="'+not_3[m-1]+'"][value="1"]')
                        }
                        if(m==5){
                            browser
                               .useCss()
                               .click('input[name="'+not_3[m-1]+'"][value="1"]')
                               .pause(500)
                               .isVisible('#doneForItOther_id' , function(result) {
                                   if(result.value==true){
                                       zz3=Math.floor((Math.random()*3)+0)
                                       other3.push(zz3)
                                           browser
                                               .useCss()
                                               .clearValue('#doneForItOther_id')
                                               .setValue('#doneForItOther_id' , exam.tex[zz3])
                                    }
                                })
                        }
                }
                for(z=0; z<3; z++){
                	var not_4=['feelWorseBending' , 'feelWorseTwisting' , 'feelWorseLifting' , 'feelWorseWalking' , 'feelWorseActivity' , 'feelWorseOther']
                  n=Math.floor((Math.random()*6)+1)
                  worse.push(n)
                          if(n<=5){
                               browser
                                    .useCss()
                                    .click('input[name="'+not_4[n-1]+'"][value="1"]')
                          }
                         if(n==6){
                               browser
                                   .useCss()
                                   .click('input[name="'+not_4[n-1]+'"][value="1"]')
                                   .pause(500)
                                   .isVisible('#feelWorseOther_id' , function(result) {
                                       if(result.value==true){
                                           zz4=Math.floor((Math.random()*3)+0)
                                           other4.push(zz4)
                                               browser
                                                  .useCss()
                                                  .clearValue('#feelWorseOther_id')
                                                  .setValue('#feelWorseOther_id' , exam.tex[zz4])
                                        }
                                    })
                          }
                 } 
              browser
                  .useCss()
                  .pause(500)
                  .getLocationInView('#conditionAffectedYourDailyWork_id')
                  .pause(500)
                  .getLocationInView('#feelWorseBending_id')
                     for(z=0; z<5; z++){
                        o=Math.floor((Math.random()*12)+0)
                        describe_pain.push(o+1)
                           browser
                            .pause(500)
                                if(o<=10){
                                    browser
                                      .useCss()
                                      .click(exam.describe_pain[o])
                                }
                                if(o==11){
                                    browser
                                      .useCss()
                                      .click(exam.describe_pain[o])
                                      .pause(500)
                                      .isVisible('#describeThePainOther_id' , function(result) {
                                          if(result.value==true){
                                             zz5=Math.floor((Math.random()*3)+0)
                                             other5.push(zz5)
                                                browser
                                                   .useCss()
                                                   .clearValue('#describeThePainOther_id')
                                                   .setValue('#describeThePainOther_id' , exam.tex[zz5])
                                          }
                                      })
                                }     
                      }        
                 p=Math.floor((Math.random()*2)+1)
                 q=Math.floor((Math.random()*3)+1)
                 r=Math.floor((Math.random()*4)+1)
             
        browser
           .useCss()
           .click('input[name="constantOrComesAndGo"][value="'+p+'"]')
           .click('input[name="shootDownYourArmLeg"][value="'+q+'"]')
           .clearValue('#shootDownYourArmLegTo_id')
           .setValue('#shootDownYourArmLegTo_id' , 'arm to leg')
           .click('input[name="describeItAs"][value="'+r+'"]')
     s=Math.floor((Math.random()*3)+1)
        browser
          .useCss()
          .click('input[name="morningOrAtNight"][value="'+s+'"]')
             if(s==3){
                zz6=Math.floor((Math.random()*3)+0)
                other6.push(zz6)
                    browser
                       .useCss()
                       .clearValue('#morningOrAtNightOther_id')
                       .setValue('#morningOrAtNightOther_id' , exam.tex[zz6])
             }
        t=Math.floor((Math.random()*3)+1)
        u=Math.floor((Math.random()*2)+1) 
         browser
           .useCss()
           .click('input[name="gettingWorseOrBetter"][value="'+t+'"]')
           .click('input[name="areYouWorking"][value="'+u+'"]')
             for(z=0; z<3; z++){
             	var not_5=['conditionAffectedYourDailyWork' , 'conditionAffectedYourDailySleep' , 'conditionAffectedYourDailyHousework' , 'conditionAffectedYourDailyOther']
                v=Math.floor((Math.random()*4)+1) 
                condition_affected.push(v) 
                    if(v<=3){
                        browser
                           .useCss()
                           .pause(500)
                           .getLocationInView('button[onclick="return initialExamScreenOneValidation();"]')
                           .pause(500)
                           .getLocationInView('#gettingWorseOrBetterBetter_id')
                           .pause(500)
                           .click('input[name="'+not_5[v-1]+'"][value="1"]')
                    }     
                     if(v==4){
                        browser
                           .useCss()
                           .pause(500)
                           .getLocationInView('button[onclick="return initialExamScreenOneValidation();"]')
                           .pause(500)
                           .getLocationInView('#gettingWorseOrBetterBetter_id')
                           .pause(500)
                           .click('input[name="'+not_5[v-1]+'"][value="1"]')
                           .pause(500)
                           .isVisible('#conditionAffectedYourDailyOther_id' , function(result) {
                                if(result.value==true){
                                     zz7=Math.floor((Math.random()*3)+0)
                                     other7.push(zz7)
                                         browser
                                            .useCss()
                                            .clearValue('#conditionAffectedYourDailyOther_id')
                                            .setValue('#conditionAffectedYourDailyOther_id' , exam.tex[zz7])
                                }
                            })
                     }
             }
     browser
     .useCss()
     .getLocationInView('button[onclick="return initialExamScreenOneValidation();"]')
     .pause(500)
     .getLocationInView('#describeThePainStabbing_id')
     .pause(500)
     .useCss()
     .getLocationInView('button[onclick="return initialExamScreenOneValidation();"]')
     .pause(500)
     .getLocationInView('#conditionAffectedYourDailyWork_id')
     .pause(500)
     .click('button[onclick="return initialExamScreenOneValidation();"]')
  //-------------------
     browser
      .useXpath()
      .waitForElementVisible("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 1 -']" , 60000)
      .pause(500)
      .click("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 1 -']")
      .useCss()
      .waitForElementVisible('#patientName_id' , 60000)
      .pause(1000)
      .getLocationInView('#sex_id')
      .pause(500)  

 },
 'check' :function(browser){
   browser
   
gait.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < gait.length; i++) {
    if (gait[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      b2.push(current)
    }
        }
        current = gait[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      b2.push(current)
    }
}

//-------------------------------------------------------------------------------------------
pain.sort();
var current = null;
var cnt = 0;
for (var i = 0; i < pain.length; i++) {
    if (pain[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      i2.push(current)
    }
        }
        current = pain[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      i2.push(current)
    }
}
//------------------------------------------------------------------------------------------------
better.sort();
var current = null;
var cnt = 0;
for (var i = 0; i < better.length; i++) {
    if (better[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      l2.push(current)
    }
        }
        current = better[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      l2.push(current)
    }
}//---------------------------------------------------------------------------------------------------
done.sort();
var current = null;
var cnt = 0;
for (var i = 0; i < done.length; i++) {
    if (done[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      m2.push(current)
    }
        }
        current = done[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      m2.push(current)
    }
}
//-----------------------------------------------------------------------------------------------------
worse.sort();
var current = null;
var cnt = 0;
for (var i = 0; i < worse.length; i++) {
    if (worse[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      n2.push(current)
    }
        }
        current = worse[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      n2.push(current)
    }
}
//-------------------------------------------------------------------------------------------------------------
describe_pain.sort();
var current = null;
var cnt = 0;
for (var i = 0; i < describe_pain.length; i++) {
    if (describe_pain[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      o2.push(current)
    }
        }
        current = describe_pain[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      o2.push(current)
    }
}
//----------------------------------------------------------------------------------------------------------------
condition_affected.sort();
var current = null;
var cnt = 0;
for (var i = 0; i < condition_affected.length; i++) {
    if (condition_affected[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      v2.push(current)
    }
        }
        current = condition_affected[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      v2.push(current)
    }
}
//----------------------------------------------------------------------------------------------------------------------
for(i=0;i<pain.length;i++){
          if(pain[i]==14){
           ck_1.push(pain[i])

           
        }
        }
        if(ck_1.length%2==1){
           if(other1.length>0){
      abc1.push(other1.pop())
    }
    }

//-------------------------------------------------------------------------------------------
for(i=0;i<better.length;i++){
          if(better[i]==6){
           ck_2.push(better[i])

           
        }
        }
        if(ck_2.length%2==1){
           if(other2.length>0){
      abc2.push(other2.pop())
    }
    }

//-------------------------------------------------------------------------------------------
for(i=0;i<done.length;i++){
          if(done[i]==5){
           ck_3.push(done[i])

           
        }
        }
        if(ck_3.length%2==1){
           if(other3.length>0){
      abc3.push(other3.pop())
    }
    }

//-------------------------------------------------------------------------------------------
for(i=0;i<worse.length;i++){
          if(worse[i]==6){
           ck_4.push(worse[i])

           
        }
        }
        if(ck_4.length%2==1){
           if(other4.length>0){
      abc4.push(other4.pop())
    }
    }

//-------------------------------------------------------------------------------------------
for(i=0;i<describe_pain.length;i++){
          if(describe_pain[i]==12){
           ck_5.push(describe_pain[i])

           
        }
        }
        if(ck_5.length%2==1){
           if(other5.length>0){
      abc5.push(other5.pop())
    }
    }

//-------------------------------------------------------------------------------------------
for(i=0;i<condition_affected.length;i++){
          if(condition_affected[i]==4){
           ck_7.push(condition_affected[i])

           
        }
        }
        if(ck_7.length%2==1){
           if(other7.length>0){
      abc7.push(other7.pop())
    }
    }

//-------------------------------------------------------------------------------------------
browser
 .pause(500)
 .examform1(exam,appearance,b1,weight,posture,head,visceral,rombergs,cn,i1,begin,episode,l1,m1,n1,o1,constant,pain_shoot,describe,worse_in,condition,working,v1, oth1,
            oth2, oth3, oth4, oth5, oth6, oth7, hei_1, wei_1, tem_1, bbpp_1, pul_1,hei,wei,tem,bbpp,pul,a,c,b2,d,e,g,f,h,i2,j,k,l2,abc1,abc2,abc3,abc4,abc5,other6,abc7,
            m2,n2,o2,p,q,r,s,t,u,v2)
 .pause(500)
 .end()
},
'Result' : ''+function (browser){
  browser
          console.log("height-------------->"+[hei==hei_1])
          console.log("weight-------------->"+[wei==wei_1])
          console.log("temp---------------->"+[tem==tem_1])
          console.log("BP------------------>"+[bbpp==bbpp_1])
          console.log("Pulse--------------->"+[pul==pul_1])
          console.log("gait---------------->"+[JSON.stringify(b1.sort())==JSON.stringify(b2.sort())])
          console.log("pain---------------->"+[JSON.stringify(i1.sort())==JSON.stringify(i2.sort())])
          console.log("better-------------->"+[JSON.stringify(l1.sort())==JSON.stringify(l2.sort())])
          console.log("done---------------->"+[JSON.stringify(m1.sort())==JSON.stringify(m2.sort())])
          console.log("worse--------------->"+[JSON.stringify(n1.sort())==JSON.stringify(n2.sort())])
          console.log("describe_pain------->"+[JSON.stringify(o1.sort())==JSON.stringify(o2.sort())])
          console.log("condition_affected-->"+[JSON.stringify(v1.sort())==JSON.stringify(v2.sort())])
          console.log("appearance---------->"+(a == appearance))
          console.log("weight-------------->"+(c == weight))
          console.log("posture------------->"+(d == posture))
          console.log("head---------------->"+(e == head))
          console.log("visceral------------>"+(f == visceral))
          console.log("rombergs------------>"+(g == rombergs))
          console.log("cn------------------>"+(h == cn))
          console.log("begin--------------->"+(j == begin))
          console.log("episode------------->"+(k == episode))
          console.log("constant------------>"+(p == constant))
          console.log("pain_shoot---------->"+(q == pain_shoot))
          console.log("describe------------>"+(r == describe))
          console.log("worse_in------------>"+(s == worse_in))
          console.log("condition----------->"+(t == condition))
          console.log("working------------->"+(u == working))
          console.log("other1-------------->"+[JSON.stringify(oth1.sort())==JSON.stringify(abc1.sort())])
          console.log("other2-------------->"+[JSON.stringify(oth2.sort())==JSON.stringify(abc2.sort())])
          console.log("other3-------------->"+[JSON.stringify(oth3.sort())==JSON.stringify(abc3.sort())])
          console.log("other4-------------->"+[JSON.stringify(oth4.sort())==JSON.stringify(abc4.sort())])
          console.log("other5-------------->"+[JSON.stringify(oth5.sort())==JSON.stringify(abc5.sort())])
          console.log("other6-------------->"+[JSON.stringify(oth6.sort())==JSON.stringify(other6.sort())])
          console.log("other7-------------->"+[JSON.stringify(oth7.sort())==JSON.stringify(abc7.sort())])
        

}
}