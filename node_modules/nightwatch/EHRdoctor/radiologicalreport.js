var Data = require('../EHR_Json/data.json')
var rad = require('../EHR_Json/radiological.json')
var cervical_view=[]; var a1=[];        var aa1=[];
var vi1=[];           var a2=[];        var aa2=[];
var cer_RC1=[];       var cer1=[];      var cc=[];     var aa3=[]; 
var cer_RC2=[];       var cer2=[];      var ee=[];     var aa4=[]; 
var d;                var cer_deg=[];
var text1=[];         var t1=[];
//----------------------------------------------------------------- 
var cer_RC3=[];          var hh=[];         var cer3=[];    var aa5=[];       
var cer_RC4=[];          var jj=[];         var cer4=[];    var aa6=[];       
var cer_RC5=[];          var kk=[];         var cer5=[];    var aa7=[];       
var cer_RC6=[];          var ll=[];         var cer6=[];    var aa8=[];       
var thoracis_view=[];    var tho_view=[];   var mm=[]; 
var che2=[];             var check2=[];     var nn=[];         
var cer_Foraminal=[];    var g;
var text2=[];            var t2=[];
var other=[];            var others1=[];    var ck_2=[];    var zzz1=[];
//-------------------------------------------------------------------
var thoracic_RC1=[]; var thoracic1=[];  var thora1=[];   var aa9=[];
var thoracic_RC2=[]; var thoracic2=[];  var thora2=[];   var aa10=[];
var thoracic_RC3=[]; var thoracic3=[];  var thora3=[];   var aa11=[];
var lumbar_view=[];  var lum_view=[];   var aa12=[]; 
var che3=[];         var check3=[];     var aa13=[];
var other2=[];       var oth2=[];       var ck_3=[];     var zzz2=[];
var text3=[];        var t3=[];
//-------------------------------------------------------------------
var lumbar_RC1=[];   var lumbar1=[];     var lumb1=[];   var aa16=[];   
var lumbar_RC2=[];   var lumbar2=[];     var lumb2=[];   var aa17=[];
var lumbar_RC3=[];   var lumbar3=[];     var lumb3=[];   var aa14=[];  
var che4=[];        var check4=[];       var aa15=[];
var y;               var Degenerative=[];
var za;              var Spondylolisthesis=[];
var zb;              var Grade=[];
var other3=[];       var others3=[];
var text4=[];        var t4=[];
//-------------------------------------------------------------------------
var thoracic_RC4=[];   var thoracic4=[];   var tho4=[];   var aa20=[];
var che5=[];           var check5=[];                     var aa21=[];
var other4=[];         var otherss4=[];
var other5=[];         var otherss5=[];    var ck_5=[];   var zzz3=[];
var zf;               var lumbar_segment=[];
var zg;               var lumbar_For=[];
var text5=[];         var t5=[];
//-------------------------------------------------------------------------
var xray_che=[];     var xcheck=[];    var x_cbox=[];
var ot_xray=[];      var otcheck=[];   var ot_ck=[];

var id;

module.exports={
    login : function (browser) {
        browser 
        .login(Data.user1[2].username, Data.user1[2].password)

},
'Patient' : function(browser){
	browser  
	   .useCss()
	   .pause(500)
	   .click('a[class="firstLevel"][href="#"]')
	   .pause(300)
	   .click('a[href="/EHR/Doctor/view-patient-details-open"]')
	   .waitForElementVisible('#col0_filter' , 60000)
	   .pause(500)
	   .getText('td[class="sorting_1"]' , function(result){
	   	  id=result.value
	   	    browser
	   	       .useCss()
	   	       .click('a[onclick="postNavigateToProfile('+result.value+',1);"]')
	   })
	   .waitForElementVisible('button[onclick="openStartTreatment();"]' , 60000)
	   .pause(500)
},
'radiological report':function(browser){	
   browser   
	    .useXpath()
	    .click("//*[@id='treatmentformsContent']/div[2]/span/button")
	    .useCss()
	    .waitForElementVisible('button[onclick="addSoapNotes();"]' , 60000)
	    .pause(1000)
	    .useXpath()
        .pause(500)
        .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 8 -']")
        .pause(500)
        .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 7 -']")
        .pause(500)
        .click("//*[@id='treatmentformsContent']/div/a[text()='Radiological Report -']")
        .useCss()
	    .waitForElementVisible('button[onclick="gobackExamsList()"]' , 60000)
	    .pause(500)
        .radio(cervical_view , vi1 , cer_RC1 , cer_RC2, cer_RC3, cer_RC4, cer_RC5, cer_RC6, thoracis_view, che2, thoracic_RC1, thoracic_RC2, thoracic_RC3,che4 , lumbar_view, che3, lumbar_RC1, lumbar_RC2, lumbar_RC3,thoracic_RC4, che5 , xray_che, ot_xray, other, other2, other5)
        
        .useCss()
        .pause(1000)
        .getLocationInView('#cervicalNarrowedDiscSpace1')
        .pause(1000)
        .getLocationInView('#date_id')
        .pause(1000)
        for(i=0; i<3; i++){
           a=Math.floor((Math.random()*9)+1)
           cervical_view.push(a)
           var not_1=['cervicalApLower' , 'cervicalApom' , 'cervicalLLateral' , 'cervicalRlf' , 'cervicalLlf' , 'cervicalRpo' , 'cervicalLpo' , 'cervicalFlex' , 'cervicalExt']
             browser
                .useCss()
                .click('input[name="'+not_1[a-1]+'"][value="1"]')
        }
        browser
           .useCss()
           .pause(500)
           .getLocationInView('#cervicalDecreasedRorlFlex1')
           .pause(500)
           .getLocationInView('input[name="patientName"]')
           .pause(500)

           for(i=0; i<5; i++){
        	b=Math.floor((Math.random()*14)+0)
        	vi1.push(b)
               if (b<=11) {
                 browser
                   .useCss()
                   .click(rad.view1[b])
               }

              if(b>11){
                browser
                  .useCss()
                  .getLocationInView('#cervicalApex1')
                  .pause(500)
                  .getLocationInView('#cervicalNarrowedDiscSpace1')
                  .pause(500)
                  .click(rad.view1[b])
                  .pause(500)
                  .getLocationInView('#cervicalDecreasedRorlFlex1')
                  .pause(500)
                  .getLocationInView('input[name="patientName"]')
                  .pause(500)
              }
          }
       c=Math.floor((Math.random()*3)+1)
       d=Math.floor((Math.random()*6)+1)
       e=Math.floor((Math.random()*3)+1)
       cer1.push(c)
       cer2.push(e)
        browser
           .useCss()
           .click('input[name="cervicalHyperlordosisSegment"][value="'+c+'"]')
           .click('input[name="cervicalDegenerativeJointCSegment"][value="'+d+'"]')
           .click('input[name="cervicalDegenerativeJointMildSegment"][value="'+e+'"]')

          for(i=0; i<=5; i++){
             f=Math.floor((Math.random()*4)+0)
             text1.push(f)
                browser
                   .useCss()
       	           .clearValue(rad.text1[i])
       	           .setValue(rad.text1[i] , rad.tex[f])
          } 
           
           g=Math.floor((Math.random()*6)+1)
           h=Math.floor((Math.random()*3)+1)
           j=Math.floor((Math.random()*3)+1)
           k=Math.floor((Math.random()*3)+1)
           l=Math.floor((Math.random()*3)+1)
           hh.push(h)
           jj.push(j)
           kk.push(k)
           ll.push(l)

            browser
               .pause(500)
               .getLocationInView('#lumbarNarrowedDisc1')
               .pause(500)
               .getLocationInView('#cervicalSubchondralSclerosis1')
               .pause(500)
               .useCss()
               .click('input[name="cervicalForaminalEnchroachmentSegment"][value="'+g+'"]')
               .click('input[name="cervicalOsteoporosisSegment"][value="'+h+'"]')
               .click('input[name="cervicalDecreasedFlexSegment"][value="'+j+'"]')
               .click('input[name="cervicalDecreasedRorlFlexSegment"][value="'+k+'"]')
               .click('input[name="cervicalDextroSegment"][value="'+l+'"]')
               .pause(1000)
               .useCss()
               .getLocationInView('input[name="thoracicNarrowedDiscSpaceText"]')
               .pause(1000)
               .getLocationInView('input[name="cervicalApexText"]')
               .pause(1000)
               for(i=0; i<3; i++){
                  m=Math.floor((Math.random()*8)+1)
                  thoracis_view.push(m)
                  not_2=['thoracicAp' , 'thoracicLLateral' , 'thoracicRlf' , 'thoracicLlf' , 'thoracicRpo' , 'thoracicLpo' , 'thoracicPaChest' , 'thoracicLateralChest']
                    browser
                      .useCss()
                      .click('input[name="'+not_2[m-1]+'"][value="1"]')
               }

               for(i=0; i<5;i++){
      n=Math.floor((Math.random()*13)+0)
      che2.push(n)
      if(n<=6){
      browser
      .useCss()
      .pause(500)
      .getLocationInView('#thoracicForaminalEnchroachment1')
      .pause(1000)
      .getLocationInView('#cervicalSubchondralSclerosis1')
      .pause(500)
      .click(rad.view2[n])
    }
    if(n>7){
      browser
      .useCss()
      .pause(500)
      .getLocationInView('#thoracicSubchondralSclerosis1')
      .pause(500)
      .getLocationInView('#cervicalDextro1')
      .pause(500)
      .click(rad.view2[n])

    }
       if(n==7){
         browser
         .useCss()
         .pause(500)
         .getLocationInView('#thoracicForaminalEnchroachment1')
         .pause(1000)
         .getLocationInView('#cervicalSubchondralSclerosis1')
         .pause(500)
         .click(rad.view2[n])
         .pause(500)
         .isVisible('#cervicalOtherTextId', function(result) {
            if(result.value==true){
               p=Math.floor((Math.random()*4)+0)
               other.push(p)
               
               browser
               .useCss()
              .setValue('#cervicalOtherTextId' , rad.tex[p])
              
            }
         })
       }
    }

    for(i=0; i<=2; i++){
    o=Math.floor((Math.random()*4)+0)
    text2.push(o)
    browser
    .useCss()
        .clearValue(rad.text2[i])
        .setValue(rad.text2[i] , rad.tex[o])
       }
       p=Math.floor((Math.random()*3)+1)
       q=Math.floor((Math.random()*3)+1)
       r=Math.floor((Math.random()*3)+1)
       thoracic1.push(p)
       thoracic2.push(q)
       thoracic3.push(r)

       browser
          .useCss()
          .pause(500)
          .getLocationInView('#lumbarNarrowedDisc1')
          .pause(500)
          .getLocationInView('#thoracicHyperkyphosis1')
          .pause(500)
          .click('input[name="thoracicDegenerativeJointDiseaseSegment"][value="'+p+'"]')
          .pause(500)
          .useCss()
          .getLocationInView('input[name="thoracicSchmorlsNodesText"]')
          .pause(500)
          .getLocationInView('#thoracicDegenerativeJointDisease1')
          .pause(500)
          .click('input[name="thoracicOsteoporosisSegment"][value="'+q+'"]')
          .click('input[name="thoracicDextroSegment"][value="'+r+'"]')
          .pause(500)
          .useCss()
          .getLocationInView('#lumbarNarrowedDisc1')
          .pause(500)
          .getLocationInView('#thoracicDextro1')
          .pause(500)
          for(i=0; i<3; i++){
             s=Math.floor((Math.random()*3)+1)
             lumbar_view.push(s)
             not_3=['lumbarApLower' , 'lumbarLLateral' , 'lumbarRlf' , 'lumbarLlf' , 'lumbarRpo' , 'lumbarLpo']
               browser
                .useCss()
                .click('input[name="'+not_3[s-1]+'"][value="1"]')
          }
          browser
       .useCss()
       .pause(500)
       .getLocationInView('#lumbarDecreasedRlf1')
       .pause(500)
       .getLocationInView('#thoracicDegenerativeJointDisease1')
       .pause(500)

       for(i=0; i<7; i++){
       t=Math.floor((Math.random()*10)+0)
         che3.push(t)
         if(t<=8){
         browser
         .useCss()
         .click(rad.view3[t])
       }
         if(t==9){
          browser

          .useCss()
          .click(rad.view3[t])
          .pause(500)
         .isVisible('#thoracicOtherTextId', function(result) {
            if(result.value==true){
               u=Math.floor((Math.random()*4)+0)
               other2.push(u)
               browser
               .useCss()
              .setValue('#thoracicOtherTextId' , rad.tex[u])
              
            }
         })
           
         }
       }

       for(i=0; i<=6; i++){
    v=Math.floor((Math.random()*4)+0)
    text3.push(v)
    browser
    .useCss()
        .clearValue(rad.text3[i])
        .setValue(rad.text3[i] , rad.tex[v])
       }
       w=Math.floor((Math.random()*3)+1)
       x=Math.floor((Math.random()*3)+1)
       y=Math.floor((Math.random()*5)+1)
       z=Math.floor((Math.random()*3)+1)
       za=Math.floor((Math.random()*3)+1)
       zb=Math.floor((Math.random()*4)+1)
       lumbar1.push(w)
       lumbar2.push(x)
       lumbar3.push(z)
       browser
        .useCss()
        .pause(500)
        .getLocationInView('#lumbarDecreasedRlf1')
        .pause(500)
        .getLocationInView('#thoracicApex1')
        .pause(500)       
        .useCss()
        .click('input[name="lumbarOsteoporosisSegment"][value="'+w+'"]')
        .click('input[name="lumbarHyperlordosisSegment"][value="'+x+'"]')
        .click('input[name="lumbarDegenerativeJointDiseaseLSegment"][value="'+y+'"]')
        .click('input[name="lumbarDegenerativeJointDiseaseMildlSegment"][value="'+z+'"]')
        .useCss()
        .pause(500)
        .getLocationInView('#lumbarLumbarization1')
        .pause(500)
        .getLocationInView('#lumbarAnteriorVertebralBody1')
        .pause(500)
        .useCss()
        .click('input[name="lumbarSpondylolisthesisSegment"][value="'+za+'"]')
        if(za==3){
          browser
          .useCss()
           .isVisible('#lumbarSpondylolisthesisText_id', function(result) {
            if(result.value==true){
               zc=Math.floor((Math.random()*4)+0)
               other3.push(zc)
               browser
               .useCss()
               .clearValue('#lumbarSpondylolisthesisText_id')
              .setValue('#lumbarSpondylolisthesisText_id' , rad.tex[zc])
              
            }
         })
         }
         browser
        .useCss()
        .pause(500)
        .click('input[name="lumbarGradeSegment"][value="'+zb+'"]')
        .pause(500)
        .getLocationInView('#extremetiesCptMapped13')
        .pause(500)
        .getLocationInView('#thoracicApex1')
        .pause(500)

        for(i=0; i<9; i++){
         zd=Math.floor((Math.random()*13)+0)
         che4.push(zd)
         if (zd<10) {
         browser
         .useCss()
         .click(rad.view4[zd])
       }else{
        browser
        .useCss()
        .pause(1000)
        .getLocationInView('#lumbarLumbarization1')
        .pause(1000)
        .getLocationInView('#lumbarAnteriorVertebralBody1')
        .pause(1000)
        .click(rad.view4[zd])
         .pause(1000)
        .getLocationInView('#extremetiesCptMapped13')
        .pause(1000)
        .getLocationInView('#thoracicApex1')
        .pause(1000)
       }

       }

        for(i=0; i<=4; i++){
    ze=Math.floor((Math.random()*4)+0)
    text4.push(ze)
    browser
    .useCss()
        .clearValue(rad.text4[i])
        .setValue(rad.text4[i] , rad.tex[ze])
       }
       zf=Math.floor((Math.random()*6)+1)
       zg=Math.floor((Math.random()*5)+1)
       zh=Math.floor((Math.random()*3)+1)
       thoracic4.push(zh)
       browser
       .useCss()
       .pause(1000)
       .getLocationInView('#extremetiesCptMapped22')
       .pause(1000)
       .getLocationInView('#lumbarSchmorlsNodes1')
       .pause(1000)
       .useCss()
       .click('input[name="lumbarRlsegment"][value="'+zf+'"]')
         if(zf==6){
            browser
           .useCss()
           .isVisible('#lumbarRlText_id', function(result) {    
            if(result.value==true){
               zi=Math.floor((Math.random()*4)+0)
               other4.push(zi)
               browser
               .useCss()
               .clearValue('#lumbarRlText_id')
               .setValue('#lumbarRlText_id' , rad.tex[zi])
              
             }
         })
          }  

           browser
          .useCss()
          .click('input[name="lumbarForaminalEnchroachmentSegment"][value="'+zg+'"]')
          .click('input[name="lumbarDextroSegment"][value="'+zh+'"]')

       for(i=0; i<5; i++){
         zj=Math.floor((Math.random()*11)+0)
         che5.push(zj)
         if(zj<=9){
         browser
         .useCss()
         .click(rad.view5[zj])
       }
           if(zj==10){
            browser
          .useCss()
          .click(rad.view5[zj])
          .pause(500)
           .isVisible('#lumbarOtherTextId', function(result) {
            if(result.value==true){
               zk=Math.floor((Math.random()*4)+0)
               other5.push(zk)
               browser
               .useCss()
               .clearValue('#lumbarOtherTextId')
              .setValue('#lumbarOtherTextId' , rad.tex[zk])
              
            }
         })
       }
     }

      for(i=0; i<=1; i++){
    zl=Math.floor((Math.random()*4)+0)
    text5.push(zl)
    browser
    .useCss()
        .clearValue(rad.text5[i])
        .setValue(rad.text5[i] , rad.tex[zl])
       }
       browser
              .useCss()
              .pause(500)
              .getLocationInView('#othersCptMapped23')
              .pause(500)
              .getLocationInView('#lumbarApex1')
              .pause(500)
       for(i=0; i<15; i++){
         zm=Math.floor((Math.random()*31)+0)
         xray_che.push(zm)
         browser
         .useCss()
         .click(rad.xray[zm])
       }
       browser              
              .useCss()
              .pause(500)
              .getLocationInView('#othersCptMapped27')
              .pause(500)
              .getLocationInView('#extremetiesCptMapped28')
              .pause(500)

       for(i=0;i<15;i++){
         zn=Math.floor((Math.random()*27)+0)
         ot_xray.push(zn)
         browser
         .useCss()
         .click(rad.otxray[zn])
       }

       browser
       .useCss()
       .pause(500)
       .getLocationInView('button[onclick="return update()"]')
       .pause(500)
       .getLocationInView('#othersCptMapped19')
       .pause(500)

        browser
       .useCss()
       .pause(1000)
       .useCss()
        .click('button[onclick="return update()"]')
        .pause(1000)
       .useXpath()
       .waitForElementVisible("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 1 -']", 60000)
        .pause(500)
        .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 8 -']")
        .pause(500)
        .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 7 -']")
        .pause(500)
        .click("//*[@id='treatmentformsContent']/div/a[text()='Radiological Report -']")
        .useCss()
	    .waitForElementVisible('button[onclick="gobackExamsList()"]' , 60000)
	    .pause(500)

    },
'Check': function(browser){
	browser
	cervical_view.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < cervical_view.length; i++) {
    if (cervical_view[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa1.push(current)
    }
        }
        current = cervical_view[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa1.push(current)
    }
}

//-------------------------------------------------------------------------------------------
vi1.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < vi1.length; i++) {
    if (vi1[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa2.push(current)
    }
        }
        current = vi1[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa2.push(current)
    }
}

//-------------------------------------------------------------------------------------------
if(cer_RC1.length > 0 && cer1.length > 0){
                  if(cer_RC1[0]!=cer1[0]){
                  cc.push(cer1[0])
                }
          }
    else{
      cc.push(cer1[0])
    }

//-------------------------------------------------------------------------------------------
if(cer_RC2.length > 0 && cer2.length > 0){
                  if(cer_RC2[0]!=cer2[0]){
                  ee.push(cer2[0])
                }
          }
    else{
      ee.push(cer2[0])
    }

//-------------------------------------------------------------------------------------------
thoracis_view.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < thoracis_view.length; i++) {
    if (thoracis_view[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      mm.push(current)
    }
        }
        current = thoracis_view[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      mm.push(current)
    }
}

//-------------------------------------------------------------------------------------------
che2.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < che2.length; i++) {
    if (che2[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      nn.push(current)
    }
        }
        current = che2[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      nn.push(current)
    }
}

//-------------------------------------------------------------------------------------------
if(cer_RC3.length > 0 && hh.length > 0){
                  if(cer_RC3[0]!=hh[0]){
                  aa5.push(hh[0])
                }
          }
    else{
      aa5.push(hh[0])
    }

//-------------------------------------------------------------------------------------------
if(cer_RC4.length > 0 && jj.length > 0){
                  if(cer_RC4[0]!=jj[0]){
                  aa6.push(jj[0])
                }
          }
    else{
      aa6.push(jj[0])
    }

//-------------------------------------------------------------------------------------------
if(cer_RC5.length > 0 && kk.length > 0){
                  if(cer_RC5[0]!=kk[0]){
                  aa7.push(kk[0])
                }
          }
    else{
      aa7.push(kk[0])
    }

//-------------------------------------------------------------------------------------------
if(cer_RC6.length > 0 && ll.length > 0){
                  if(cer_RC6[0]!=ll[0]){
                  aa8.push(ll[0])
                }
          }
    else{
      aa8.push(ll[0])
    }

//-------------------------------------------------------------------------------------------
if(thoracic_RC1.length > 0 && thoracic1.length > 0){
                  if(thoracic_RC1[0]!=thoracic1[0]){
                  aa9.push(thoracic1[0])
                }
          }
    else{
      aa9.push(thoracic1[0])
    }

//-------------------------------------------------------------------------------------------
if(thoracic_RC2.length > 0 && thoracic2.length > 0){
                  if(thoracic_RC2[0]!=thoracic2[0]){
                  aa10.push(thoracic2[0])
                }
          }
    else{
      aa10.push(thoracic2[0])
    }

//-------------------------------------------------------------------------------------------
if(thoracic_RC3.length > 0 && thoracic3.length > 0){
                  if(thoracic_RC3[0]!=thoracic3[0]){
                  aa11.push(thoracic3[0])
                }
          }
    else{
      aa11.push(thoracic3[0])
    }

//-------------------------------------------------------------------------------------------
lumbar_view.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < lumbar_view.length; i++) {
    if (lumbar_view[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa12.push(current)
    }
        }
        current = lumbar_view[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa12.push(current)
    }
}

//-------------------------------------------------------------------------------------------
che3.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < che3.length; i++) {
    if (che3[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa13.push(current)
    }
        }
        current = che3[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa13.push(current)
    }
}

//-------------------------------------------------------------------------------------------
if(lumbar_RC1.length > 0 && lumbar1.length > 0){
                  if(lumbar_RC1[0]!=lumbar1[0]){
                  aa16.push(lumbar1[0])
                }
          }
    else{
      aa16.push(lumbar1[0])
    }

//-------------------------------------------------------------------------------------------
if(lumbar_RC2.length > 0 && lumbar2.length > 0){
                  if(lumbar_RC2[0]!=lumbar2[0]){
                  aa17.push(lumbar2[0])
                }
          }
    else{
      aa17.push(lumbar2[0])
    }

//-------------------------------------------------------------------------------------------
if(lumbar_RC3.length > 0 && lumbar3.length > 0){
                  if(lumbar_RC3[0]!=lumbar3[0]){
                  aa14.push(lumbar3[0])
                }
          }
    else{
      aa14.push(lumbar3[0])
    }

//-------------------------------------------------------------------------------------------
che4.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < che4.length; i++) {
    if (che4[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa15.push(current)
    }
        }
        current = che4[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa15.push(current)
    }
}

//-------------------------------------------------------------------------------------------
if(thoracic_RC4.length > 0 && thoracic4.length > 0){
                  if(thoracic_RC4[0]!=thoracic4[0]){
                  aa20.push(thoracic4[0])
                }
          }
    else{
      aa20.push(thoracic4[0])
    }

//-------------------------------------------------------------------------------------------
che5.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < che5.length; i++) {
    if (che5[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa21.push(current)
    }
        }
        current = che5[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa21.push(current)
    }
}

//-------------------------------------------------------------------------------------------
xray_che.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < xray_che.length; i++) {
    if (xray_che[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      x_cbox.push(current)
    }
        }
        current = xray_che[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      x_cbox.push(current)
    }
}

//-------------------------------------------------------------------------------------------
ot_xray.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < ot_xray.length; i++) {
    if (ot_xray[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      ot_ck.push(current)
    }
        }
        current = ot_xray[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      ot_ck.push(current)
    }
}

//-------------------------------------------------------------------------------------------
for(i=0;i<che2.length;i++){
          if(che2[i]==7){
           ck_2.push(che2[i])

           
        }
        }
        if(ck_2.length%2==1){
           if(other.length>0){
      zzz1.push(other.pop())
    }
    }

//-------------------------------------------------------------------------------------------
for(i=0;i<che3.length;i++){
          if(che3[i]==9){
           ck_3.push(che3[i])

           
        }
        }
        if(ck_3.length%2==1){
           if(other2.length>0){
      zzz2.push(other2.pop())
    }
    }

//-------------------------------------------------------------------------------------------
for(i=0;i<che5.length;i++){
          if(che5[i]==10){
           ck_5.push(che5[i])

           
        }
        }
        if(ck_5.length%2==1){
           if(other5.length>0){
      zzz3.push(other5.pop())
    }
    }

//-------------------------------------------------------------------------------------------
browser
   .pause(500)
   .radiological(rad,a1, a2 , t1 ,aa3 ,aa4, cer_deg, cer_Foraminal, cer3, cer4, cer5, cer6, tho_view, check2, t2, others1,thora1, thora2, thora3, lum_view, 
                 check3, oth2 , t3, lumb1, lumb2, Degenerative, lumb3, check4, Spondylolisthesis, Grade, others3 , t4 ,lumbar_segment, lumbar_For, tho4, 
                 otherss4 , t5, check5, otherss5, xcheck, otcheck,aa1,aa2,cc,ee,d,text1,aa5,aa6,aa7,aa8,mm,nn,zzz1,g,aa9,aa10,aa11,text2,aa12,aa13,zzz2,text3,
                 aa16,aa17,aa14,aa15,y,za,other3,zb,text4,aa20,aa21,zzz3,zf,other4,zg,text5,x_cbox,ot_ck)
   .pause(500)
   .end()

},
'Result':''+function(browser){
	browser
	console.log("cervical_view------>"+[JSON.stringify(a1.sort())==JSON.stringify(aa1.sort())])
	console.log("vi1---------------->"+[JSON.stringify(a2.sort())==JSON.stringify(aa2.sort())])
	console.log("cer_RC1------------>"+[JSON.stringify(cc)==JSON.stringify(aa3)])
	console.log("cer_RC2------------>"+[JSON.stringify(ee)==JSON.stringify(aa4)])
	console.log("cer_deg------------>"+[d==cer_deg])
	console.log("cer_deg------------>"+[JSON.stringify(t1.sort())==JSON.stringify(text1.sort())])
  console.log("cer_RC3------------>"+[JSON.stringify(cer3)==JSON.stringify(aa5)])
  console.log("cer_RC4------------>"+[JSON.stringify(cer4)==JSON.stringify(aa6)])
  console.log("cer_RC5------------>"+[JSON.stringify(cer5)==JSON.stringify(aa7)])
  console.log("cer_RC6------------>"+[JSON.stringify(cer6)==JSON.stringify(aa8)])
  console.log("cervical_view------>"+[JSON.stringify(tho_view.sort())==JSON.stringify(mm.sort())])
  console.log("check2------------->"+[JSON.stringify(check2.sort())==JSON.stringify(nn.sort())])
  console.log("cer_deg------------>"+[cer_Foraminal==g])
  console.log("cervical_view------>"+[JSON.stringify(text2.sort())==JSON.stringify(t2.sort())])
  console.log("others1------------>"+[JSON.stringify(zzz1.sort())==JSON.stringify(others1.sort())])
  console.log("thoracic_RC1------->"+[JSON.stringify(thora1)==JSON.stringify(aa9)])
  console.log("thoracic_RC2------->"+[JSON.stringify(thora2)==JSON.stringify(aa10)])
  console.log("thoracic_RC3------->"+[JSON.stringify(thora3)==JSON.stringify(aa11)]) 
  console.log("lumbar_view-------->"+[JSON.stringify(lum_view.sort())==JSON.stringify(aa12.sort())])
  console.log("check3------------->"+[JSON.stringify(check3.sort())==JSON.stringify(aa13.sort())])
  console.log("other2------------->"+[JSON.stringify(zzz2.sort())==JSON.stringify(oth2.sort())])
  console.log("text3-------------->"+[JSON.stringify(text3.sort())==JSON.stringify(t3.sort())])
  console.log("lumbar_RC1--------->"+[JSON.stringify(lumb1)==JSON.stringify(aa16)])
  console.log("lumbar_RC2--------->"+[JSON.stringify(lumb2)==JSON.stringify(aa17)])
  console.log("lumbar_RC3--------->"+[JSON.stringify(lumb3)==JSON.stringify(aa14)])
  console.log("check4------------->"+[JSON.stringify(check4.sort())==JSON.stringify(aa15.sort())])
  console.log("Degenerative------->"+[Degenerative==y])
  console.log("Spondylolisthesis-->"+[Spondylolisthesis==za])
  console.log("Grade-------------->"+[Grade==zb])
  console.log("other3------------->"+[JSON.stringify(other3.sort())==JSON.stringify( others3.sort())])
  console.log("text4-------------->"+[JSON.stringify(text4.sort())==JSON.stringify(t4.sort())])
  console.log("thoracic_RC4------->"+[JSON.stringify(tho4)==JSON.stringify(aa20)])
  console.log("check5------------->"+[JSON.stringify(check5.sort())==JSON.stringify(aa21.sort())])
  console.log("other4------------->"+[JSON.stringify(other4.sort())==JSON.stringify(otherss4.sort())])
  console.log("other5------------->"+[JSON.stringify(zzz3.sort())==JSON.stringify(otherss5.sort())])
  console.log("lumbar_segment----->"+[zf==lumbar_segment])
  console.log("lumbar_For--------->"+[zg==lumbar_For])
  console.log("text5-------------->"+[JSON.stringify(text5.sort())==JSON.stringify(t5.sort())])
  console.log("xray_check--------->"+[JSON.stringify(xcheck.sort())==JSON.stringify(x_cbox.sort())])
  console.log("xray_check--------->"+[JSON.stringify(otcheck.sort())==JSON.stringify(ot_ck.sort())])
  


}
}        