var Data = require('../EHR_Json/data.json')
var form5 = require('../EHR_Json/examform5.json')
var nor1=[].sort();            var z1=[].sort();       var za1=[].sort();
var cervical_c5=[].sort();     var z2=[].sort();       var za2=[].sort();
var cervical_c6=[].sort();     var z3=[].sort();       var za3=[].sort();
var cervical_c7=[].sort();     var z4=[].sort();       var za4=[].sort();
var cervical_c8=[].sort();     var z5=[].sort();       var za5=[].sort();
var cervical_t1=[].sort();     var z6=[].sort();       var za6=[].sort();
var cervical_other=[].sort();  var z7=[].sort();       var za7=[].sort();
var nor2=[].sort();            var z8=[].sort();       var za8=[].sort();
var thorasic_t1=[].sort();     var z9=[].sort();       var za9=[].sort();
var thorasic_t4=[].sort();     var z10=[].sort();      var za10=[].sort();
var thorasic_t10=[].sort();    var z11=[].sort();      var za11=[].sort();
var thorasic_other=[].sort();  var z12=[].sort();      var za12=[].sort();
var nor3=[].sort();            var z13=[].sort();      var za13=[].sort();
var dermatomes_l1=[].sort();   var z14=[].sort();      var za14=[].sort();
var dermatomes_l2=[].sort();   var z15=[].sort();      var za15=[].sort();
var dermatomes_l3=[].sort();   var z16=[].sort();      var za16=[].sort();
var dermatomes_l4=[].sort();   var z17=[].sort();      var za17=[].sort();
var dermatomes_l5=[].sort();   var z18=[].sort();      var za18=[].sort();
var dermatomes_s1=[].sort();   var z19=[].sort();      var za19=[].sort();
var dermatomes_s2=[].sort();   var z20=[].sort();      var za20=[].sort();
var lumber;        var z21=[].sort();      
var drop=[];       var aza=[];   

var id;

module.exports={
    login : function (browser) {
        browser 
        .login(Data.user1[2].username, Data.user1[2].password)

},
'Patient' : function(browser){
	browser  
	   .useCss()
	   .pause(500)
	   .click('a[class="firstLevel"][href="#"]')
	   .pause(300)
	   .click('a[href="/EHR/Doctor/view-patient-details-open"]')
	   .waitForElementVisible('#col0_filter' , 60000)
	   .pause(500)
	   .getText('td[class="sorting_1"]' , function(result){
	   	  id=result.value
	   	    browser
	   	       .useCss()
	   	       .click('a[onclick="postNavigateToProfile('+result.value+',1);"]')
	   })
	   .waitForElementVisible('button[onclick="openStartTreatment();"]' , 60000)
	   .pause(500)
},
'Exam Form 5':function(browser){	
   browser   
	    .useXpath()
	    .click("//*[@id='treatmentformsContent']/div[2]/span/button")
	    .useCss()
	    .waitForElementVisible('button[onclick="addSoapNotes();"]' , 60000)
	    .pause(500)
	    .useXpath()
        .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 5 -']")
        .pause(500)
        .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 2 -']")
        .pause(1000)
        .click("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 5 -']")
        .useCss()
	    .waitForElementVisible('button[onclick="gobackExamsList()"]' , 60000)
	    .pause(500)
	    .exam5(nor1, cervical_c5, cervical_c6, cervical_c7, cervical_c8,cervical_t1, cervical_other, nor2, thorasic_t1, thorasic_t4, thorasic_t10, thorasic_other, nor3, dermatomes_l1, dermatomes_l2, dermatomes_l3, dermatomes_l4, dermatomes_l5, dermatomes_s1, dermatomes_s2)
        .pause(500)
        .useCss()
        .getLocationInView('#negative_id')
	    .pause(500)
	    .useXpath()
	    .getLocationInView("//*[@id='formid']/div/div[1]/div/input")

	    for(i=0; i<2; i++){
           a=Math.floor((Math.random()*6)+0)
           nor1.push(a)
              browser
                .useCss()
                .click(form5.normal[a])
        }
        b=Math.floor((Math.random()*2)+1)
        cervical_c5.push(b)
        c=Math.floor((Math.random()*2)+1)
        cervical_c6.push(c)
        d=Math.floor((Math.random()*2)+1)
        cervical_c7.push(d)
        e=Math.floor((Math.random()*2)+1)
        cervical_c8.push(e)
        f=Math.floor((Math.random()*2)+1)
        cervical_t1.push(f)
        g=Math.floor((Math.random()*2)+1)
        cervical_other.push(g)
        not_1=['cervicalSpineC5Right' , 'cervicalSpineC5Left']
        not_2=['cervicalSpineC6Right' , 'cervicalSpineC6Left']
        not_3=['cervicalSpineC7Right' , 'cervicalSpineC7Left']
        not_4=['cervicalSpineC8Right' , 'cervicalSpineC8Left']
        not_5=['cervicalSpineT1Right' , 'cervicalSpineT1Left']
        not_6=['cervicalSpineOtherRight' , 'cervicalSpineOtherLeft']

        browser
          .useCss()
          .click('input[name="'+not_1[b-1]+'"][value="1"]')
          .click('input[name="'+not_2[c-1]+'"][value="1"]')
          .click('input[name="'+not_3[d-1]+'"][value="1"]')
          .click('input[name="'+not_4[e-1]+'"][value="1"]')
          .click('input[name="'+not_5[f-1]+'"][value="1"]')
          .click('input[name="'+not_6[g-1]+'"][value="1"]')
          

          for(i=0; i<2; i++){
             h=Math.floor((Math.random()*4)+0)
             nor2.push(h)
               browser
                 .useCss()
                 .click(form5.normal1[h])
          }
          j=Math.floor((Math.random()*2)+1)
          thorasic_t1.push(j)
          k=Math.floor((Math.random()*2)+1)
          thorasic_t4.push(k)
          l=Math.floor((Math.random()*2)+1)
          thorasic_t10.push(l)
          m=Math.floor((Math.random()*2)+1)
          thorasic_other.push(m)
          not_7=['thoracicSpineT1Right' , 'thoracicSpineT1Left']
          not_8=['thoracicSpineT4Right' , 'thoracicSpineT4Left']
          not_9=['thoracicSpineT10Right' , 'thoracicSpineT10Left']
          not_10=['thoracicSpineOtherRight' , 'thoracicSpineOtherLeft']
            browser
              .useCss()
              .click('input[name="'+not_7[j-1]+'"][value="1"]')
              .click('input[name="'+not_8[k-1]+'"][value="1"]')
              .click('input[name="'+not_9[l-1]+'"][value="1"]')
              .click('input[name="'+not_10[m-1]+'"][value="1"]')
              .pause(500)
              .getLocationInView('#positive_id')
              .pause(500)
              .getLocationInView('#cervicalSpineOtherNormal1')
              .pause(500)


           for(i=0; i<2; i++){
             n=Math.floor((Math.random()*7)+0)
             nor3.push(n)
                browser
                  .useCss()
                  .click(form5.normal2[n])
            }

         o=Math.floor((Math.random()*2)+1)
         dermatomes_l1.push(o)
         p=Math.floor((Math.random()*2)+1)
         dermatomes_l2.push(p)
         q=Math.floor((Math.random()*2)+1)
         dermatomes_l3.push(q)
         r=Math.floor((Math.random()*2)+1)
         dermatomes_l4.push(r)
         s=Math.floor((Math.random()*2)+1)
         dermatomes_l5.push(s)
         t=Math.floor((Math.random()*2)+1)
         dermatomes_s1.push(t)
         u=Math.floor((Math.random()*2)+1)
         dermatomes_s2.push(u)
         not_11=['lumbarSpineL1Right' , 'lumbarSpineL1Left']
         not_12=['lumbarSpineL2Right' , 'lumbarSpineL2Left']
         not_13=['lumbarSpineL3Right' , 'lumbarSpineL3Left']
         not_14=['lumbarSpineL4Right' , 'lumbarSpineL4Left']
         not_15=['lumbarSpineL5Right' , 'lumbarSpineL5Left']
         not_16=['lumbarSpineS1Right' , 'lumbarSpineS1Left']
         not_17=['lumbarSpineS2Right' , 'lumbarSpineS2Left']
             browser
               .useCss()
               .click('input[name="'+not_11[o-1]+'"][value="1"]')
               .click('input[name="'+not_12[p-1]+'"][value="1"]')
               .click('input[name="'+not_13[q-1]+'"][value="1"]')
               .click('input[name="'+not_14[r-1]+'"][value="1"]')
               .pause(1000)
               .getLocationInView('button[class="btn btn-primary"][type="submit"]')
               .pause(500)
               .getLocationInView('#lumbarSpineL2Normal1')
               .pause(500)
               .click('input[name="'+not_15[s-1]+'"][value="1"]')
               .click('input[name="'+not_16[t-1]+'"][value="1"]')
               .click('input[name="'+not_17[u-1]+'"][value="1"]')
        lumber=Math.floor((Math.random()*2)+1)
        browser
         .useCss()
         .click('input[name="beevorType"][value="'+lumber+'"]')
          if(lumber==1){
             abc=Math.floor((Math.random()*12)+1)
             drop.push(abc)
               browser
                  .useCss()
                  .pause(500)
                  .getLocationInView('button[class="btn btn-primary"][type="submit"]')
                  .pause(500)
                  .useCss()
                  .getLocationInView('#lumbarSpineL5Normal1')
                  .pause(500)
                  .useXpath()
                  .click("//*[@id='positiveBeevor_id']/option["+abc+"]")
          }

          browser
             .useCss()
             .pause(500)
             .click('button[class="btn btn-primary"][type="submit"]')
             .pause(1500)
             .useXpath()
             .waitForElementVisible("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 1 -']" , 60000)
             .pause(500)
             .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 5 -']")
             .pause(500)
             .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 2 -']")
             .pause(1000)
             .click("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 5 -']")
             .useCss()
	         .waitForElementVisible('button[onclick="gobackExamsList()"]' , 60000)
	         .pause(500)
     

},
'check':function(browser){
  browser

dermatomes_s2.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < dermatomes_s2.length; i++) {
    if (dermatomes_s2[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za20.push(current)
    }
        }
        current = dermatomes_s2[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za20.push(current)
    }
}

//-------------------------------------------------------------------------------------------
nor1.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < nor1.length; i++) {
    if (nor1[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za1.push(current)
    }
        }
        current = nor1[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za1.push(current)
    }
}

//-------------------------------------------------------------------------------------------
cervical_c5.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < cervical_c5.length; i++) {
    if (cervical_c5[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za2.push(current)
    }
        }
        current = cervical_c5[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za2.push(current)
    }
}

//-------------------------------------------------------------------------------------------
cervical_c6.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < cervical_c6.length; i++) {
    if (cervical_c6[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za3.push(current)
    }
        }
        current = cervical_c6[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za3.push(current)
    }
}

//-------------------------------------------------------------------------------------------
cervical_c7.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < cervical_c7.length; i++) {
    if (cervical_c7[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za4.push(current)
    }
        }
        current = cervical_c7[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za4.push(current)
    }
}

//-------------------------------------------------------------------------------------------
cervical_c8.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < cervical_c8.length; i++) {
    if (cervical_c8[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za5.push(current)
    }
        }
        current = cervical_c8[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za5.push(current)
    }
}

//-------------------------------------------------------------------------------------------
cervical_t1.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < cervical_t1.length; i++) {
    if (cervical_t1[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za6.push(current)
    }
        }
        current = cervical_t1[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za6.push(current)
    }
}

//-------------------------------------------------------------------------------------------
cervical_other.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < cervical_other.length; i++) {
    if (cervical_other[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za7.push(current)
    }
        }
        current = cervical_other[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za7.push(current)
    }
}

//-------------------------------------------------------------------------------------------
nor2.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < nor2.length; i++) {
    if (nor2[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za8.push(current)
    }
        }
        current = nor2[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za8.push(current)
    }
}

//-------------------------------------------------------------------------------------------
thorasic_t1.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < thorasic_t1.length; i++) {
    if (thorasic_t1[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za9.push(current)
    }
        }
        current = thorasic_t1[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za9.push(current)
    }
}

//-------------------------------------------------------------------------------------------
thorasic_t4.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < thorasic_t4.length; i++) {
    if (thorasic_t4[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za10.push(current)
    }
        }
        current = thorasic_t4[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za10.push(current)
    }
}

//-------------------------------------------------------------------------------------------
thorasic_t10.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < thorasic_t10.length; i++) {
    if (thorasic_t10[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za11.push(current)
    }
        }
        current = thorasic_t10[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za11.push(current)
    }
}

//-------------------------------------------------------------------------------------------
thorasic_other.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < thorasic_other.length; i++) {
    if (thorasic_other[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za12.push(current)
    }
        }
        current = thorasic_other[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za12.push(current)
    }
}

//-------------------------------------------------------------------------------------------
nor3.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < nor3.length; i++) {
    if (nor3[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za13.push(current)
    }
        }
        current = nor3[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za13.push(current)
    }
}

//-------------------------------------------------------------------------------------------
dermatomes_l1.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < dermatomes_l1.length; i++) {
    if (dermatomes_l1[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za14.push(current)
    }
        }
        current = dermatomes_l1[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za14.push(current)
    }
}

//-------------------------------------------------------------------------------------------
dermatomes_l2.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < dermatomes_l2.length; i++) {
    if (dermatomes_l2[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za15.push(current)
    }
        }
        current = dermatomes_l2[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za15.push(current)
    }
}

//-------------------------------------------------------------------------------------------
dermatomes_l3.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < dermatomes_l3.length; i++) {
    if (dermatomes_l3[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za16.push(current)
    }
        }
        current = dermatomes_l3[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za16.push(current)
    }
}

//-------------------------------------------------------------------------------------------
dermatomes_l4.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < dermatomes_l4.length; i++) {
    if (dermatomes_l4[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za17.push(current)
    }
        }
        current = dermatomes_l4[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za17.push(current)
    }
}

//-------------------------------------------------------------------------------------------
dermatomes_l5.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < dermatomes_l5.length; i++) {
    if (dermatomes_l5[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za18.push(current)
    }
        }
        current = dermatomes_l5[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za18.push(current)
    }
}

//-------------------------------------------------------------------------------------------
dermatomes_s1.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < dermatomes_s1.length; i++) {
    if (dermatomes_s1[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      za19.push(current)
    }
        }
        current = dermatomes_s1[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      za19.push(current)
    }
}

//-------------------------------------------------------------------------------------------
browser
  .pause(1000)
  .examform5(z1,z2,z3,z4,z5,z6,z7,z8,z9,z10,z11,z12,z13,z14,z15,z16,z17,z18,z19,z20,z21, aza,za1,za8,za13,za2,za3,za4,za5,za6,za7,za9,za10,za11,za12,za14,za15,
             za16,za17,za18,za19,za20,lumber,drop)
  .pause(500)
  .end()

},
'Result':''+function (browser){
  browser
  console.log("nor1----------->"+[JSON.stringify(z1.sort())==JSON.stringify(za1.sort())])
  console.log("cervical_c5---->"+[JSON.stringify(z2.sort())==JSON.stringify(za2.sort())])
  console.log("cervical_c6---->"+[JSON.stringify(z3.sort())==JSON.stringify(za3.sort())])
  console.log("cervical_c7---->"+[JSON.stringify(z4.sort())==JSON.stringify(za4.sort())])
  console.log("cervical_c8---->"+[JSON.stringify(z5.sort())==JSON.stringify(za5.sort())])
  console.log("cervical_t1---->"+[JSON.stringify(z6.sort())==JSON.stringify(za6.sort())])
  console.log("cervical_other->"+[JSON.stringify(z7.sort())==JSON.stringify(za7.sort())])
  console.log("nor2----------->"+[JSON.stringify(z8.sort())==JSON.stringify(za8.sort())])
  console.log("thorasic_t1---->"+[JSON.stringify(z9.sort())==JSON.stringify(za9.sort())])
  console.log("thorasic_t4---->"+[JSON.stringify(z10.sort())==JSON.stringify(za10.sort())])
  console.log("thorasic_t10--->"+[JSON.stringify(z11.sort())==JSON.stringify(za11.sort())])
  console.log("thorasic_other->"+[JSON.stringify(z12.sort())==JSON.stringify(za12.sort())])
  console.log("nor3----------->"+[JSON.stringify(z13.sort())==JSON.stringify(za13.sort())])
  console.log("dermatomes_l1-->"+[JSON.stringify(z14.sort())==JSON.stringify(za14.sort())])
  console.log("dermatomes_l2-->"+[JSON.stringify(z15.sort())==JSON.stringify(za15.sort())])
  console.log("dermatomes_l3-->"+[JSON.stringify(z16.sort())==JSON.stringify(za16.sort())])
  console.log("dermatomes_l4-->"+[JSON.stringify(z17.sort())==JSON.stringify(za17.sort())])
  console.log("dermatomes_l5-->"+[JSON.stringify(z18.sort())==JSON.stringify(za18.sort())])
  console.log("dermatomes_s1-->"+[JSON.stringify(z19.sort())==JSON.stringify(za19.sort())])
  console.log("dermatomes_s2-->"+[JSON.stringify(z20.sort())==JSON.stringify(za20.sort())])
  console.log("lumber--------->"+[lumber==z21])
  console.log("Drop Down------>"+[JSON.stringify(drop.sort())==JSON.stringify(aza.sort())])

}
}	   