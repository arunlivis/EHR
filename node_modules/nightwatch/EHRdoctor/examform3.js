var Data = require('../EHR_Json/data.json')
var other = require('../EHR_Json/others.json')
var Paraspinal=[];          var a1=[];     var b1=[];
var SCM=[];                 var a2=[];     var b2=[];
var Paraspinal1=[];         var a3=[];     var b3=[];
var Quadratus=[];           var a4=[];     var b4=[];
var Paraspinal2=[];         var a5=[];     var b5=[];
var Hamstring=[];           var a6=[];     var b6=[];
var Abdomen=[];             var a7=[];     var b7=[];
var a;   var Lymph=[];
var d;   var Vertebrae=[];
var f;   var Ribs=[];
var g;   var Vertebrae1=[];
var l;   var Vertebrae3=[];
var n;   var n1=[];

var id;

module.exports={
    login : function (browser) {
        browser 
        .login(Data.user1[2].username, Data.user1[2].password)

},
'Patient' : function(browser){
	browser  
	   .useCss()
	   .pause(500)
	   .click('a[class="firstLevel"][href="#"]')
	   .pause(300)
	   .click('a[href="/EHR/Doctor/view-patient-details-open"]')
	   .waitForElementVisible('#col0_filter' , 60000)
	   .pause(500)
	   .getText('td[class="sorting_1"]' , function(result){
	   	  id=result.value
	   	    browser
	   	       .useCss()
	   	       .click('a[onclick="postNavigateToProfile('+result.value+',1);"]')
	   })
	   .waitForElementVisible('button[onclick="openStartTreatment();"]' , 60000)
	   .pause(500)
},
'Exam Form 3':function(browser){	
	a=Math.floor((Math.random()*2)+1)
   browser   
	   .useXpath()
	   .click("//*[@id='treatmentformsContent']/div[2]/span/button")
	   .useCss()
	   .waitForElementVisible('button[onclick="addSoapNotes();"]' , 60000)
	   .pause(500)
	   .useXpath()
	   .click("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 3 -']")
	   .useCss()
	   .waitForElementVisible('button[onclick="gobackExamsList()"]' , 60000)
	   .pause(500)
	   .exam3(Paraspinal,SCM,Paraspinal1,Quadratus,Paraspinal2,Hamstring,Abdomen)
       .pause(500)
	   .getLocationInView('#lumbarSpineAbdomenTender_id')
	   .pause(500)
	   .useXpath()
	   .getLocationInView("//*[@id='formid']/div/div[1]/div/input")
	   .pause(500)
	   .useCss()
	   .click('input[name="cervicalSpineLymphNodes"][value="'+a+'"]')
            for(i=0; i<2; i++){
            	not_1=['cervicalSpineParaspPain' , 'cervicalSpineParaspSpasm' , 'cervicalSpineParaspEdema' , 'cervicalSpineParaspTp']
            	not_2=['cervicalSpineTrapeziusScmRightTonicity' , 'cervicalSpineTrapeziusScmLeftTonicity' , 'cervicalSpineTrapeziusScmNormal']
            	b=Math.floor((Math.random()*4)+1)
            	c=Math.floor((Math.random()*3)+1)
            	SCM.push(c)
            	Paraspinal.push(b)
            	browser
            	.useCss()
            	.click('input[name="'+not_1[b-1]+'"][value="1"]')
            	.click('input[name="'+not_2[c-1]+'"][value="1"]')
            }
            d=Math.floor((Math.random()*2)+1)
             browser
                .useCss()
                .click('input[name="cervicalSpineVertebrae"][value="'+d+'"]')
                for(i=0; i<2; i++){
                	not_3=['thoracicSpineParaspPain' , 'thoracicSpineParaspSpasm' , 'thoracicSpineParaspEdema' , 'thoracicSpineParaspTp']
     	           e=Math.floor((Math.random()*4)+1)
     	           Paraspinal1.push(e)
     	               browser
     	                  .useCss()
     	                  .click('input[name="'+not_3[e-1]+'"][value="1"]')
                }
            f=Math.floor((Math.random()*2)+1)
            g=Math.floor((Math.random()*2)+1)
              browser
                .useCss()
                .click('input[name="thoracicSpineRibs"][value="'+f+'"]')
                .click('input[name="thoracicSpineVertebrae"][value="'+g+'"]')

                for(i=0; i<2; i++){
                	not_4=['lumbarSpineQuadratusLumborumRightTonicity' , 'lumbarSpineQuadratusLumborumLeftTonicity' , 'lumbarSpineQuadratusLumborumNormal']
                	not_5=['lumbarSpineParaspPain' , 'lumbarSpineParaspSpasm' , 'lumbarSpineParaspEdema' , 'lumbarSpineParaspTp']
                	not_6=['lumbarSpineHamstringRightTonicity' , 'lumbarSpineHamstringLeftTonicity' , 'lumbarSpineHamstringNormal']
     	             h=Math.floor((Math.random()*3)+1)
     	             Quadratus.push(h)
     	             j=Math.floor((Math.random()*4)+1)
     	             Paraspinal2.push(j)
                     k=Math.floor((Math.random()*3)+1)
     	             Hamstring.push(k)
     	                  browser
     	                     .useCss()
     	                     .click('input[name="'+not_4[h-1]+'"][value="1"]')
     	                     .click('input[name="'+not_5[j-1]+'"][value="1"]')
     	                     .click('input[name="'+not_6[k-1]+'"][value="1"]')
                 }

                 l=Math.floor((Math.random()*2)+1)
                     browser
                        .useCss()
                        .pause(500)
                        .getLocationInView('input[name="abdominalText"]')
                        .pause(500)
                        .getLocationInView('#lumbarSpineParaspPain_id')
                        .pause(500)
                        .click('input[name="lumbarSpineVertebrae"][value="'+l+'"]')
                for(i=0; i<2; i++){
                	not_7=['lumbarSpineAbdomenTender' , 'lumbarSpineAbdomenPulsations' , 'lumbarSpineAbdomenAscites']
     	             m=Math.floor((Math.random()*3)+1)
     	             Abdomen.push(m)
     	                browser
     	                    .useCss()
     	                    .click('input[name="'+not_7[m-1]+'"][value="1"]')
                }
                n=Math.floor((Math.random()*3)+0)
                 browser
                    .useCss()
                    .clearValue('input[name=abdominalText]')
                    .setValue('input[name=abdominalText]' , other.ot[n])

                    .pause(500)
                    .getLocationInView('button[class="btn btn-primary"][type="submit"]')
                    .pause(500)
                    .useCss()
                    .getLocationInView('#lumbarSpineAbdomenTender_id')
                    .pause(500)
                    .click('button[class="btn btn-primary"][type="submit"]')
                    .useXpath()
                    .waitForElementVisible("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 3 -']" , 60000)
                    .pause(500)
                    .click("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 3 -']")
                    .useCss()
	                .waitForElementVisible('button[onclick="gobackExamsList()"]' , 60000)
	                .pause(500)
},
'check':function(browser){
	browser
Paraspinal.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Paraspinal.length; i++) {
    if (Paraspinal[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      b1.push(current)
    }
        }
        current = Paraspinal[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      b1.push(current)
    }
}

//-------------------------------------------------------------------------------------------
SCM.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < SCM.length; i++) {
    if (SCM[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      b2.push(current)
    }
        }
        current = SCM[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      b2.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Paraspinal1.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Paraspinal1.length; i++) {
    if (Paraspinal1[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      b3.push(current)
    }
        }
        current = Paraspinal1[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      b3.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Quadratus.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Quadratus.length; i++) {
    if (Quadratus[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      b4.push(current)
    }
        }
        current = Quadratus[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      b4.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Paraspinal2.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Paraspinal2.length; i++) {
    if (Paraspinal2[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      b5.push(current)
    }
        }
        current = Paraspinal2[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      b5.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Hamstring.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Hamstring.length; i++) {
    if (Hamstring[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      b6.push(current)
    }
        }
        current = Hamstring[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      b6.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Abdomen.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Abdomen.length; i++) {
    if (Abdomen[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      b7.push(current)
    }
        }
        current = Abdomen[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      b7.push(current)
    }
}

//-------------------------------------------------------------------------------------------
browser
  .pause(500)
  .examform3(other,Lymph,a1,a2,Vertebrae,a3,Ribs,Vertebrae1,a4,a5,a6,Vertebrae3,a7,n1,a,d,f,g,l,n,b1,b2,b3,b4,b5,b6,b7)
  .pause(500)
  .end()


},
'Result' : ''+function (browser){
	browser
console.log("Paraspinal---->"+[JSON.stringify(a1.sort())==JSON.stringify(b1.sort())])
console.log("SCM----------->"+[JSON.stringify(a2.sort())==JSON.stringify(b2.sort())])
console.log("Paraspinal1--->"+[JSON.stringify(a3.sort())==JSON.stringify(b3.sort())])
console.log("Quadratus----->"+[JSON.stringify(a4.sort())==JSON.stringify(b4.sort())])
console.log("Paraspinal2--->"+[JSON.stringify(a5.sort())==JSON.stringify(b5.sort())])
console.log("Hamstring----->"+[JSON.stringify(a6.sort())==JSON.stringify(b6.sort())])
console.log("Abdomen------->"+[JSON.stringify(a7.sort())==JSON.stringify(b7.sort())])
console.log("Lymph--------->"+(a == Lymph))
console.log("Vertebrae----->"+(d == Vertebrae))
console.log("Ribs---------->"+(f == Ribs))
console.log("Vertebrae1---->"+(g == Vertebrae1))
console.log("Vertebrae3---->"+(l == Vertebrae3))
console.log("other--------->"+(n == n1))
}
}	   