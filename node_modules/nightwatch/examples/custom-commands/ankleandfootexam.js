exports.command = function(footj,inde_1, word_1, AOX,Pronation_1, Supination_1, Calcaneus_Varus_1, Calcaneus_Valgus_1, Forefoot_Varus_1, Forefoot_Valgus_1, 
                            PALPATION_1, FUNCTIONAL_1, ORTHOPEDIC_1, note, num_2, test_1, neuro_1, ref, functional_1, other_1,abc_1,abc_2,abc_3,abc_4,abc_5,
                            abc_6,abc_7,abc_8,abc_9,abc_10,bb,c,n,num_1,test_2,neuro_2,ref_1,functional_2,abc_20){
	this
	.pause(500)
	.useCss()
	.getLocationInView('#functionalRangeOfMotionUnremarkable1')
	.pause(500)
	.getLocationInView('#dateid')
	.pause(500)
	.getAttribute('#independentid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  inde_1.push(1)                   
  }
})
.getAttribute('#unlimitedid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  inde_1.push(2)                   
  }
})
.getAttribute('#noneid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  inde_1.push(3)                   
  }
})
//--------------------------------------------------------------------------------------------------------------------
var tex=["#gaitid" , "#distanceid" , "#swellingDiscolorationid" , "#assistiveDeviceid" , "#muscleSymmetryid"]
for(i=0; i<tex.length;i++){
	this
.getAttribute(tex[i] , 'value' , function(result){
       
       if(result.value=="Gait"){
           this
           word_1.push(0)                   
       }
       if(result.value=="Distance"){
           this
           word_1.push(1)                   
       }
       if(result.value=="Assistive"){
           this
           word_1.push(2)                   
       }
       if(result.value=="Muscle"){
           this
           word_1.push(3)                   
       }
})
}
//----------------------------------------------------------------------------------------------------------------------
this
.getAttribute('#AOxid1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  AOX.push(1)                   
  }
})
.getAttribute('#AOxid2' , 'checked' , function(result){
    if(result.value=="true"){
      this
  AOX.push(2)                   
  }
})
.getAttribute('#AOxid3' , 'checked' , function(result){
    if(result.value=="true"){
      this
  AOX.push(3)                   
  }
})
.getAttribute('#AOxid4' , 'checked' , function(result){
    if(result.value=="true"){
      this
  AOX.push(4)                   
  }
})
//-----------------------------------------------------------------------------------------------------------------------------
.getAttribute('#pronationidleft' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Pronation_1.push(1)                   
  }
})
.getAttribute('#pronationidright' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Pronation_1.push(2)                   
  }
})
//----------------------------------------------------------------------------------------------------------------------
.getAttribute('#supinationidleft' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Supination_1.push(1)                   
  }
})
.getAttribute('#supinationidright' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Supination_1.push(2)                   
  }
})
//----------------------------------------------------------------------------------------------------------------------
.getAttribute('#calcaneusVarusidleft' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Calcaneus_Varus_1.push(1)                   
  }
})
.getAttribute('#calcaneusVarusidright' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Calcaneus_Varus_1.push(2)                   
  }
})
//----------------------------------------------------------------------------------------------------------------------
.getAttribute('#calcaneusValgusidleft' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Calcaneus_Valgus_1.push(1)                   
  }
})
.getAttribute('#calcaneusValgusidright' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Calcaneus_Valgus_1.push(2)                   
  }
})
//----------------------------------------------------------------------------------------------------------------------
.getAttribute('#forefootVarusidleft' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Forefoot_Varus_1.push(1)                   
  }
})
.getAttribute('#forefootVarusidright' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Forefoot_Varus_1.push(2)                   
  }
})
//----------------------------------------------------------------------------------------------------------------------
.getAttribute('#forefootValgusidleft' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Forefoot_Valgus_1.push(1)                   
  }
})
.getAttribute('#forefootValgusidright' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Forefoot_Valgus_1.push(2)                   
  }
})
//----------------------------------------------------------------------------------------------------------------------
.getAttribute('#allSoftTissueUnremarkableid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  PALPATION_1.push(0)                   
  }
})
.getAttribute('#except1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  PALPATION_1.push(1)                   
  }
})
//----------------------------------------------------------------------------------------------------------------------
.getAttribute('#functionalRangeOfMotionUnremarkable1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  FUNCTIONAL_1.push(0)                   
  }
})
.getAttribute('#functionalRangeOfMotionExcept1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  FUNCTIONAL_1.push(1)                   
  }
})
//----------------------------------------------------------------------------------------------------------------------
.getAttribute('#orthopedicTestingUnremarkable1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  ORTHOPEDIC_1.push(0)                   
  }
})
.getAttribute('#orthopedicTestingExcept1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  ORTHOPEDIC_1.push(1)                   
  }
})
//----------------------------------------------------------------------------------------------------------------------
.getText('#noteid' , function(result){
        if(result.value=="Gait"){
           this
           note.push(0)                   
       }
       if(result.value=="Distance"){
           this
           note.push(1)                   
       }
       if(result.value=="Assistive"){
           this
           note.push(2)                   
       }
       if(result.value=="Muscle"){
           this
           note.push(3)                   
       }
})
//----------------------------------------------------------------------------------------------------------------------
this
.useCss()
.pause(500)
.getLocationInView('#bigtoePlantarS1Leftid')
.pause(500)
.getLocationInView('#functionalRangeOfMotionUnremarkable1')
.pause(500)
var ck=["#plantarFlexionLeftid" , "#plantarFlexionRightid" , "#dorsiflexionLeftid" , "#dorsiflexionRightid" , "#inversionLeftid" , "#inversionRightid" , "#eversionLeftid" , "#eversionRightid" , "#greatToeExtensionLeftid" , "#greatToeExtensionRightid" , "#greatToeFlexionLeftid" , "#greatToeFlexionRightid"]
    for(i=0; i<ck.length;i++){
    	this
    	.getAttribute(ck[i] , 'value' , function(result){
                if(result.value=="50"){
                  this
                  num_2.push(0)                   
               }
               if(result.value=="20"){
                  this
                  num_2.push(1)                   
               }
               if(result.value=="35"){
                  this
                  num_2.push(2)                   
               }
               if(result.value=="15"){
                  this
                  num_2.push(3)                   
               }
               if(result.value=="70"){
                  this
                  num_2.push(4)                   
               }
               if(result.value=="45"){
                  this
                  num_2.push(5)                   
               }


})
    }
//---------------------------------------------------------------------------------------------------------------------------
this
 .getAttribute('#tinelsTapLeftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  test_1.push(0)                   
  }
})
.getAttribute('#tinelsTapRightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  test_1.push(1)                   
  }
})
.getAttribute('#achillesTapLeftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  test_1.push(2)                   
  }
})
.getAttribute('#achillesTapRightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  test_1.push(3)                   
  }
})
.getAttribute('#longTransvArchLeftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  test_1.push(4)                   
  }
})
.getAttribute('#longTransvArchRightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  test_1.push(5)                   
  }
})
.getAttribute('#thompsonsLeftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  test_1.push(6)                   
  }
})
.getAttribute('#thompsonsRightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  test_1.push(7)                   
  }
})
.getAttribute('#drawerLefttid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  test_1.push(8)                   
  }
})
.getAttribute('#drawerRightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  test_1.push(9)                   
  }
})
.getAttribute('#lateralVarusStabilityLeftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  test_1.push(10)                   
  }
})
.getAttribute('#lateralVarusStabilityRight' , 'checked' , function(result){
    if(result.value=="true"){
      this
  test_1.push(11)                   
  }
})
.getAttribute('#medialVarusStabilityLeftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  test_1.push(12)                   
  }
})
.getAttribute('#medialVarusStabilityRightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  test_1.push(13)                   
  }
})
.getAttribute('#neurologicalTestingUnremarkable1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  test_1.push(14)                   
  }
})
.getAttribute('#neurologicalExcept1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  test_1.push(15)                   
  }
})
//--------------------------------------------------------------------------------------------------------------------------------
this
.useCss()
.pause(500)
.getLocationInView('#functionalDeficitid1')
.pause(500)
.getLocationInView('#neurologicalTestingUnremarkable1')
.pause(500)
.getAttribute('#inguinalAreaL1Leftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  neuro_1.push(0)                   
  }
})
.getAttribute('#inguinalAreaL1Rightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  neuro_1.push(1)                   
  }
})
.getAttribute('#antMedThighL2Leftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  neuro_1.push(2)                   
  }
})
.getAttribute('#antMedThighL2Rightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  neuro_1.push(3)                   
  }
})
.getAttribute('#medialKneeL3Leftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  neuro_1.push(4)                   
  }
})
.getAttribute('#medialKneeL3Rightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  neuro_1.push(5)                   
  }
})
.getAttribute('#medialLegL4Leftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  neuro_1.push(6)                   
  }
})
.getAttribute('#medialLegL4Rightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  neuro_1.push(7)                   
  }
})
.getAttribute('#antLatLegL5Leftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  neuro_1.push(8)                   
  }
})
.getAttribute('#antLatLegL5Rightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  neuro_1.push(9)                   
  }
})
.getAttribute('#bigtoePlantarS1Leftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  neuro_1.push(10)                   
  }
})
.getAttribute('#bigtoePlantarS1Rightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  neuro_1.push(11)                   
  }
})
//-------------------------------------------------------------------------------------------------------------------------------
var rr=["#iliopsoasL1Leftid" , "#iliopsoasL1Rightid" , "#iliopsoasL2Leftid" , "#iliopsoasL2Right" , "#kneeExtensionL3Leftid" , "#kneeExtensionL3Rightid" , "#kneeFlexionL4Leftid" , "#kneeFlexionL4Rightid" , "#dorsiflexionL5Leftid" , "#dorsiflexionL5Rightid" , "#grttoeExtS1Leftid" , "#grttoeExtS1Rightid" , "#patellarL4Leftid" , "#patellarL4Rightid" , "#medHsL5Leftid" , "#medHsL5Rightid" , "#achillesS1Leftid" , "#achillesS1Rightid"]
for(i=0; i<rr.length;i++){
    	this
.getAttribute(rr[i] , 'value' , function(result){
    if(result.value=="1"){
      this
  ref.push(0)                   
  }
  if(result.value=="2"){
      this
  ref.push(1)                   
  }
  if(result.value=="3"){
      this
  ref.push(2)                   
  }
  if(result.value=="4"){
      this
  ref.push(3)                   
  }
  if(result.value=="5"){
      this
  ref.push(4)                   
  }
})
}
//------------------------------------------------------------------------------------------------------------------------
this
.getAttribute('#functionalDeficitid1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  functional_1.push(0)                   
  }
})
.getAttribute('#functionalDeficitid2' , 'checked' , function(result){
    if(result.value=="true"){
      this
  functional_1.push(1)                   
  }
})
.getAttribute('#functionalDeficitid3' , 'checked' , function(result){
    if(result.value=="true"){
      this
  functional_1.push(2)                   
  }
})
.getAttribute('#functionalDeficitid4' , 'checked' , function(result){
    if(result.value=="true"){
      this
  functional_1.push(3)  
        this
  .verify.visible('#anklefunctionalDeficitOtherTextid')
  this
  .isVisible('#anklefunctionalDeficitOtherTextid', function(result) {
            if(result.value==true){
              this
  .getAttribute("#anklefunctionalDeficitOtherTextid" , 'value' , function(result){
        
   if(result.value=="Gait"){
      this
  other_1.push(0)                   
  }
  if(result.value=="Distance"){
      this
  other_1.push(1)                   
  }
  if(result.value=="Assistive"){
      this
  other_1.push(2)                   
  }
  if(result.value=="Muscle"){
      this
  other_1.push(3)                   
  }
})  
}
})                 
  }
})
//---------------------------------------------------------------------------------------------------------------------------------------
   this
     if((abc_1.map(Number)).indexOf(1) > -1){
      this
        .verify.elementPresent('input[name="independent"][checked="checked"]')
     }
     if((abc_1.map(Number)).indexOf(2) > -1){
      this
        .verify.elementPresent('input[name="unlimited"][checked="checked"]')

     }
     if((abc_1.map(Number)).indexOf(3) > -1){
      this
        .verify.elementPresent('input[name="none"][checked="checked"]')

     }
     var abc_2_ck=['pronationLeft' , 'pronationRight']
     var abc_3_ck=['supinationLeft' , 'supinationRight']
     var abc_4_ck=['calcaneusVarusLeft' , 'calcaneusVarusRight']
     var abc_5_ck=['calcaneusValgusLeft' , 'calcaneusValgusRight']
     var abc_6_ck=['forefootVarusLeft' , 'forefootVarusRight']
     var abc_7_ck=['forefootValgusLeft' , 'forefootValgusRight']
     var abc_8_ck=['allSoftTissueUnremarkable' , 'except']
     var abc_9_ck=['functionalRangeOfMotionUnremarkable' , 'functionalRangeOfMotionExcept']
     var abc_10_ck=['orthopedicTestingUnremarkable' , 'orthopedicTestingExcept']
     var bb_ck=['gaitid','distanceid','swellingDiscolorationid','assistiveDeviceid','muscleSymmetryid']
     for(i=0; i<abc_2.length; i++){
      this
        .verify.elementPresent('input[name="'+abc_2_ck[abc_2[i]-1]+'"][checked="checked"]')
     }
     for(i=0; i<abc_3.length; i++){
      this
        .verify.elementPresent('input[name="'+abc_3_ck[abc_3[i]-1]+'"][checked="checked"]')
     }
     for(i=0; i<abc_4.length; i++){
      this
        .verify.elementPresent('input[name="'+abc_4_ck[abc_4[i]-1]+'"][checked="checked"]')
     }
     for(i=0; i<abc_5.length; i++){
      this
        .verify.elementPresent('input[name="'+abc_5_ck[abc_5[i]-1]+'"][checked="checked"]')
     }
     for(i=0; i<abc_6.length; i++){
      this
        .verify.elementPresent('input[name="'+abc_6_ck[abc_6[i]-1]+'"][checked="checked"]')
     }
     for(i=0; i<abc_7.length; i++){
      this
        .verify.elementPresent('input[name="'+abc_7_ck[abc_7[i]-1]+'"][checked="checked"]')
     }
     for(i=0; i<abc_8.length; i++){
      this
        .verify.elementPresent('input[name="'+abc_8_ck[abc_8[i]]+'"][checked="checked"]')
     }
     for(i=0; i<abc_9.length; i++){
      this
        .verify.elementPresent('input[name="'+abc_9_ck[abc_9[i]]+'"][checked="checked"]')
     }
     for(i=0; i<abc_10.length; i++){
      this
        .verify.elementPresent('input[name="'+abc_10_ck[abc_10[i]]+'"][checked="checked"]')
     }
     for(i=0;i<bb.length;i++){
      this
        .verify.valueContains('input[id="'+bb_ck[i]+'"]' , footj.word[bb[i]])
     }
     this
     .verify.elementPresent('input[name="AOx"][value="'+c+'"][checked="checked"]')
     .verify.containsText('#noteid' , footj.word[n])
     for(i=0; i<=11; i++){
      this
        .verify.valueContains(footj.pain[i] , footj.num[num_1[i]])
      }
      var test_2_ck=["tinelsTapLeftid" , "tinelsTapRightid" , "achillesTapLeftid" , "achillesTapRightid" , "longTransvArchLeftid" , "longTransvArchRightid" , 
      "thompsonsLeftid" , "thompsonsRightid" , "drawerLefttid" , "drawerRightid" , "lateralVarusStabilityLeftid" , "lateralVarusStabilityRight" , 
      "medialVarusStabilityLeftid" , "medialVarusStabilityRightid" , "neurologicalTestingUnremarkable1" , "neurologicalExcept1"]
      for(i=0; i<test_2.length; i++){
        this
           .verify.elementPresent('input[id="'+test_2_ck[test_2[i]]+'"][checked="checked"]')
      }
      var neuro_2_ck=["inguinalAreaL1Leftid" , "inguinalAreaL1Rightid" , "antMedThighL2Leftid" , "antMedThighL2Rightid" , "medialKneeL3Leftid" , 
            "medialKneeL3Rightid" , "medialLegL4Leftid" , "medialLegL4Rightid" , "antLatLegL5Leftid" , "antLatLegL5Rightid" , "bigtoePlantarS1Leftid" , 
            "bigtoePlantarS1Rightid"]
       for(i=0; i<neuro_2.length; i++){
        this
           .verify.elementPresent('input[id="'+neuro_2_ck[neuro_2[i]]+'"][checked="checked"]')
      }     

      for(i=0; i<=17; i++){
        this
          .verify.valueContains(footj.idi[i] , footj.val[ref_1[i]])
      }
    var functional_2_ck=["functionalDeficitid1" , "functionalDeficitid2" , "functionalDeficitid3" , "functionalDeficitid4"]
   for(i=0; i<functional_2.length;i++){
      this
        .verify.elementPresent('input[id="functionalDeficitid'+[functional_2[i]+1]+'"][checked="checked"]')
        if([functional_2[i]+1]==4){
          this
           .verify.valueContains('#anklefunctionalDeficitOtherTextid' , footj.word[abc_20[0]])
        }
   }



}