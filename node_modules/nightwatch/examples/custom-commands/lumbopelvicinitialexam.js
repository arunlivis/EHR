exports.command = function(text_1, observation_1, Pelvic_Unleveling_1, AOX_1, palpation_1, soft_1, Piriformis_1, Quad_Lumb_1, Paraspinals_1, Gluteus_Maximus_1, 
                           Gluteus_Medius_1, Hamstrings_1, Iliopsoas_1, Rectus_Abdominis_1, Obliques_1, other_1, funct_1, TT1_1, Kemps_1, number_1, neuro_1, LL_1,
                           DEFICIT_1 ,oth_1, value_1,lumbo,text,aa1,aa2,AOX,aa3,soft,other,aa4,aa5,aa6,aa7,aa8,aa9,aa10,aa11,
                                 aa12,aa13,aa14,aa15,number,aa16,aa17,aa18,aa19,value){
	this
	.useCss()
	.pause(500)
	.getLocationInView('#otherNoteid')
	.pause(500)
	.getLocationInView('#date')
	.pause(500)
	.getAttribute('#independentid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  observation_1.push(1)                   
  }
})
.getAttribute('#unlimitedid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  observation_1.push(2)                   
  }
})
.getAttribute('#noneid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  observation_1.push(3)                   
  }
})
//--------------------------------------------------------------------------------------------------------------------------
.getAttribute('#pelvicUnlevelingleftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Pelvic_Unleveling_1.push(1)                   
  }
})
.getAttribute('#pelvicUnlevelingrightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Pelvic_Unleveling_1.push(2)                   
  }
})
//----------------------------------------------------------------------------------------------------------------------------
.getAttribute('#allSoftTissueUnremarkableid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  palpation_1.push(0)                   
  }
})
.getAttribute('#softTissueExceptid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  palpation_1.push(1)                   
  }
})
.getAttribute('#discrepancyShortLegleftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  palpation_1.push(2)                   
  }
})
.getAttribute('#discrepancyShortLegrightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  palpation_1.push(3)                   
  }
})
//----------------------------------------------------------------------------------------------------------------------------------------
.getAttribute('#piriformisleftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Piriformis_1.push(1)                   
  }
})
.getAttribute('#piriformisrightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Piriformis_1.push(2)                   
  }
})
//---------------------------------------------------------------------------------------------------------------------------------------
.getAttribute('#quadLumbleftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Quad_Lumb_1.push(1)                   
  }
})
.getAttribute('#quadLumbrightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Quad_Lumb_1.push(2)                   
  }
})
//---------------------------------------------------------------------------------------------------------------------------------------
.getAttribute('#paraspinalsleftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Paraspinals_1.push(1)                   
  }
})
.getAttribute('#paraspinalsrigjht' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Paraspinals_1.push(2)                   
  }
})
//---------------------------------------------------------------------------------------------------------------------------------------
.getAttribute('#gluteusMaximusleftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Gluteus_Maximus_1.push(1)                   
  }
})
.getAttribute('#gluteusMaximusrightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Gluteus_Maximus_1.push(2)                   
  }
})
//---------------------------------------------------------------------------------------------------------------------------------------
.getAttribute('#gluteusMediusleftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Gluteus_Medius_1.push(1)                   
  }
})
.getAttribute('#gluteusMediusrightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Gluteus_Medius_1.push(2)                   
  }
})
//---------------------------------------------------------------------------------------------------------------------------------------
.getAttribute('#hamstringsleftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Hamstrings_1.push(1)                   
  }
})
.getAttribute('#hamstringsrightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Hamstrings_1.push(2)                   
  }
})
//---------------------------------------------------------------------------------------------------------------------------------------
.getAttribute('#iliopsoasleftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Iliopsoas_1.push(1)                   
  }
})
.getAttribute('#iliopsoasrightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Iliopsoas_1.push(2)                   
  }
})
//---------------------------------------------------------------------------------------------------------------------------------------
.getAttribute('#rectusAbdominisleftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Rectus_Abdominis_1.push(1)                   
  }
})
.getAttribute('#rectusAbdominisrightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Rectus_Abdominis_1.push(2)                   
  }
})
//---------------------------------------------------------------------------------------------------------------------------------------
.getAttribute('#obliquesleftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Obliques_1.push(1)                   
  }
})
.getAttribute('#obliquesrightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Obliques_1.push(2)                   
  }
})
//---------------------------------------------------------------------------------------------------------------------------------------
.getAttribute('#aox1id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  AOX_1.push(1)                   
  }
})
.getAttribute('#aox2id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  AOX_1.push(2)                   
  }
})

.getAttribute('#aox3id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  AOX_1.push(3)                   
  }
})
.getAttribute('#aox4id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  AOX_1.push(4)                   
  }
})
//-------------------------------------------------------------------------------------------------------------------------------------------
.getAttribute('#legLengthDiscrepancy1id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  soft_1.push(1)                   
  }
})
.getAttribute('#legLengthDiscrepancy2id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  soft_1.push(2)                   
  }
})
.getAttribute('#legLengthDiscrepancy3id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  soft_1.push(3)                   
  }
})
.getAttribute('#legLengthDiscrepancy4id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  soft_1.push(4)                   
  }
})
.getAttribute('#legLengthDiscrepancy5id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  soft_1.push(5)                   
  }
})
.getAttribute('#legLengthDiscrepancy6id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  soft_1.push(6)                   
  }
})
.getAttribute('#legLengthDiscrepancy7id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  soft_1.push(7)                   
  }
})
.getAttribute('#legLengthDiscrepancy8id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  soft_1.push(8)                   
  }
})
.getAttribute('#legLengthDiscrepancy9id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  soft_1.push(9)  
          this
  .verify.visible('#legLengthDiscrepancyOtherText')
  this
  .isVisible('#legLengthDiscrepancyOtherText', function(result) {
            if(result.value==true){
              this
  .getAttribute("#legLengthDiscrepancyOtherText" , 'value' , function(result){
        
   if(result.value=="Gait"){
      this
  other_1.push(0)                   
  }
  if(result.value=="Distance"){
      this
  other_1.push(1)                   
  }
  if(result.value=="Other"){
      this
  other_1.push(2)                   
  }
  if(result.value=="Assistive"){
      this
  other_1.push(3)                   
  }
})  
}
})                 
  }
})
//---------------------------------------------------------------------------------------------------------------------------------
var aa=["#gaitid" , "#distance" , "#other" , "#assistiveid" , "#otherNoteid"]
for(i=0; i<aa.length; i++){
	              this
  .getAttribute(aa[i] , 'value' , function(result){
        
   if(result.value=="Gait"){
      this
  text_1.push(0)                   
  }
  if(result.value=="Distance"){
      this
  text_1.push(1)                   
  }
  if(result.value=="Other"){
      this
  text_1.push(2)                   
  }
  if(result.value=="Assistive"){
      this
  text_1.push(3)                   
  }
})
}
//-------------------------------------------------------------------------------------------------------------------------------------------
this
.useCss()
.pause(500)
.getLocationInView('#neurologicalUnremarkable1')
.pause(500)
.getLocationInView('#otherNoteid')
.pause(500)
.getAttribute('#functionalRangeMotionUnremarkableid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  funct_1.push(0)                   
  }
})
.getAttribute('#functionalRangeMotionExceptid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  funct_1.push(1)                   
  }
})
.getAttribute('#subluxationUnremarkableid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  funct_1.push(2)                   
  }
})
.getAttribute('#subluxationExceptid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  funct_1.push(3)                   
  }
})
.getAttribute('#orthopedicUnremarkableid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  funct_1.push(4)                   
  }
})
.getAttribute('#orthopedicExceptid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  funct_1.push(5)                   
  }
})
//---------------------------------------------------------------------------------------------------------------------------------------------
.getAttribute('#t89id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  TT1_1.push(0)                   
  }
})
.getAttribute('#t910id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  TT1_1.push(1)                   
  }
})
.getAttribute('#t1011id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  TT1_1.push(2)                   
  }
})
.getAttribute('#t1112id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  TT1_1.push(3)                   
  }
})
.getAttribute('#t12L1id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  TT1_1.push(4)                   
  }
})
.getAttribute('#l12id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  TT1_1.push(5)                   
  }
})
.getAttribute('#l23' , 'checked' , function(result){
    if(result.value=="true"){
      this
  TT1_1.push(6)                   
  }
})
.getAttribute('#l34' , 'checked' , function(result){
    if(result.value=="true"){
      this
  TT1_1.push(7)                   
  }
})
.getAttribute('#t45id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  TT1_1.push(8)                   
  }
})
.getAttribute('#t5S1id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  TT1_1.push(9)                   
  }
})
.getAttribute('#ls1id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  TT1_1.push(10)                   
  }
})
.getAttribute('#rs1id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  TT1_1.push(11)                   
  }
})
//------------------------------------------------------------------------------------------------------------------------------------------------
.getAttribute('#trendelenburgLeftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Kemps_1.push(0)                   
  }
})
.getAttribute('#trendelenburgRightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Kemps_1.push(1)                   
  }
})
.getAttribute('#kempsLeftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Kemps_1.push(2)                   
  }
})
.getAttribute('#kempsRightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Kemps_1.push(3)                   
  }
})
.getAttribute('#slumpLeftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Kemps_1.push(4)                   
  }
})
.getAttribute('#slumpRightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Kemps_1.push(5)                   
  }
})
.getAttribute('#straightLegRaiseLeftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Kemps_1.push(6)                   
  }
})
.getAttribute('#straightLegRaiseRightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Kemps_1.push(7)                   
  }
})
.getAttribute('#wellLegRaiseLeftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Kemps_1.push(8)                   
  }
})
.getAttribute('#wellLegRaiseRightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Kemps_1.push(9)                   
  }
})
.getAttribute('#nachlasYeomansLeftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Kemps_1.push(10)                   
  }
})
.getAttribute('#nachlasYeomansRightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Kemps_1.push(11)                   
  }
})
.getAttribute('#positiveMinorsLeftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Kemps_1.push(12)                   
  }
})
.getAttribute('#positiveMinorsRightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Kemps_1.push(13)                   
  }
})
.getAttribute('#positiveAdamsLeftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Kemps_1.push(14)                   
  }
})
.getAttribute('#positiveAdamsRightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Kemps_1.push(15)                   
  }
})

//-----------------------------------------------------------------------------------------------------------------------------
var bb=["#flexionid" , "#extensionid" , "#lateralFlexionLeftid" , "#lateralFlexionRightid" , "#ratationLeftid" , "#ratationRightid"]
for(i=0; i<bb.length; i++){
	this
  .getAttribute(bb[i] , 'value' , function(result){
        
   if(result.value=="60"){
      this
  number_1.push(0)                   
  }
  if(result.value=="25"){
      this
  number_1.push(1)                   
  }
  if(result.value=="45"){
      this
  number_1.push(2)                   
  }
  if(result.value=="30"){
      this
  number_1.push(3)                   
  }
})


}
//----------------------------------------------------------------------------------------------------------------------------------
this
.useCss()
.pause(500)
.getLocationInView('#bigtoeS1Leftid')
.pause(500)
.getLocationInView('#positiveAdamsLeftid')
.pause(500)
.getAttribute('#neurologicalUnremarkable1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  neuro_1.push(0)                   
  }
})
.getAttribute('#neurologicalExcept1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  neuro_1.push(1)                   
  }
})
//-------------------------------------------------------------------------------------------------------------------------------------
.getAttribute('#inguinalAreaL1Leftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  LL_1.push(0)                   
  }
})
.getAttribute('#inguinalAreaL1Right' , 'checked' , function(result){
    if(result.value=="true"){
      this
  LL_1.push(1)                   
  }
})
.getAttribute('#antMedThighL2Leftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  LL_1.push(2)                   
  }
})
.getAttribute('#antMedThighL2Rightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  LL_1.push(3)                   
  }
})
.getAttribute('#medialKneeL3Leftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  LL_1.push(4)                   
  }
})
.getAttribute('#medialKneeL3Rightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  LL_1.push(5)                   
  }
})
.getAttribute('#medialLegL4Leftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  LL_1.push(6)                   
  }
})
.getAttribute('#medialLegL4Rightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  LL_1.push(7)                   
  }
})
.getAttribute('#antLatLegL5Leftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  LL_1.push(8)                   
  }
})
.getAttribute('#antLatLegL5Rightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  LL_1.push(9)                   
  }
})
.getAttribute('#bigtoeS1Leftid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  LL_1.push(10)                   
  }
})
.getAttribute('#bigtoeS1Rightid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  LL_1.push(11)                   
  }
})
//--------------------------------------------------------------------------------------------------------------------------
.getAttribute('#sittingid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  DEFICIT_1.push(0)                   
  }
})
.getAttribute('#liftingid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  DEFICIT_1.push(1)                   
  }
})
.getAttribute('#walkingid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  DEFICIT_1.push(2)                   
  }
})
.getAttribute('#stairsid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  DEFICIT_1.push(3)                   
  }
})
.getAttribute('#functionalDeficitOtherid' , 'checked' , function(result){
    if(result.value=="true"){
      this
  DEFICIT_1.push(4)    
          this
  .verify.visible('#lumbofunctionalDeficitOtherTextid')
  this
  .isVisible('#lumbofunctionalDeficitOtherTextid', function(result) {
            if(result.value==true){
              this
  .getAttribute("#lumbofunctionalDeficitOtherTextid" , 'value' , function(result){
        
   if(result.value=="Gait"){
      this
  oth_1.push(0)                   
  }
  if(result.value=="Distance"){
      this
  oth_1.push(1)                   
  }
  if(result.value=="Other"){
      this
  oth_1.push(2)                   
  }
  if(result.value=="Assistive"){
      this
  oth_1.push(3)                   
  }
})  
}
})               
  }
})
//-------------------------------------------------------------------------------------------------------------------------------
var cc=["#iliopsoasL1Leftid" , "#iliopsoasL1Rightid" , "#iliopsoasL2Leftid" , "#iliopsoasL2Rightid" , "#iliopsoasL3Leftid" , "#iliopsoasL3Rightid" , "#rectusFemL4Leftid" , "#rectusFemL4Rightid" , "#glutMedL5Leftid" , "#glutMedL5Rightid" , "#glutMaxS1Leftid" , "#glutMaxS1Rightid" , "#patellarL4Leftid" , "#patellarL4Rightid" ,  "#medHsL5Leftid" , "#medHsL5Rightid" , "#achillesS1Leftid" , "#achillesS1Rightid"]
for(i=0; i<cc.length; i++){
	this
  .getAttribute(cc[i] , 'value' , function(result){
        
   if(result.value=="1"){
      this
  value_1.push(0)                   
  }
  if(result.value=="2"){
      this
  value_1.push(1)                   
  }
  if(result.value=="3"){
      this
  value_1.push(2)                   
  }
  if(result.value=="4"){
      this
  value_1.push(3)                   
  }
  if(result.value=="5"){
      this
  value_1.push(4)                   
  }
})


}
//-------------------------------------------------------------------------------------------------------------------
var text_ck=["#gaitid" , "#distance" , "#other" , "#assistiveid" , "#otherNoteid"]
var aa2_ck=['pelvicUnlevelingleftid','pelvicUnlevelingrightid']
var aa3_ck=['allSoftTissueUnremarkableid','softTissueExceptid','discrepancyShortLegleftid','discrepancyShortLegrightid']
var aa4_ck=['piriformisleftid','piriformisrightid']
var aa5_ck=['quadLumbleftid','quadLumbrightid']
var aa6_ck=['paraspinalsleftid','paraspinalsrigjht']
var aa7_ck=['gluteusMaximusleftid','gluteusMaximusrightid']
var aa8_ck=['gluteusMediusleftid','gluteusMediusrightid']
var aa9_ck=['hamstringsleftid','hamstringsrightid']
var aa10_ck=['iliopsoasleftid','iliopsoasrightid']
var aa11_ck=['rectusAbdominisleftid','rectusAbdominisrightid']
var aa12_ck=['obliquesleftid','obliquesrightid']
var aa13_ck=['functionalRangeMotionUnremarkableid','functionalRangeMotionExceptid','subluxationUnremarkableid','subluxationExceptid','orthopedicUnremarkableid',
             'orthopedicExceptid']
var aa14_ck=['t89id','t910id','t1011id','t1112id','t12L1id','l12id','l23','l34','t45id','t5S1id','ls1id','rs1id']
var aa15_ck=['trendelenburgLeftid','trendelenburgRightid','kempsLeftid','kempsRightid','slumpLeftid','slumpRightid','straightLegRaiseLeftid','straightLegRaiseRightid',
             'wellLegRaiseLeftid','wellLegRaiseRightid','nachlasYeomansLeftid','nachlasYeomansRightid','positiveMinorsLeftid','positiveMinorsRightid','positiveAdamsLeftid',
             'positiveAdamsRightid']
var number_ck=["#flexionid" , "#extensionid" , "#lateralFlexionLeftid" , "#lateralFlexionRightid" , "#ratationLeftid" , "#ratationRightid"]
var aa16_ck=['neurologicalUnremarkable1','neurologicalExcept1']
var aa17_ck=['inguinalAreaL1Leftid','inguinalAreaL1Right','antMedThighL2Leftid','antMedThighL2Rightid','medialKneeL3Leftid','medialKneeL3Rightid','medialLegL4Leftid',
             'medialLegL4Rightid','antLatLegL5Leftid','antLatLegL5Rightid','bigtoeS1Leftid','bigtoeS1Rightid']
var aa18_ck=['sittingid','liftingid','walkingid','stairsid','functionalDeficitOtherid']    
var value_ck=["#iliopsoasL1Leftid" , "#iliopsoasL1Rightid" , "#iliopsoasL2Leftid" , "#iliopsoasL2Rightid" , "#iliopsoasL3Leftid" , "#iliopsoasL3Rightid" , 
              "#rectusFemL4Leftid" , "#rectusFemL4Rightid" , "#glutMedL5Leftid" , "#glutMedL5Rightid" , "#glutMaxS1Leftid" , "#glutMaxS1Rightid" , 
              "#patellarL4Leftid" , "#patellarL4Rightid" ,  "#medHsL5Leftid" , "#medHsL5Rightid" , "#achillesS1Leftid" , "#achillesS1Rightid"]         


   this
     for(i=0 ; i< text_ck.length; i++){
        this
          .verify.valueContains(text_ck[i] , lumbo.word[text[i]])
     }
       if((aa1.map(Number)).indexOf(1) > -1){
          this
        .verify.elementPresent('input[id="independentid"][checked="checked"]')
        }
        if((aa1.map(Number)).indexOf(2) > -1){
          this
        .verify.elementPresent('input[id="unlimitedid"][checked="checked"]')
        }
        if((aa1.map(Number)).indexOf(3) > -1){
          this
        .verify.elementPresent('input[id="noneid"][checked="checked"]')
        }
        for(i=0; i<aa2.length;i++){
          this
            .verify.elementPresent('input[id="'+aa2_ck[aa2[i]-1]+'"][checked="checked"]')
        }
        this
          .verify.elementPresent('input[id="aox'+AOX+'id"][checked="checked"]')
        for(i=0; i<aa3.length;i++){
          this
            .verify.elementPresent('input[id="'+aa3_ck[aa3[i]]+'"][checked="checked"]')
        }
        
          this
            .verify.elementPresent('input[id="legLengthDiscrepancy'+soft+'id"][checked="checked"]')
            if(soft==9){
              this
                .verify.valueContains('#legLengthDiscrepancyOtherText' , lumbo.word[other[0]])
            }
        for(i=0; i<aa4.length;i++){
          this
            .verify.elementPresent('input[id="'+aa4_ck[aa4[i]-1]+'"][checked="checked"]')
        } 
        for(i=0; i<aa5.length;i++){
          this
            .verify.elementPresent('input[id="'+aa5_ck[aa5[i]-1]+'"][checked="checked"]')
        }  
        for(i=0; i<aa6.length;i++){
          this
            .verify.elementPresent('input[id="'+aa6_ck[aa6[i]-1]+'"][checked="checked"]')
        }  
        for(i=0; i<aa7.length;i++){
          this
            .verify.elementPresent('input[id="'+aa7_ck[aa7[i]-1]+'"][checked="checked"]')
        }  
        for(i=0; i<aa8.length;i++){
          this
            .verify.elementPresent('input[id="'+aa8_ck[aa8[i]-1]+'"][checked="checked"]')
        }  
        for(i=0; i<aa9.length;i++){
          this
            .verify.elementPresent('input[id="'+aa9_ck[aa9[i]-1]+'"][checked="checked"]')
        }  
        for(i=0; i<aa10.length;i++){
          this
            .verify.elementPresent('input[id="'+aa10_ck[aa10[i]-1]+'"][checked="checked"]')
        }  
        for(i=0; i<aa11.length;i++){
          this
            .verify.elementPresent('input[id="'+aa11_ck[aa11[i]-1]+'"][checked="checked"]')
        }  
        for(i=0; i<aa12.length;i++){
          this
            .verify.elementPresent('input[id="'+aa12_ck[aa12[i]-1]+'"][checked="checked"]')
        } 
        for(i=0; i<aa13.length;i++){
          this
            .verify.elementPresent('input[id="'+aa13_ck[aa13[i]]+'"][checked="checked"]')
        }   
        for(i=0; i<aa14.length;i++){
          this
            .verify.elementPresent('input[id="'+aa14_ck[aa14[i]]+'"][checked="checked"]')
        } 
        for(i=0; i<aa15.length;i++){
          this
            .verify.elementPresent('input[id="'+aa15_ck[aa15[i]]+'"][checked="checked"]')
        } 
        for(i=0 ;i<number_ck.length; i++){
          this
            .verify.valueContains(number_ck[i] , lumbo.num[number[i]])
        } 
        for(i=0; i<aa16.length;i++){
          this
            .verify.elementPresent('input[id="'+aa16_ck[aa16[i]]+'"][checked="checked"]')
        }   
        for(i=0; i<aa17.length;i++){
          this
            .verify.elementPresent('input[id="'+aa17_ck[aa17[i]]+'"][checked="checked"]')
        } 
        for(i=0; i<aa18.length;i++){
          this
            .verify.elementPresent('input[id="'+aa18_ck[aa18[i]]+'"][checked="checked"]')
            if(aa18_ck[aa18[i]]=='functionalDeficitOtherid'){
              this
                .verify.valueContains('#lumbofunctionalDeficitOtherTextid' , lumbo.word[aa19[0]])
            }
        }  
          for(i=0; i<value_ck.length;i++){
            this
              .verify.valueContains(value_ck[i], lumbo.val[value[i]])
          }  
        




  // console.log("text---------------->"+[JSON.stringify(text.sort())==JSON.stringify(text_1.sort())])
  // console.log("observation--------->"+[JSON.stringify(aa1.sort())==JSON.stringify(observation_1.sort())])
  //console.log("Pelvic_Unleveling--->"+[JSON.stringify(aa2.sort())==JSON.stringify(Pelvic_Unleveling_1.sort())])
  //console.log("AOX----------------->"+[AOX==AOX_1])
  //console.log("palpation----------->"+[JSON.stringify(aa3.sort())==JSON.stringify(palpation_1.sort())])
  //console.log("soft---------------->"+[soft==soft_1])
  //console.log("Piriformis---------->"+[JSON.stringify(aa4.sort())==JSON.stringify(Piriformis_1.sort())])
  //console.log("Quad_Lumb----------->"+[JSON.stringify(aa5.sort())==JSON.stringify(Quad_Lumb_1.sort())])
  //console.log("Paraspinals--------->"+[JSON.stringify(aa6.sort())==JSON.stringify(Paraspinals_1.sort())])
  //console.log("Gluteus_Maximus----->"+[JSON.stringify(aa7.sort())==JSON.stringify(Gluteus_Maximus_1.sort())])
  //console.log("Gluteus_Medius------>"+[JSON.stringify(aa8.sort())==JSON.stringify(Gluteus_Medius_1.sort())])
  //console.log("Hamstrings---------->"+[JSON.stringify(aa9.sort())==JSON.stringify(Hamstrings_1.sort())])
  //console.log("Iliopsoas----------->"+[JSON.stringify(aa10.sort())==JSON.stringify(Iliopsoas_1.sort())])
  //console.log("Rectus_Abdominis---->"+[JSON.stringify(aa11.sort())==JSON.stringify(Rectus_Abdominis_1.sort())])
  //console.log("Obliques------------>"+[JSON.stringify(aa12.sort())==JSON.stringify(Obliques_1.sort())])
  //console.log("other--------------->"+[JSON.stringify(other.sort())==JSON.stringify(other_1.sort())])
  //console.log("function------------>"+[JSON.stringify(aa13.sort())==JSON.stringify(funct_1.sort())])
  //console.log("TT1----------------->"+[JSON.stringify(aa14.sort(function(a, b){return a-b}))==JSON.stringify(TT1_1.sort(function(a, b){return a-b}))])
  //console.log("Kemps--------------->"+[JSON.stringify(aa15.sort(function(a, b){return a-b}))==JSON.stringify(Kemps_1.sort(function(a, b){return a-b}))])
  //console.log("number-------------->"+[JSON.stringify(number.sort())==JSON.stringify(number_1.sort())])
  // console.log("NEUROLOGICAL-------->"+[JSON.stringify(aa16.sort())==JSON.stringify(neuro_1.sort())])
  // console.log("LL------------------>"+[JSON.stringify(aa17.sort(function(a, b){return a-b}))==JSON.stringify(LL_1.sort(function(a, b){return a-b}))])
  // console.log("FUNCTIONAL DEFICIT-->"+[JSON.stringify(aa18.sort())==JSON.stringify(DEFICIT_1.sort())])
  // console.log("other2-------------->"+[JSON.stringify(aa19.sort())==JSON.stringify(oth_1.sort())])
  //console.log("value--------------->"+[JSON.stringify(value.sort())==JSON.stringify(value_1.sort())])
}