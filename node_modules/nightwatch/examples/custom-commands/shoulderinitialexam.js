exports.command = function(pal_1, Pectoralis_Minor_1, Supraspinatus_1, Infraspinatus_1, Serratus_Anterior_1, Teres_Minor_1, Teres_Major_1, Rhomboids_1, 
                           Trapezius_1, AOX_1, APPEARANCE_1, view_1, Empty_1, Flexion_1, cc_1, def_1, other_1, level_1,APPEARANCE,AOX,aa1,aa2,aa3,aa4,aa5,
                             aa6,aa7,aa8,aa9,aa10,aa11,sho,Flexion,aa12,level,aa13,aa14){
	this
	.useCss()
        .getLocationInView('#flexionLeft_id')
        .pause(500)
        .getLocationInView('#shoulderExamDate_id')
        .pause(500)
        .getAttribute('#allSoftTissueUnremarkable1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  pal_1.push(0)                   
  }
})
.getAttribute('#allSoftTissueExcept1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  pal_1.push(1)                   
  }
})
.getAttribute('#rangeOfMotionUnremarkable1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  pal_1.push(2)                   
  }
})
.getAttribute('#rangeOfMotionExcept1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  pal_1.push(3)                   
  }
})
.getAttribute('#orthopedicTestingUnremarkable1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  pal_1.push(4)                   
  }
})
.getAttribute('#orthopedicTestingExcept1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  pal_1.push(5)                   
  }
})
//----------------------------------------------------------------------------------------------------------
.getAttribute('#pectoralisMinor_left_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Pectoralis_Minor_1.push(1)                   
  }
})
.getAttribute('#pectoralisMinor_right_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Pectoralis_Minor_1.push(2)                   
  }
})
//------------------------------------------------------------------------------------------------------------
.getAttribute('#supraspinatus_left_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Supraspinatus_1.push(1)                   
  }
})
.getAttribute('#supraspinatus_right_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Supraspinatus_1.push(2)                   
  }
})
//------------------------------------------------------------------------------------------------------------
.getAttribute('#infraspinatus_left_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Infraspinatus_1.push(1)                   
  }
})
.getAttribute('#infraspinatus_right_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Infraspinatus_1.push(2)                   
  }
})
//------------------------------------------------------------------------------------------------------------
.getAttribute('#serratusAnt_left_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Serratus_Anterior_1.push(1)                   
  }
})
.getAttribute('#serratusAnt_right_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Serratus_Anterior_1.push(2)                   
  }
})
//------------------------------------------------------------------------------------------------------------
.getAttribute('#teresMinor_left_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Teres_Minor_1.push(1)                   
  }
})
.getAttribute('#teresMinor_right_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Teres_Minor_1.push(2)                   
  }
})
//------------------------------------------------------------------------------------------------------------
.getAttribute('#teresMajor_left_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Teres_Major_1.push(1)                   
  }
})
.getAttribute('#teresMajor_right_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Teres_Major_1.push(2)                   
  }
})
//------------------------------------------------------------------------------------------------------------
.getAttribute('#rhomboids_left_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Rhomboids_1.push(1)                   
  }
})
.getAttribute('#rhomboids_right_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Rhomboids_1.push(2)                   
  }
})
//------------------------------------------------------------------------------------------------------------
.getAttribute('#trapezius_left_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Trapezius_1.push(1)                   
  }
})
.getAttribute('#trapezius_right_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Trapezius_1.push(2)                   
  }
})
//------------------------------------------------------------------------------------------------------------
.getAttribute('#AOX_one_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  AOX_1.push(1)                   
  }
})
.getAttribute('#AOX_two_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  AOX_1.push(2)                   
  }
})
.getAttribute('#AOX_three_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  AOX_1.push(3)                   
  }
})
.getAttribute('#AOX_four_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  AOX_1.push(4)                   
  }
})
//-----------------------------------------------------------------------------------------------------------------
var aa=["#shoulderMuscleSymmetry_id" , "#shoulderSwellingDiscoloration_id" , "#otherNote_id"]
for(i=0; i<aa.length; i++){
	this
	  .getAttribute(aa[i] , 'value' , function(result){
        
   if(result.value=="Muscle"){
      this
  APPEARANCE_1.push(0)                   
  }
  if(result.value=="Swelling"){
      this
  APPEARANCE_1.push(1)                   
  }
  if(result.value=="Other"){
      this
  APPEARANCE_1.push(2)                   
  }
  if(result.value=="Impingement"){
      this
  APPEARANCE_1.push(3)                   
  }
})
}
//------------------------------------------------------------------------------------------------------------------
this
.useCss()
.pause(500)
.getLocationInView('#neurologicalTestingUnremarkable1')
.pause(500)
.getLocationInView('#rangeOfMotionUnremarkable1')
.pause(500)
.getAttribute('#neurologicalTestingUnremarkable1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  view_1.push(0)                   
  }
})
.getAttribute('#neurologicalTestingExcept1' , 'checked' , function(result){
    if(result.value=="true"){
      this
  view_1.push(1)                   
  }
})
//--------------------------------------------------------------------------------------------------------------------
.getAttribute('#emptyCanLeft_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Empty_1.push(0)                   
  }
})
.getAttribute('#emptyCanRight_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Empty_1.push(1)                   
  }
})
.getAttribute('#impingementSignLeft_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Empty_1.push(2)                   
  }
})
.getAttribute('#impingementSignRight_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Empty_1.push(3)                   
  }
})
.getAttribute('#apleysScratchLeft_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Empty_1.push(4)                   
  }
})
.getAttribute('#apleysScratchRight_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Empty_1.push(5)                   
  }
})
.getAttribute('#subacrominalPushLeft_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Empty_1.push(6)                   
  }
})
.getAttribute('#subacrominalPushRight_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Empty_1.push(7)                   
  }
})
.getAttribute('#dawbarnsLeft_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Empty_1.push(8)                   
  }
})
.getAttribute('#dawbarnsRight_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Empty_1.push(9)                   
  }
})
.getAttribute('#yergasonsLeft_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Empty_1.push(10)                   
  }
})
.getAttribute('#yergasonsRight_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Empty_1.push(11)                   
  }
})
.getAttribute('#codmansLeft_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Empty_1.push(12)                   
  }
})
.getAttribute('#codmansRight_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Empty_1.push(13)                   
  }
})

.getAttribute('#apprehensionLeft_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Empty_1.push(14)                   
  }
})
.getAttribute('#apprehensionRight_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  Empty_1.push(15)                   
  }
})
//---------------------------------------------------------------------------------------------------------------------------------
var bb=["#flexionLeft_id" , "#flexionRight_id" , "#extensionLeft_id" , "#extensionRight_id" , "#abductionLeft_id" , "#abductionRight_id" , "#adductionLeft_id" , "#adductionRight_id" , "#internalRotationLeft_id" , "#internalRotationRight_id" , "#externalRotationLeft_id" , "#externalRotationRight_id"]
for(i=0; i<bb.length; i++){
	this
	  .getAttribute(bb[i] , 'value' , function(result){
        
   if(result.value=="50"){
      this
  Flexion_1.push(0)                   
  }
  if(result.value=="35"){
      this
  Flexion_1.push(1)                   
  }
  if(result.value=="90"){
      this
  Flexion_1.push(2)                   
  }
  if(result.value=="45"){
      this
  Flexion_1.push(3)                   
  }
})
}
//-----------------------------------------------------------------------------------------------------------------------------------
this
.useCss()
.pause(500)
.getLocationInView('#functionalDeficit_overhead_id')
.pause(500)
.getLocationInView('#neurologicalTestingUnremarkable1')
.pause(500)
.getAttribute('#sensoryC5Left_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  cc_1.push(0)                   
  }
})
.getAttribute('#sensoryC5Right_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  cc_1.push(1)                   
  }
})
.getAttribute('#sensoryC6Left_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  cc_1.push(2)                   
  }
})
.getAttribute('#sensoryC6Right_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  cc_1.push(3)                   
  }
})
.getAttribute('#sensoryC7Left_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  cc_1.push(4)                   
  }
})
.getAttribute('#sensoryC7Right_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  cc_1.push(5)                   
  }
})
.getAttribute('#sensoryC8Left_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  cc_1.push(6)                   
  }
})
.getAttribute('#sensoryC8Right_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  cc_1.push(7)                   
  }
})
.getAttribute('#sensoryT1Left_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  cc_1.push(8)                   
  }
})
.getAttribute('#sensoryT1Right_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  cc_1.push(9)                   
  }
})
//------------------------------------------------------------------------------------------------------------------
.getAttribute('#functionalDeficit_overhead_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  def_1.push(0)                   
  }
})
.getAttribute('#functionalDeficit_lifting_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  def_1.push(1)                   
  }
})
.getAttribute('#functionalDeficit_other_id' , 'checked' , function(result){
    if(result.value=="true"){
      this
  def_1.push(2)   
          this
  .verify.visible('#shoulderfunctionalDeficitOther_id')
  this
  .isVisible('#shoulderfunctionalDeficitOther_id', function(result) {
            if(result.value==true){
              this
  .getAttribute("#shoulderfunctionalDeficitOther_id" , 'value' , function(result){
        
   if(result.value=="Muscle"){
      this
  other_1.push(0)                   
  }
  if(result.value=="Swelling"){
      this
  other_1.push(1)                   
  }
  if(result.value=="Other"){
      this
  other_1.push(2)                   
  }
  if(result.value=="Impingement"){
      this
  other_1.push(3)                   
  }
})  
}
})                 
  }
})
//-------------------------------------------------------------------------------------------------------------------
var cc=["#motorStrengthC5Left_id" , "#motorStrengthC5Right_id" , "#motorStrengthC6Left_id" , "#motorStrengthC6Right_id" , "#motorStrengthC7Left_id" , "#motorStrengthC7Right_id" , "#motorStrengthC8Left_id" , "#motorStrengthC8Right_id" , "#motorStrengthT1Left_id" , "#motorStrengthT1Right_id" , "#reflexesC5Left_id" , "#reflexesC5Right_id" , "#reflexesC6Left_id" , "#reflexesC6Right_id" , "#reflexesC7Left_id" , "#reflexesC7Right_id"]
for(i=0; i<cc.length; i++){
	this
	  .getAttribute(cc[i] , 'value' , function(result){
        
   if(result.value=="1"){
      this
  level_1.push(0)                   
  }
  if(result.value=="2"){
      this
  level_1.push(1)                   
  }
  if(result.value=="3"){
      this
  level_1.push(2)                   
  }
  if(result.value=="4"){
      this
  level_1.push(3)                   
  }
  if(result.value=="5"){
      this
  level_1.push(4)                   
  }
})
}
//--------------------------------------------------------------------------------------------------------------------------
  var APPEARANCE_ck=["#shoulderMuscleSymmetry_id" , "#shoulderSwellingDiscoloration_id" , "#otherNote_id"]
  var aa1_ck=['allSoftTissueUnremarkable1','allSoftTissueExcept1','rangeOfMotionUnremarkable1','rangeOfMotionExcept1','orthopedicTestingUnremarkable1',
              'orthopedicTestingExcept1']
  var aa2_ck=['pectoralisMinor_left_id','pectoralisMinor_right_id']
  var aa3_ck=['supraspinatus_left_id','supraspinatus_right_id']
  var aa4_ck=['infraspinatus_left_id','infraspinatus_right_id']
  var aa5_ck=['serratusAnt_left_id','serratusAnt_right_id']
  var aa6_ck=['teresMinor_left_id','teresMinor_right_id']
  var aa7_ck=['teresMajor_left_id','teresMajor_right_id']
  var aa8_ck=['rhomboids_left_id','rhomboids_right_id']
  var aa9_ck=['trapezius_left_id','trapezius_right_id']
  var aa10_ck=['neurologicalTestingUnremarkable1','neurologicalTestingExcept1']
  var aa11_ck=['emptyCanLeft_id','emptyCanRight_id','impingementSignLeft_id','impingementSignRight_id','apleysScratchLeft_id','apleysScratchRight_id',
               'subacrominalPushLeft_id','subacrominalPushRight_id','dawbarnsLeft_id','dawbarnsRight_id','yergasonsLeft_id','yergasonsRight_id','codmansLeft_id',
               'codmansRight_id','apprehensionLeft_id','apprehensionRight_id']
  var Flexion_ck=["#flexionLeft_id" , "#flexionRight_id" , "#extensionLeft_id" , "#extensionRight_id" , "#abductionLeft_id" , "#abductionRight_id" , 
                  "#adductionLeft_id" , "#adductionRight_id" , "#internalRotationLeft_id" , "#internalRotationRight_id" , "#externalRotationLeft_id" , 
                  "#externalRotationRight_id"]             
  var aa12_ck=['sensoryC5Left_id','sensoryC5Right_id','sensoryC6Left_id','sensoryC6Right_id','sensoryC7Left_id','sensoryC7Right_id','sensoryC8Left_id','sensoryC8Right_id',
               'sensoryT1Left_id','sensoryT1Right_id']    
  var level_ck=["#motorStrengthC5Left_id" , "#motorStrengthC5Right_id" , "#motorStrengthC6Left_id" , "#motorStrengthC6Right_id" , "#motorStrengthC7Left_id" , 
                "#motorStrengthC7Right_id" , "#motorStrengthC8Left_id" , "#motorStrengthC8Right_id" , "#motorStrengthT1Left_id" , "#motorStrengthT1Right_id" , 
                "#reflexesC5Left_id" , "#reflexesC5Right_id" , "#reflexesC6Left_id" , "#reflexesC6Right_id" , "#reflexesC7Left_id" , "#reflexesC7Right_id"] 
  var aa13_ck=['functionalDeficit_overhead_id','functionalDeficit_lifting_id','functionalDeficit_other_id']                

       this
         for(i=0; i<APPEARANCE_ck.length;i++){
             if(APPEARANCE_ck[i]!="#otherNote_id"){
                this
                  .verify.valueContains(APPEARANCE_ck[i] , sho.word[APPEARANCE[i]])
             }else{
                  this
                  .verify.containsText(APPEARANCE_ck[i] , sho.word[APPEARANCE[i]])
             }
         }
      this
        .verify.elementPresent('input[name="AOX"][value="'+AOX+'"][checked="checked"]')   
         
          for(i=0; i<aa1_ck; i++){
              this
                .verify.elementPresent('input[id="'+aa1_ck[aa1[i]]+'"][checked="checked"]')
          }
          for(i=0; i<aa2_ck; i++){
              this
                .verify.elementPresent('input[id="'+aa2_ck[aa2[i]-1]+'"][checked="checked"]')
          }
          for(i=0; i<aa3_ck; i++){
              this
                .verify.elementPresent('input[id="'+aa3_ck[aa3[i]-1]+'"][checked="checked"]')
          }
          for(i=0; i<aa4_ck; i++){
              this
                .verify.elementPresent('input[id="'+aa4_ck[aa4[i]-1]+'"][checked="checked"]')
          }
          for(i=0; i<aa5_ck; i++){
              this
                .verify.elementPresent('input[id="'+aa5_ck[aa5[i]-1]+'"][checked="checked"]')
          }
          for(i=0; i<aa6_ck; i++){
              this
                .verify.elementPresent('input[id="'+aa6_ck[aa6[i]-1]+'"][checked="checked"]')
          }
          for(i=0; i<aa7_ck; i++){
              this
                .verify.elementPresent('input[id="'+aa7_ck[aa7[i]-1]+'"][checked="checked"]')
          }
          for(i=0; i<aa8_ck; i++){
              this
                .verify.elementPresent('input[id="'+aa8_ck[aa8[i]-1]+'"][checked="checked"]')
          }
          for(i=0; i<aa9_ck; i++){
              this
                .verify.elementPresent('input[id="'+aa9_ck[aa9[i]-1]+'"][checked="checked"]')
          }
          for(i=0; i<aa10_ck; i++){
              this
                .verify.elementPresent('input[id="'+aa10_ck[aa10[i]]+'"][checked="checked"]')
          }
          for(i=0; i<aa11_ck; i++){
              this
                .verify.elementPresent('input[id="'+aa11_ck[aa11[i]]+'"][checked="checked"]')
          }
          for(i=0; i<Flexion_ck.length;i++){
             this
               .verify.valueContains(Flexion_ck[i] , sho.num[Flexion[i]])
          }
          for(i=0; i<aa12_ck; i++){
              this
                .verify.elementPresent('input[id="'+aa12_ck[aa12[i]]+'"][checked="checked"]')
          }
          for(i=0; i<level_ck; i++){
            this
              .verify.valueContains(level_ck[i] , sho.val[level[i]])
          }
          for(i=0; i<aa13_ck; i++){
              this
                .verify.elementPresent('input[id="'+aa13_ck[aa13[i]]+'"][checked="checked"]')
                  if(aa13_ck[aa13[i]]=='functionalDeficit_other_id'){
                      this
                        .verify.valueContains('#shoulderfunctionalDeficitOther_id' , sho.word[aa14[0]])
                  }
          }

}