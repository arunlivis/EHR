exports.command = function(Dominant_1, PALPATION_1, Thenar_Eminence_1, Flexor_Carpi_Radialis_1, Common_Flexors_1, Hypothenar_Eminence_1, Extensor_Carpi_1, 
	                      Common_Extensor_1,Abductor_Pollius_Longus_1, Abductor_Pollicis_Brevis_1, Extensor_Pollicis_Brevis_1, functional_range_1, 
	                      orthopedic_testing_1, Allen_1, neurological_1,cc_1, FUNCTIONAL_DEFICIT_1, FUNCTIONAL_DEFICIT_other_1, Muscle_Symmetry_1, Swelling_1, 
	                      other_1, aox_1, Wrist_Flexion_1, c5_1, abc1,abc2,abc3,abc4,abc5,abc6,abc7,abc8,abc9,abc10,abc11,abc13,abc14,abc15, abc16,abc17,abc18,
	                      abc19,Muscle_Symmetry,Swelling,other,aox,Wrist_Flexion,c5){
	this
	.pause(500)
	.useCss()
	.getAttribute('#dominantHand_left' , 'checked' , function(result){
		if (result.value=="true") {
               Dominant_1.push(0)
		}
	})
	.getAttribute('#dominantHand_right' , 'checked' , function(result){
		if (result.value=="true") {
               Dominant_1.push(1)
		}
	})
//----------------------------------------------------------------------------------------------	
.getAttribute('#allSoftTissueUnremarkable1' , 'checked' , function(result){
		if (result.value=="true") {
               PALPATION_1.push(0)
		}
	})
	.getAttribute('#softTissueExcept1' , 'checked' , function(result){
		if (result.value=="true") {
               PALPATION_1.push(1)
		}
	})
	
//-----------------------------------------------------------------------------------------------	
.getAttribute('#thenarEminence_left_id' , 'checked' , function(result){
		if (result.value=="true") {
               Thenar_Eminence_1.push(0)
		}
	})
	.getAttribute('#thenarEminence_right_id' , 'checked' , function(result){
		if (result.value=="true") {
               Thenar_Eminence_1.push(1)
		}
	})
	
//-----------------------------------------------------------------------------------------------	
.getAttribute('#flexorCarpiRadialis_left' , 'checked' , function(result){
		if (result.value=="true") {
               Flexor_Carpi_Radialis_1.push(0)
		}
	})
	.getAttribute('#flexorCarpiRadialis_right' , 'checked' , function(result){
		if (result.value=="true") {
               Flexor_Carpi_Radialis_1.push(1)
		}
	})
	
//-----------------------------------------------------------------------------------------------	
.getAttribute('#commonFlexors_left' , 'checked' , function(result){
		if (result.value=="true") {
               Common_Flexors_1.push(0)
		}
	})
	.getAttribute('#commonFlexors_right' , 'checked' , function(result){
		if (result.value=="true") {
               Common_Flexors_1.push(1)
		}
	})
	
//-----------------------------------------------------------------------------------------------	
.getAttribute('#hypothenarEminence_left' , 'checked' , function(result){
		if (result.value=="true") {
               Hypothenar_Eminence_1.push(0)
		}
	})
	.getAttribute('#hypothenarEminence_right' , 'checked' , function(result){
		if (result.value=="true") {
               Hypothenar_Eminence_1.push(1)
		}
	})
	
//-----------------------------------------------------------------------------------------------	
.getAttribute('#extensorCarpiRadialis_left' , 'checked' , function(result){
		if (result.value=="true") {
               Extensor_Carpi_1.push(0)
		}
	})
	.getAttribute('#extensorCarpiRadialis_right' , 'checked' , function(result){
		if (result.value=="true") {
               Extensor_Carpi_1.push(1)
		}
	})
	
//-----------------------------------------------------------------------------------------------	
.getAttribute('#commonExtensor_left' , 'checked' , function(result){
		if (result.value=="true") {
               Common_Extensor_1.push(0)
		}
	})
	.getAttribute('#commonExtensor_right' , 'checked' , function(result){
		if (result.value=="true") {
               Common_Extensor_1.push(1)
		}
	})
	
//-----------------------------------------------------------------------------------------------	
.getAttribute('#abductorPolliusLongus_left' , 'checked' , function(result){
		if (result.value=="true") {
               Abductor_Pollius_Longus_1.push(0)
		}
	})
	.getAttribute('#abductorPolliusLongus_right' , 'checked' , function(result){
		if (result.value=="true") {
               Abductor_Pollius_Longus_1.push(1)
		}
	})
	
//-----------------------------------------------------------------------------------------------	
.getAttribute('#abductorPollicisBrevis_left' , 'checked' , function(result){
		if (result.value=="true") {
               Abductor_Pollicis_Brevis_1.push(0)
		}
	})
	.getAttribute('#abductorPollicisBrevis_right' , 'checked' , function(result){
		if (result.value=="true") {
               Abductor_Pollicis_Brevis_1.push(1)
		}
	})
	
//-----------------------------------------------------------------------------------------------	
.getAttribute('#extensorPollicisBrevis_left' , 'checked' , function(result){
		if (result.value=="true") {
               Extensor_Pollicis_Brevis_1.push(0)
		}
	})
	.getAttribute('#extensorPollicisBrevis_right' , 'checked' , function(result){
		if (result.value=="true") {
               Extensor_Pollicis_Brevis_1.push(1)
		}
	})
	
//-----------------------------------------------------------------------------------------------
.getValue('#muscleSymmetry_id' , function(result){
         Muscle_Symmetry_1.push(result.value)
})
.getValue('#swellingOrDiscoloration_id' , function(result){
         Swelling_1.push(result.value)
})
.getValue('#otherNote_id' , function(result){
         other_1.push(result.value)
})
//-----------------------------------------------------------------------------------------------
for(i=1; i<5; i++){
      var a2=(function(){
        var j=i
        return function(result){
            if(result.value=="true"){
                   aox_1.push(j)
          }
        }})()
        this
      .getAttribute('input[name="AOX"][value="'+i+'"]' , 'checked' , a2)
      }
//----------------------------------------------------------------------------------------------
this
.pause(500)	
.getLocationInView('#pronationOrSupinationLeft_id')
.pause(500)	
.getLocationInView('#otherNote_id')
.pause(500)	
var ab=["#wristFlexionLeft_id" , "#wristFlexionRight_id" , "#wristExtensionLeft_id" , "#wristExtensionRight_id" , "#wristUlnarDeviationLeft_id" , 
		"#wristUlnarDeviationRight_id", "#wristRadialDeviationLeft_id" , "#wristRadialDeviationRight_id" , "#pronationOrSupinationLeft_id" , 
		"#pronationOrSupinationRight_id"]
for(i=0; i<ab.length;i++){
	this
.getValue(ab[i], function(result){
	Wrist_Flexion_1.push(result.value)
})
}

//--------------------------------------------------------------------------------------
this
.getAttribute('#rangeOfMotionUnremarkable1' , 'checked' , function(result){
		if (result.value=="true") {
               functional_range_1.push(0)
		}
	})
	.getAttribute('#rangeOfMotionExcept1' , 'checked' , function(result){
		if (result.value=="true") {
               functional_range_1.push(1)
		}
	})
	
//-----------------------------------------------------------------------------------------------
.getAttribute('#orthopedicTestingUnremarkable1' , 'checked' , function(result){
		if (result.value=="true") {
               orthopedic_testing_1.push(0)
		}
	})
	.getAttribute('#orthopedicTestingExcept1' , 'checked' , function(result){
		if (result.value=="true") {
               orthopedic_testing_1.push(1)
		}
	})
	
//-----------------------------------------------------------------------------------------------
.getAttribute('#allensLeft_id' , 'checked' , function(result){
		if (result.value=="true") {
               Allen_1.push(0)
		}
	})
.getAttribute('#allensRight_id' , 'checked' , function(result){
		if (result.value=="true") {
               Allen_1.push(1)
		}
	})
.getAttribute('#phalensLeft_id' , 'checked' , function(result){
		if (result.value=="true") {
               Allen_1.push(2)
		}
	})
.getAttribute('#phalensRight_id' , 'checked' , function(result){
		if (result.value=="true") {
               Allen_1.push(3)
		}
	})
.getAttribute('#reversePhalensLeft_id' , 'checked' , function(result){
		if (result.value=="true") {
               Allen_1.push(4)
		}
	})
.getAttribute('#reversePhalensRight_id' , 'checked' , function(result){
		if (result.value=="true") {
               Allen_1.push(5)
		}
	})
.getAttribute('#finkelsteinsLeft_id' , 'checked' , function(result){
		if (result.value=="true") {
               Allen_1.push(6)
		}
	})
.getAttribute('#finkelsteinsRight_id' , 'checked' , function(result){
		if (result.value=="true") {
               Allen_1.push(7)
		}
	})
.getAttribute('#tinnelsLeft_id' , 'checked' , function(result){
		if (result.value=="true") {
               Allen_1.push(8)
		}
	})
.getAttribute('#tinnelsRight_id' , 'checked' , function(result){
		if (result.value=="true") {
               Allen_1.push(9)
		}
	})
.getAttribute('#ulttLeft_id' , 'checked' , function(result){
		if (result.value=="true") {
               Allen_1.push(10)
		}
	})
.getAttribute('#ulttRight_id' , 'checked' , function(result){
		if (result.value=="true") {
               Allen_1.push(11)
		}
	})
//---------------------------------------------------------------------------------------------------------------------
.pause(500)
.getLocationInView('#functionalDeficit_Writing')
.pause(500)
.getLocationInView('#ulttLeft_id')
.pause(500)

.getAttribute('#neurologicalTestingUnremarkable1' , 'checked' , function(result){
		if (result.value=="true") {
               neurological_1.push(0)
		}
	})
	.getAttribute('#neurologicalTestingExcept1' , 'checked' , function(result){
		if (result.value=="true") {
               neurological_1.push(1)
		}
	})
	
//-----------------------------------------------------------------------------------------------
.getAttribute('#sensoryC5Left_id' , 'checked' , function(result){
		if (result.value=="true") {
               cc_1.push(0)
		}
	})
.getAttribute('#sensoryC5Right_id' , 'checked' , function(result){
		if (result.value=="true") {
               cc_1.push(1)
		}
	})
.getAttribute('#sensoryC6Left_id' , 'checked' , function(result){
		if (result.value=="true") {
               cc_1.push(2)
		}
	})
.getAttribute('#sensoryC6Right_id' , 'checked' , function(result){
		if (result.value=="true") {
               cc_1.push(3)
		}
	})
.getAttribute('#sensoryC7Left_id' , 'checked' , function(result){
		if (result.value=="true") {
               cc_1.push(4)
		}
	})
.getAttribute('#sensoryC7Right_id' , 'checked' , function(result){
		if (result.value=="true") {
               cc_1.push(5)
		}
	})
.getAttribute('#sensoryC8Left_id' , 'checked' , function(result){
		if (result.value=="true") {
               cc_1.push(6)
		}
	})
.getAttribute('#sensoryC8Right_id' , 'checked' , function(result){
		if (result.value=="true") {
               cc_1.push(7)
		}
	})
.getAttribute('#sensoryT1Left_id' , 'checked' , function(result){
		if (result.value=="true") {
               cc_1.push(8)
		}
	})
.getAttribute('#sensoryT1Right_id' , 'checked' , function(result){
		if (result.value=="true") {
               cc_1.push(9)
		}
	})
//-------------------------------------------------------------------------------------------------------
.getAttribute('#functionalDeficit_Writing' , 'checked' , function(result){
		if (result.value=="true") {
               FUNCTIONAL_DEFICIT_1.push(0)
		}
	})
.getAttribute('#functionalDeficit_Driving' , 'checked' , function(result){
		if (result.value=="true") {
               FUNCTIONAL_DEFICIT_1.push(1)
		}
	})
.getAttribute('#functionalDeficit_Other' , 'checked' , function(result){
		if (result.value=="true") {
               FUNCTIONAL_DEFICIT_1.push(2)
               this
               .getValue('#wristfunctionalDeficitOther_id' , function(result){
               	   FUNCTIONAL_DEFICIT_other_1.push(result.value)
               })
		}
	})
//-------------------------------------------------------------------------------------------------------
var az=["#motorStrengthC5Left_id" , "#motorStrengthC5Right_id" , "#motorStrengthC6Left_id" , "#motorStrengthC6Right_id" , "#motorStrengthC7Left_id" , 
         "#motorStrengthC7Right_id" , "#motorStrengthC8Left_id" , "#motorStrengthC8Right_id" , "#motorStrengthT1Left_id" , "#motorStrengthT1Right_id" , 
         "#reflexesC5Left_id" , "#reflexesC5Right_id" , "#reflexesC6Left_id" , "#reflexesC6Right_id" , "#reflexesC7Left_id" , "#reflexesC7Right_id"]

         for(i=0; i<az.length;i++){
          	this
              .getValue(az[i], function(result){
              	c5_1.push(result.value)
              })
          }
//--------------------------------------------------------------------------------------------------------------------------------
var abc1_ck=['dominantHand_left','dominantHand_right']
var abc2_ck=['allSoftTissueUnremarkable1','softTissueExcept1']
var abc3_ck=['thenarEminence_left_id','thenarEminence_right_id']
var abc4_ck=['flexorCarpiRadialis_left','flexorCarpiRadialis_right']
var abc5_ck=['commonFlexors_left','commonFlexors_right']
var abc6_ck=['hypothenarEminence_left','hypothenarEminence_right']
var abc7_ck=['extensorCarpiRadialis_left','extensorCarpiRadialis_right']
var abc8_ck=['commonExtensor_left','commonExtensor_right']
var abc9_ck=['abductorPolliusLongus_left','abductorPolliusLongus_right']
var abc10_ck=['abductorPollicisBrevis_left','abductorPollicisBrevis_right']
var abc11_ck=['extensorPollicisBrevis_left','extensorPollicisBrevis_right']
var abc13_ck=['rangeOfMotionUnremarkable1','rangeOfMotionExcept1']
var abc14_ck=['orthopedicTestingUnremarkable1','orthopedicTestingExcept1']
var abc15_ck=['allensLeft_id','allensRight_id','phalensLeft_id','phalensRight_id','reversePhalensLeft_id','reversePhalensRight_id','finkelsteinsLeft_id','finkelsteinsRight_id',
              'tinnelsLeft_id','tinnelsRight_id','ulttLeft_id','ulttRight_id']
var abc16_ck=['neurologicalTestingUnremarkable1','neurologicalTestingExcept1']   
var abc17_ck=['sensoryC5Left_id','sensoryC5Right_id','sensoryC6Left_id','sensoryC6Right_id','sensoryC7Left_id','sensoryC7Right_id','sensoryC8Left_id',
              'sensoryC8Right_id','sensoryT1Left_id','sensoryT1Right_id']      
var abc18_ck=['functionalDeficit_Writing','functionalDeficit_Driving','functionalDeficit_Other']   
var Wrist_Flexion_ck=["#wristFlexionLeft_id" , "#wristFlexionRight_id" , "#wristExtensionLeft_id" , "#wristExtensionRight_id" , "#wristUlnarDeviationLeft_id" , 
		              "#wristUlnarDeviationRight_id", "#wristRadialDeviationLeft_id" , "#wristRadialDeviationRight_id" , "#pronationOrSupinationLeft_id" , 
		              "#pronationOrSupinationRight_id"]    
var c5_ck=["#motorStrengthC5Left_id" , "#motorStrengthC5Right_id" , "#motorStrengthC6Left_id" , "#motorStrengthC6Right_id" , "#motorStrengthC7Left_id" , 
         "#motorStrengthC7Right_id" , "#motorStrengthC8Left_id" , "#motorStrengthC8Right_id" , "#motorStrengthT1Left_id" , "#motorStrengthT1Right_id" , 
         "#reflexesC5Left_id" , "#reflexesC5Right_id" , "#reflexesC6Left_id" , "#reflexesC6Right_id" , "#reflexesC7Left_id" , "#reflexesC7Right_id"]		            

     this
        for(i=0; i<abc1.length; i++){
          this
            .verify.elementPresent('input[id="'+abc1_ck[abc1[i]]+'"][checked="checked"]')
        }
        for(i=0; i<abc2.length; i++){
          this
            .verify.elementPresent('input[id="'+abc2_ck[abc2[i]]+'"][checked="checked"]')
        }
        for(i=0; i<abc3.length; i++){
          this
            .verify.elementPresent('input[id="'+abc3_ck[abc3[i]]+'"][checked="checked"]')
        }
        for(i=0; i<abc4.length; i++){
          this
            .verify.elementPresent('input[id="'+abc4_ck[abc4[i]]+'"][checked="checked"]')
        }
        for(i=0; i<abc5.length; i++){
          this
            .verify.elementPresent('input[id="'+abc5_ck[abc5[i]]+'"][checked="checked"]')
        }
        for(i=0; i<abc6.length; i++){
          this
            .verify.elementPresent('input[id="'+abc6_ck[abc6[i]]+'"][checked="checked"]')
        }
        for(i=0; i<abc7.length; i++){
          this
            .verify.elementPresent('input[id="'+abc7_ck[abc7[i]]+'"][checked="checked"]')
        }
        for(i=0; i<abc8.length; i++){
          this
            .verify.elementPresent('input[id="'+abc8_ck[abc8[i]]+'"][checked="checked"]')
        }
        for(i=0; i<abc9.length; i++){
          this
            .verify.elementPresent('input[id="'+abc9_ck[abc9[i]]+'"][checked="checked"]')
        }
        for(i=0; i<abc10.length; i++){
          this
            .verify.elementPresent('input[id="'+abc10_ck[abc10[i]]+'"][checked="checked"]')
        }
        for(i=0; i<abc11.length; i++){
          this
            .verify.elementPresent('input[id="'+abc11_ck[abc11[i]]+'"][checked="checked"]')
        }
        for(i=0; i<abc13.length; i++){
          this
            .verify.elementPresent('input[id="'+abc13_ck[abc13[i]]+'"][checked="checked"]')
        }
        for(i=0; i<abc14.length; i++){
          this
            .verify.elementPresent('input[id="'+abc14_ck[abc14[i]]+'"][checked="checked"]')
        }
        for(i=0; i<abc15.length; i++){
          this
            .verify.elementPresent('input[id="'+abc15_ck[abc15[i]]+'"][checked="checked"]')
        }
        for(i=0; i<abc16.length; i++){
          this
            .verify.elementPresent('input[id="'+abc16_ck[abc16[i]]+'"][checked="checked"]')
        }
        for(i=0; i<abc17.length; i++){
          this
            .verify.elementPresent('input[id="'+abc17_ck[abc17[i]]+'"][checked="checked"]')
        }
        for(i=0; i<abc18.length; i++){
          this
            .verify.elementPresent('input[id="'+abc18_ck[abc18[i]]+'"][checked="checked"]')
              if(abc18_ck[abc18[i]]=='functionalDeficit_Other'){
              	  this
              	    .verify.valueContains('#wristfunctionalDeficitOther_id' , abc19[0])
              }
        }

        this
          .verify.valueContains('#muscleSymmetry_id' , Muscle_Symmetry)
          .verify.valueContains('#swellingOrDiscoloration_id' , Swelling)
          .verify.valueContains('#otherNote_id' , other)
          .verify.elementPresent('input[id="AOX_'+aox+'_id"][checked="checked"]')

          for(i=0; i<Wrist_Flexion.length;i++){
          	  this
          	    .verify.valueContains(Wrist_Flexion_ck[i] , Wrist_Flexion[i])
          }
          for(i=0; i<c5.length;i++){
          	  this
          	    .verify.valueContains(c5_ck[i] , c5[i])
          }

}