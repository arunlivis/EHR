var Data = require('../EHR_Json/data.json')

var clinic_name_1;
var ein_1;                          var ein_1_1=[];
var address_s;                      var address_1=[];                     
var city_s;                         var city_1=[];                     
var state_s;                        var state_1=[];                     
var zip_s;                          var zip_1=[];                     
var phone_s;                        var phone_1=[];                     
var id;
var first_name;                       var first_name_1=[];
var middle_name;                      var middle_name_1=[];
var last_name;                        var last_name_1=[];
var dob;                              var dob_1=[];
var gender;
var symptoms;
var auto_ck;
var work;
var other;
var fault_name;
var number;                         var number_1=[];
var address;                        var address_1=[];
var state;                          var state_1=[];
var city;                           var city_1=[];
var zipcode;                        var zipcode_1=[];
var type;
var patientsRelationship;
var group;
var insurance_company;
var cpt_code=[];
var fee=[];
var policy_no;
var charge=[];
var diagnosis=[];
var ext=[];
//--------------------------------------------------------------------------------------------------------
var selected;                                var selected_1=[];
var insured_Id;                              var insured_Id_1=[];
var gen1;                                    var gen1_1=[];
var Relationship;                            var Relationship_1=[];
var Employment;                              var Employment_1=[];
var auto;                                    var auto_1=[];
var other;                                   var other_1=[];
var auto_text;                               var auto_text_1=[];
var insured_policy;                          var insured_policy_1=[];
var gen2;                                    var gen2_1=[];
var Insurance_Plan;                          var Insurance_Plan1=[];
var Health_Benefit;                          var Health_Benefit_1=[];
var first;                                   var first_1=[];
var last;                                    var last_1=[];
var middle;                                  var middle_1=[];
var Insurance_Plan_1;                        var Insurance_Plan_1_1=[];
var Insurance_Plan_2;                        var Insurance_Plan_2_1=[];
var QUAL1=[];                                var QUAL1_1=[];
var QUAL2=[];                                var QUAL2_1=[];
var Referring;                               var Referring_1=[];
var physician;                               var physician_1=[];
var NPI;                                     var NPI_1=[];
var outside_lab;                             var outside_lab_1=[];
var lab_fee;                                 var lab_fee_1=[];
var nature_of_ill=[];                        var nature_of_ill_1=[];
var Diagnosis_Pointer;                       var Diagnosis_Pointer_1=[];
var Medicaid_Resubmission_1;                 var Medicaid_Resubmission_1_1=[];
var Medicaid_Resubmission_2;                 var Medicaid_Resubmission_2_1=[];
var Prior_Authorization;                     var Prior_Authorization_1=[];
var Patient_Account;                         var Patient_Account_1=[];
var Accept_Assignment;                       var Accept_Assignment_1=[];
var paid=[];                                 var paid_1=[];
var facilityNpi;                             var facilityNpi_1=[];
var facilityId;                              var facilityId_1=[];
var pin;                                     var pin_1=[];
var grp;                                     var grp_1=[];
var total;
//---------------------------------------------------------------------------------------------------------

var insured_first_name_1=[];
var insured_middle_name_1=[];
var insured_last_name_1=[];
var insured_address_1=[];
var insured_city_1=[];
var insured_state_1=[];
var insured_zipcode_1=[];
var insured_number_1=[];
var dob_2=[];
var date_1=[];
var date_2=[];
var date_3=[];
var date_4=[];
var date_5=[];
var date_6=[];
var date_7=[];
var date_8=[];
var facilityname=[];
var facilityaddress=[];
var facilitycity=[];
var facilitystate=[];
var facilityzipcode=[];
var suppliername=[];
var supplieraddress=[];
var suppliercity=[];
var supplierstate=[];
var supplierzipcode=[];
var supplierphone=[];
var ssn_1=[];
var federalTax_1=[];
var a;
var b;
var c;
var HOST ='ftp.officeally.com';
var USERNAME ='deemsysinc';
var PASSWORD ='pJMnR5YD';
var fault_company;

module.exports={
    login : function (browser) {
        browser 
        .login(Data.user1[1].username, Data.user1[1].password)

},
'clinic profile':function(browser){
	browser
	 .useCss()
	 .pause(500)
	 .click('i[class="fa fa-hospital-o fa-fw"]')
	 .click('a[href="/EHR/Clinicadmin/clinicadmin-profile"]')
	 .waitForElementVisible('button[onclick="changeUsername()"]' , 60000)
	 .pause(500)
	 .getValue('#clinicname_id' , function(result){
	 	clinic_name_1=result.value
	 })
	 .getValue('#clinicein_id' , function(result){
         ein_1=result.value
	 })
	 .getValue('#address_id' , function(result){
	 	  address_s=result.value
	 })
	 .getValue('#city_id' , function(result){
	 	  city_s=result.value
	 })
	 .getAttribute('#state_id' , 'data-state' , function(result){
	 	  state_s=result.value
	 })
	 .getValue('#zipcode_id' , function(result){
	 	zip_s=result.value
	 })
	 .getValue('#clinicphone_id' , function(result){
	 	phone_s=result.value
	 })
	 

},
'office Ally Setting 1':function(browser){
	browser
	   .useCss()
	   .pause(500)
	   .click('a[class=""]')
	   .pause(300)
	   .click('a[href="/EHR/Clinicadmin/getOfficeAllySettings"]')
	   .waitForElementVisible('button[onclick="return officeAllySettingsValidation();"]' , 60000)
	   .pause(500)
	   .getAttribute('input[name="isEnable"][value="0"]' , 'checked' , function(result){
	   	    browser
	   	      if(result.value!="true"){
	   	      	browser
	   	      	   .click('input[name="isEnable"][value="0"]')
	   	      	   .pause(500)
	   	      	   .click('button[onclick="return officeAllySettingsValidation();"]')
	   	      }
	   })

},
'Open Patient 1':function(browser){
	browser
	   .useCss()
	   .click('a[class="firstLevel"]')
	   .pause(500)
	   .click('a[href="/EHR/Clinicadmin/view-patient-details-open"]')
	   .waitForElementVisible('a[onclick="getPatientProfile()"]' , 60000)
	   .pause(1000)
	   .getText('td[class="sorting_1"]' , function(result){
	   	     browser
	   	       .waitForElementVisible('a[onclick="postNavigateToProfile('+result.value+',1);"]' , 60000)
	   	       .pause(1000)
	   	       .click('a[onclick="postNavigateToProfile('+result.value+',1);"]')
	   	       id=result.value
	   })
	   .waitForElementVisible('#patient_first_name', 60000)
	   .pause(800)
	   .getValue('#patient_first_name' , function(result){
	   	       first_name=result.value
	   })
	   .getValue('#patient_middle_name' , function(result){
	   	       middle_name=result.value
	   })
	   .getValue('#patient_last_name' , function(result){
	   	       last_name=result.value
	   })
	   .getValue('#date_of_birth' , function(result){
	   	       dob=result.value
	   })
	   .getValue('#genders' , function(result){
	   	     gender=result.value
	   })
	   .getValue('#marital_status' , function(result){
	   	     marital_status=result.value
	   })
	   .getValue('#contact_no' , function(result){
	   	    number=result.value
	   })
	   .getText('#address' , function(result){
	   	    address=result.value
	   })
	   .getAttribute('#state' , 'data-state' , function(result){
	   	        state=result.value
	   })
	   .getValue('#city' , function(result){
	   	      city=result.value
	   })
	   .getValue('#zipcode' , function(result){
	   	      zipcode=result.value
	   })
	   
},
'Admin Form 1':function(browser){
	browser
	    .useCss()
	    .pause(1000)
	    .click('a[onclick="getAdminDefaultFormList();"]')
	    .waitForElementVisible('button[onclick="getFormsList()"]' , 60000)
	    .pause(500)
	    .click('button[onclick="getFormsList()"]')
	    .waitForElementVisible('#addRemoveFormsModal' , 60000)
	    .pause(1000)
	    .useXpath()
	    .getText("//*[@id='tblGrid']/tbody/tr[3]/td[2]/button" , function(result){
	    	if(result.value=="Remove from patient file"){
	    	browser
	    	  .useCss()
	    	  .click('button[onclick="doRemoveForm(12);"]')
	          .waitForElementVisible('button[onclick="doAddForm(12,null);"]' , 60000)
	          .pause(500)
	       }
	    })
	    browser
	    .useXpath()
	    .pause(500)
	    .click("//*[@id='addRemoveFormsModal']/div/div/div[3]/button")
	    .useCss()
	    .waitForElementNotVisible('#addRemoveFormsModal' , 60000)
},
'Billing 1':function(browser){
	browser
	   .useCss()
	   .pause(600)
	   .click('a[onclick="getBillingDetails();"]')
	   .waitForElementVisible('button[onclick="addPayment(1);"]' , 60000)
	   .pause(500)
	   .useXpath()
	   .waitForElementVisible("//*[@id='billing']/tbody/tr[1]/td[8]/a[2]" , 60000)
	   .pause(500)
	   .click("//*[@id='billing']/tbody/tr[1]/td[8]/a[2]")
	   .useCss()
	   .waitForElementVisible('#sendelectroincally' ,60000)
	   .pause(500)
	   .click('#sendelectroincally')
	   .waitForElementVisible('#sendBillsConfirmModal' , 60000)
	   .pause(500)
	   .click('button[onclick="moveAccountReceivableBills(1)"]')
	   .waitForElementVisible('#moveAccountReceivableAlertModal' , 60000)
	   .pause(500)
	   .verify.containsText('#moveAccountReceivableAlertMessageId' , 'Please enable office ally settings')
	   .pause(500)
	   .useXpath()
	   .click("//*[@id='moveAccountReceivableAlertModal']/div/div/div[3]/button")
	   .useCss()
	   .waitForElementNotVisible('#moveAccountReceivableAlertModal' , 60000)

},
'office Ally Setting 2':function(browser){
	browser
	   .useCss()
	   .pause(500)
	   .click('a[class=""]')
	   .pause(300)
	   .click('a[href="/EHR/Clinicadmin/getOfficeAllySettings"]')
	   .waitForElementVisible('button[onclick="return officeAllySettingsValidation();"]' , 60000)
	   .pause(500)
	   .getAttribute('input[name="isEnable"][value="1"]' , 'checked' , function(result){
	   	    browser
	   	      if(result.value!="true"){
	   	      	browser
	   	      	   .click('input[name="isEnable"][value="1"]')
	   	      	   .pause(500)
	   	      	   .waitForElementVisible('#hostname_id' , 60000)
	   	      	   .pause(500)
	   	      	   .clearValue('#hostname_id')
	   	      	   .clearValue('#username_id')
	   	      	   .clearValue('#password_id')
	   	      	   .clearValue('#confirmpassword_id')
	   	      	   .pause(500)
	   	      	   .click('button[onclick="return officeAllySettingsValidation();"]')
	   	      	   .pause(500)
	   	      	   .verify.visible('#hostname_id_error')
	   	      	   .verify.visible('#username_id_error')
	   	      	   .verify.visible('#password_id_error')
	   	      	   .verify.visible('#confirmpassword_id_error')
	   	      	   .pause(500)
	   	      	   .setValue('#hostname_id' , HOST)
	   	      	   .setValue('#username_id' , USERNAME)
	   	      	   .setValue('#password_id' , PASSWORD)
	   	      	   .setValue('#confirmpassword_id' , PASSWORD)
	   	      	   .pause(500)
	   	      	   .click('button[onclick="return officeAllySettingsValidation();"]')
	   	      	   .pause(1000)
	   	      }
	   })

},
'Open Patient 2':function(browser){
	browser
	   .useCss()
	   .click('a[class="firstLevel"]')
	   .pause(500)
	   .click('a[href="/EHR/Clinicadmin/view-patient-details-open"]')
	   .waitForElementVisible('a[onclick="getPatientProfile()"]' , 60000)
	   .pause(500)
	   .waitForElementVisible('a[onclick="postNavigateToProfile('+id+',1);"]' , 60000)
	   .pause(50)
	   .click('a[onclick="postNavigateToProfile('+id+',1);"]')
       .waitForElementVisible('#patient_first_name', 60000)
	   .pause(500)
},
'Billing 2':function(browser){
	browser
	   .useCss()
	   .click('a[onclick="getBillingDetails();"]')
	   .waitForElementVisible('button[onclick="addPayment(1);"]' , 60000)
	   .pause(500)
	   .useXpath()
	   .waitForElementVisible("//*[@id='billing']/tbody/tr[1]/td[8]/a[2]" , 60000)
	   .pause(500)
	   .click("//*[@id='billing']/tbody/tr[1]/td[8]/a[2]")
	   .useCss()
	   .waitForElementVisible('#sendelectroincally' ,60000)
	   .pause(500)
	   .click('#sendelectroincally')
	   .waitForElementVisible('#sendBillsConfirmModal' , 60000)
	   .pause(500)
	   .click('button[onclick="moveAccountReceivableBills(1)"]')	
	   .waitForElementVisible('#moveAccountReceivableAlertModal' , 60000)
	   .pause(500)
	   .verify.containsText('#moveAccountReceivableAlertMessageId' , 'Please fill the HIVF form')
	   .pause(500)
	   .useXpath()
	   .click("//*[@id='moveAccountReceivableAlertModal']/div/div/div[3]/button")
	   .useCss()
	   .waitForElementNotVisible('#moveAccountReceivableAlertModal' , 60000)
},	      
'Admin Form 2':function(browser){
	browser
	    .useCss()
	    .pause(1000)
	    .click('a[onclick="getAdminDefaultFormList();"]')
	    .waitForElementVisible('button[onclick="getFormsList()"]' , 60000)
	    .pause(500)
	    .click('button[onclick="getFormsList()"]')
	    .waitForElementVisible('#addRemoveFormsModal' , 60000)
	    .pause(500)
	    .click('button[onclick="doAddForm(12,null);"]')
	    .pause(2000)
	    .useXpath()
	    .pause(500)
	    .click("//*[@id='addRemoveFormsModal']/div/div/div[3]/button")
	    .useCss()
	    .waitForElementNotVisible('#addRemoveFormsModal' , 60000)
	    .pause(500)
},
'Fill HIV' : function(browser){
	browser
	    .HIVcheck()
        .healthinsuranceverification()
},
'Billing 3':function(browser){
	browser
	   .useCss()
	   .click('a[onclick="getBillingDetails();"]')
	   .waitForElementVisible('button[onclick="addPayment(1);"]' , 60000)
	   .pause(500)
	   .useXpath()
	   .waitForElementVisible("//*[@id='billing']/tbody/tr[1]/td[88]/a[2]" , 60000)
	   .pause(500)
	   .click("//*[@id='billing']/tbody/tr[1]/td[88]/a[2]")
	   .useCss()
	   .waitForElementVisible('#sendelectroincally' ,60000)
	   .pause(500)
	   .click('#sendelectroincally')
	   .waitForElementVisible('#sendBillsConfirmModal' , 60000)
	   .pause(500)
	   .click('button[onclick="moveAccountReceivableBills(1)"]')	
	   .waitForElementVisible('#moveAccountReceivableAlertModal' , 60000)
	   .pause(500)
	   .verify.containsText('#moveAccountReceivableAlertMessageId' , 'Please fill necessary details in HICFA form')
	   .pause(500)
	   .useXpath()
	   .click("//*[@id='moveAccountReceivableAlertModal']/div/div/div[3]/button")
	   .useCss()
	   .waitForElementNotVisible('#moveAccountReceivableAlertModal' , 60000)
	   .pause(500)
},	   

'Patient Intake Forms':function(browser){
	browser
	  .useCss()
	  .click('a[onclick="getDefaultFormList();"]')
	  .waitForElementVisible('button[onclick="lockConfirmation()"]' , 60000)
	  .pause(500)
	  .useXpath()
	  .click("//*[@id='formsContent']/div/div/a[text()='Confidential Patient Information']")
	  .useCss()
	  .waitForElementVisible('#cpi_firstName' , 60000)
	  .pause(500)
	  .verify.valueContains('#cpi_firstName' , first_name)
	  .verify.valueContains('#cpi_lastName' , last_name)
	  .verify.valueContains('#cpi_dateofbirth' , dob)
	  if(gender==1){
	  	browser
	  	  .verify.valueContains('#cpi_gender' , 'Male')
	  }
	  if(gender==2){
	  	browser
	  	  .verify.valueContains('#cpi_gender' , 'Female')
	  }
	  if(gender==3){
	  	browser
	  	  .verify.valueContains('#cpi_gender' , 'Transgender')
	  }
	  if(marital_status==1){
	  	browser
	  	  .verify.valueContains('#maritalStatuscpi' , 'Single')
	  }
	  if(marital_status==2){
	  	browser
	  	  .verify.valueContains('#maritalStatuscpi' , 'Married')
	  }
	  if(marital_status==3){
	  	browser
	  	  .verify.valueContains('#maritalStatuscpi' , 'Divorced')
	  }
	  browser
	    .getAttribute('#areSymptomsDueToAccident_id' , 'checked' , function(result){
	    	browser

	    	  if(result.value=="true"){
                  symptoms=1
                  browser
                  .getValue('#atFaultPersonInsuranceCompany_id' , function(result){
                                  	    fault_company=result.value
                                  })
                    .getAttribute('#auto' , 'checked' , function(result){
                    	  if (result.value=="true") {
                               auto_ck=1
                               browser 
                                  .getValue('#atFaultPersonName_id' , function(result){
                                  	    fault_name=result.value
                                  })

                    	  }
                    })
                    .getAttribute('#work' , 'checked' , function(result){
                    	if (result.value=="true") {
                    		work=1
                    	}
                    })
                    .getAttribute('#other_typeofaccident_id' , 'checked' , function(result){
                    	if (result.value=="true") {
                            other=1
                    	}
                    })
	    	  }else{
	    	  	symptoms=0
	    	  }
	    })
},
'Exam form':function(browser){
  browser
      .useCss()
      .pause(500)
      .click('a[onclick="doGetTreatments();"]')
      .waitForElementVisible('button[onclick="openStartTreatment();"]' , 60000)
      .pause(500)
},
'Treatment plan 1':function(browser){
    browser      
      .useXpath()
      .click("//*[@id='treatmentformsContent']/div[2]/span/button")
      .useCss()
      .waitForElementVisible('button[onclick="addSoapNotes();"]' , 60000)
      .pause(500)
      .useXpath()
      .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 8 -']")
      .pause(500)
      .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 6 -']")
      .pause(500)
      .click("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 8 -']")
      .useCss()
      .waitForElementVisible('#diagnosisOne_id' , 60000)
      .pause(500)
     d=['One' , 'Two' , 'Three' , 'Four' , 'Five' , 'Six' , 'Seven' , 'Eight' , 'Nine' , 'Ten' , 'Elevan' , 'Twelve']
      for(i=0; i<d.length; i++){
      	browser
      	.useCss()
          .getValue('#diagnosis'+d[i]+'_id' , function(result){
                    diagnosis.push(result.value)
          })
          .getValue('#diagnosis'+d[i]+'Ext_id' , function(result){
          	       ext.push(result.value)
          })
       }
},
'Admin Forms':function(browser){
	browser
	    .useCss()
	    .pause(1000)
	    .click('a[onclick="getAdminDefaultFormList();"]')
	    .waitForElementVisible('button[onclick="getFormsList()"]' , 60000)
	    .pause(500)
	    .useXpath()
	    .click("//*[@id='adminDefaultFormsContent']/div/div/a[text()='Health Insurance Verification']")
	    .useCss()
	    .waitForElementVisible('#contactPersonName_id' , 60000)
	    .pause(500)
	    for(i=1; i<=6; i++){
      var a1=(function(){
        var j=i
        return function(result){
            if(result.value=="true"){
                   type=j
          }
        }})()
        browser
      .getAttribute('input[name="insuranceType"][value="'+i+'"]' , 'checked' , a1)
      }


      for(i=1; i<=6; i++){
      var a2=(function(){
        var j=i
        return function(result){
            if(result.value=="true"){
                   patientsRelationship=j
          }
        }})()
        browser
      .getAttribute('input[name="patientsRelationship"][value="'+i+'"]' , 'checked' , a2)
      }
      browser
      .getValue('#group1_id' , function(result){
      	   group=result.value
      })
      .getValue('#insuranceCompany1_id' , function(result){
      	  insurance_company=result.value
      })
      .getValue('#policyNumber_id' , function(result){
      	   policy_no=result.value
      })
},
'Billing History':function(browser){
	browser
	   .useCss()
	   .pause(500)
	   .click('a[onclick="getBillingDetails();"]')
	   .waitForElementVisible('button[onclick="addPayment(1);"]' , 60000)
	   .pause(500)
	   .waitForElementVisible('a[class="btn btn-primary btn-xs tooltipsclass"]' , 60000)
	   .pause(500)
	   .useXpath()
	   .getText("//*[@id='billing']/tbody/tr[2]/td[1]" , function(result){
	   	   aaa1=result.value
	   	   awz=aaa1[3]+aaa1[4]+aaa1[5]+aaa1[6]
	   	     browser
	   	      .useCss()
	   	      .click('a[onclick="viewBill('+awz+');"]')
	   })
browser
	   .waitForElementVisible('#btnSendBillForm' , 60000)
	   .pause(500)
	   .elements('css selector', 'table#table tbody tr', function(result) {
                for(i=1; i<=result.value.length; i++){
                browser
                  .useXpath()
                  .getText("//*[@id='table']/tbody/tr["+i+"]/td[2]" , function(result){
                              cpt_code.push(result.value)
                  })
                  .useCss()
                  .getText('#fee_'+i+'' , function(result){
                  	         fee.push(result.value)
                  })
              }
        })
	   browser
	     .pause(500)
	     .click('button[onclick="getBillingDetails()"]')
	     .waitForElementVisible('button[onclick="addPayment(1);"]' , 60000)
	     .pause(500)

 },
 'View HICFA':function(browser){
	a=(cpt_code.length/6)
	b=Math.floor(cpt_code.length/6)
	
	browser
	   .useXpath()
	   .waitForElementVisible("//*[@id='billing']/tbody/tr[2]/td[8]/a[2]" , 60000)
	   .pause(500)
	   .click("//*[@id='billing']/tbody/tr[2]/td[8]/a[2]")                                 //open 2nd HICFA Form
	   .useCss()
	   .waitForElementVisible('#sendelectroincally' , 60000)
	   .pause(500)
	   	   .elements('css selector', 'div#hicfaList div', function(result) {
                 c=result.value.length
                 
           })
        .useXpath()
        .getText("//*[@id='hicfaList']/div[1]/span/span" , function(result){
           	   
         browser
	   .useXpath()
	   .click("//*[@id='hicfaList']/div/span/button[2]")
	   .useCss()
	   .waitForElementVisible('#btnSendHICFAForm' , 60000)
	   .pause(1000)
	 if(result.value=="Not Verified"){

	   if (type==1 || type==2 || type==6) {
	   	   browser
	   	     .verify.elementPresent('input[name="insuranceType"][value="7"][checked="checked"]')
	   }
	   if (type==3) {
	   	   browser
	   	     .verify.elementPresent('input[name="insuranceType"][value="5"][checked="checked"]')
	   }
	   if (type==4) {
	   	   browser
	   	     .verify.elementPresent('input[name="insuranceType"][value="1"][checked="checked"]')
	   }
	   if (type==5) {
	   	   browser
	   	     .verify.elementPresent('input[name="insuranceType"][value="2"][checked="checked"]')
	   }

	   if(patientsRelationship==1 || patientsRelationship==2){
	   	    browser
	   	      .verify.elementPresent('input[name="insuredRelation"][value="2"][checked="checked"]')
	   }
	   if(patientsRelationship==3){
	   	    browser
	   	      .verify.elementPresent('input[name="insuredRelation"][value="3"][checked="checked"]')
	   }
	   if(patientsRelationship==4 || patientsRelationship==5){
	   	    browser
	   	      .verify.elementPresent('input[name="insuredRelation"][value="4"][checked="checked"]')
	   }
	   if(patientsRelationship==6){
	   	    browser
	   	      .verify.elementPresent('input[name="insuredRelation"][value="1"][checked="checked"]')
	   }
	   browser
	    .verify.valueContains('#patientFirstName' , first_name)
	    .verify.valueContains('#patientLastName' , last_name)
	    .verify.valueContains('#patientMiddleName' , middle_name)
	    .verify.valueContains('#birthdate' , dob)
	    .verify.containsText('#patientaddressid' , address)
	    .verify.valueContains('#patientcityid' , city)
	    .verify.valueContains('#patientstateid' , state)
	    .verify.valueContains('#patientzipcodeid' , zipcode)
	    .verify.valueContains('#patientphoneid' , number)

	    if (symptoms==1 && auto_ck==1 ){
	    	 browser
	           .verify.valueContains('#insuredLastName' , fault_name)
	           .verify.elementPresent('input[name="isAutoAccident"][value="1"][checked="checked"]')
	           .verify.elementNotPresent('input[name="insuredGender"][value="1"][checked="checked"]')
	    	  .verify.elementNotPresent('input[name="insuredGender"][value="2"][checked="checked"]')
	    	}else{
	    		browser
	                .verify.valueContains('#insuredFirstName' , first_name)
	                .verify.valueContains('#insuredLastName' , last_name)
	                .verify.valueContains('#insuredMiddleName' , middle_name)
	                .verify.containsText('#insuredAddress' , address)
	                .verify.valueContains('#insuredCity' , city)
	                .verify.valueContains('#insuredState' , state)
	                .verify.valueContains('#insuredZipCode' , zipcode)
	                .verify.valueContains('#insuredContactNo' , number)
	                .verify.valueContains('#insuredDateOfBirth' , dob)
	                   if (gender==1) {
	                   	browser
                               .verify.elementPresent('input[name="insuredGender"][value="1"][checked="checked"]')
	                    }	
	                    if (gender==2) {
	                    	browser
                               .verify.elementPresent('input[name="insuredGender"][value="2"][checked="checked"]')
	                    }	
	    	}
	    if(work==1 || other==1){
	    	browser
	    	   .verify.elementPresent('input[name="otherAccident"][value="1"]')
	    }	
	    if (gender==1) {
	    	browser
	    	  .verify.elementPresent('input[name="gender"][value="1"][checked="checked"]')
	    }	
	    if (gender==2) {
	    	browser
	    	  .verify.elementPresent('input[name="gender"][value="2"][checked="checked"]')
	    }	
	    if (gender==3) {
	    	browser
	    	  .verify.elementNotPresent('input[name="gender"][value="1"][checked="checked"]')
	    	  .verify.elementNotPresent('input[name="gender"][value="2"][checked="checked"]')
	    	  
	    }	
	    browser
	        
	        .verify.valueContains('#insuredPolicyGroupFecaNumber' , group)
	        .verify.visible('input[name="otherInsuredFirstName"][disabled="disabled"]')
	        .verify.visible('input[name="otherInsuredLastName"][disabled="disabled"]')
	        .verify.visible('input[name="otherInsuredMiddleName"][disabled="disabled"]')
	        .verify.visible('input[name="otherInsuredPolicyOrGroup"][disabled="disabled"]')
	        .verify.visible('input[name="otherInsuredPolicyOrGroup"][disabled="disabled"]')
	        if(symptoms==1 && patientsRelationship==5){
	        	browser
	        	  .verify.valueContains('#insurancePlanName' , fault_company)
	        }
	        if(symptoms!=1 && patientsRelationship==5){
	        	browser
	        	  .verify.valueContains('#insurancePlanName' , '')
	        }
	        if(patientsRelationship!=5){
	        	browser
	        	  .verify.valueContains('#insurancePlanName' , insurance_company)
	        }
	        browser
	        .verify.elementPresent('input[name="isAnotherHealthBenefitPlan"][value="0"][checked="checked"]')
	        .verify.elementPresent('input[name="outsideLab"][value="0"][checked="checked"]')
	        if(cpt_code.length>=6){
	           for(i=0; i<6; i++){
	        	browser
	        	     .pause(500)
	        	     .useCss()
	        	     .verify.valueContains('#placeOfService'+i+'' , '11')
	        	     .verify.valueContains('#cpt'+i+'' , cpt_code[i])
	        	     .verify.valueContains('#diagnosisCode'+i+'' , 'AB')
	        	     .verify.valueContains('#charges'+i+'' , fee[i])
	        	     .verify.valueContains('#daysOrUnits'+i+'' , '1')
	        	     .useXpath()
	        	     .verify.valueContains("//*[@id='insurancesubmit']/div[10]/table/tbody/tr["+(i+1)+"]/td[4]/input" , 'G2')
	        	     .useCss()
	        	     .getValue('#charges'+i+'' , function(result){
	        	     	charge.push(result.value)
	        	     })

	        }
	    }else{
	        	for(k=0; k<cpt_code.length; k++){
	        	browser
	        	     .pause(500)
	        	     .useCss()
	        	     .verify.valueContains('#placeOfService'+k+'' , '11')
	        	     .verify.valueContains('#cpt'+k+'' , cpt_code[k])
	        	     .verify.valueContains('#diagnosisCode'+k+'' , 'AB')
	        	     .verify.valueContains('#charges'+k+'' , fee[k])
	        	     .verify.valueContains('#daysOrUnits'+k+'' , '1')
	        	     .useXpath()
	        	     .verify.valueContains("//*[@id='insurancesubmit']/div[10]/table/tbody/tr["+(k+1)+"]/td[4]/input" , 'G2')
	        	     .useCss()
	        	     .getValue('#charges'+k+'' , function(result){
	        	     	charge.push(result.value)
	        	     })

	        }
	        }
	         for(i=1; i<=12; i++){
	         	browser
	         	   .verify.valueContains('#diaganosis'+i+'' , diagnosis[i-1].concat(ext[i-1]))
	         }
	        browser
	           .verify.elementPresent('input[name="totalCharge"][readonly="readonly"]')
	           .verify.elementPresent('input[id="balanceDue"][readonly="readonly"]')
	           .verify.elementPresent('input[name="ssnOrEin"][value="2"][checked="checked"]')
	           .verify.elementPresent('input[name="acceptAssignment"][value="0"][checked="checked"]')
               .waitForElementVisible('#federalTaxId' , 60000 , function(result){
	                 total = (charge.map(Number)).reduce(function(a, b) { return a + b; }, 0)
	                 browser
	                   .verify.valueContains('#totalCharge' , total)
	           })
	           .verify.valueContains('#federalTaxId' , ein_1)
	           .verify.valueContains('#patientAccountNo' , policy_no)
	           .verify.valueContains('#facilitynameid' , clinic_name_1)
	           .verify.valueContains('#suppliernameid' , clinic_name_1)
	           .verify.valueContains('#facilitycityid' , city_1)
	           .verify.valueContains('#suppliercityid' , city_1)
	           .verify.valueContains('#facilitystateid' , state_1)
	           .verify.valueContains('#supplierstateid' , state_1)
	           .verify.valueContains('#facilityzipcodeid' , zip_1)
	           .verify.valueContains('#supplierzipcodeid' , zip_1)
	           .verify.valueContains('#supplierphoneid' , phone_1)
	           .pause(500)
	           .getLocationInView('#supplierzipcodeid')
	           .pause(500)
	           .useXpath()
	           .click("//*[@id='insurancesubmit']/div[14]/button[1]")
	           .useCss()
	           .pause(500)
	           .verify.visible('#insured_Id_error')
	           .pause(500)
      }
      })
    selected=Math.floor((Math.random()*7)+1)
	insured_Id=Math.floor((Math.random()*1000000000)+9000000000)
	gen1=Math.floor((Math.random()*2)+1)
	Relationship=Math.floor((Math.random()*4)+1)
	Employment=Math.floor((Math.random()*2)+0)
	auto=Math.floor((Math.random()*2)+0)
	if(auto==1){
		e=['Miami' , 'Pensacola' , 'Takoma' , 'Opelousas' , 'Tunica']
	            auto_text=e[Math.floor(Math.random()*e.length)]
	        }else{
	        	auto_text=0
	        }
	other=Math.floor((Math.random()*2)+0)
	insured_policy=Math.floor((Math.random()*1000000000)+9000000000)
	gen2=Math.floor((Math.random()*2)+1)
	f=['Allianz' , 'MetLife' , 'Wellpoint' , 'Healthspring' , 'Centene']
	Insurance_Plan=f[Math.floor(Math.random()*f.length)]
	Health_Benefit=Math.floor((Math.random()*2)+0)
	if(Health_Benefit==1){
        	g=['Logan' , 'Joshua' , 'Brayden' , 'Noah' , 'Gavin' , 'Daniel']
        	h=['Gavin' , 'Jacob' , 'Elijah' , 'Ryan' , 'Aiden' , 'Carter']
        	j=['Hunter' , 'Tyler' , 'Hunter' , 'Christopher' , 'Luis' , 'Alexander']
        	k=['Allianz' , 'MetLife' , 'Wellpoint' , 'Healthspring' , 'Centene']
        	p=['Tristan' , 'Leonardo' , 'Brody' , 'Declan' , 'Bradley']
	        Insurance_Plan_1=k[Math.floor(Math.random()*k.length)]
	        Insurance_Plan_2=p[Math.floor(Math.random()*p.length)]
        	first=g[Math.floor(Math.random()*g.length)]
        	last=h[Math.floor(Math.random()*h.length)]
        	middle=j[Math.floor(Math.random()*j.length)]
     }else{
        	   first=0
               last=0
               middle=0
               Insurance_Plan_1=0
               Insurance_Plan_2=0
           }
    m=['Gavin' , 'Jacob' , 'Elijah' , 'Ryan' , 'Aiden' , 'Carter']
    n=['Hunter' , 'Tyler' , 'Hunter' , 'Christopher' , 'Luis' , 'Alexander']
    o=['Allianz' , 'MetLife' , 'Wellpoint' , 'Healthspring' , 'Centene']
	Referring=m[Math.floor(Math.random()*m.length)].toUpperCase()
    physician=n[Math.floor(Math.random()*n.length)].toUpperCase()
    NPI=o[Math.floor(Math.random()*o.length)].toUpperCase()
    outside_lab=Math.floor((Math.random()*2)+0)
    if(outside_lab==1){
    lab_fee=Math.floor((Math.random()*401)+100)
    }else{
    	lab_fee=0
    }
    nature_of_ill=[];
                for(i=0; i<12;i++){
                  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
                  var stringLength = 5;

                  var randomString = Array.apply(null, new Array(stringLength)).map(function () {
                      return possible[Math.floor(Math.random() * possible.length)];
                  }).join('');
                  nature_of_ill.push(randomString)
                }
    facilityNpi=Math.floor((Math.random()*401)+100)
    facilityId=Math.floor((Math.random()*401)+100)
    pin=Math.floor((Math.random()*401)+100)
    grp=Math.floor((Math.random()*401)+100)   

    p=['c' , 'd' , 'e' , 'f' , 'g' , 'h' , 'i' , 'j' , 'k' , 'l']
	Diagnosis_Pointer=p[Math.floor(Math.random()*p.length)]
	r=p.indexOf(Diagnosis_Pointer)  

	 Medicaid_Resubmission_1=Math.floor((Math.random()*401)+100)
	 Medicaid_Resubmission_2=Math.floor((Math.random()*401)+100)
	 Prior_Authorization=Math.floor((Math.random()*401)+100)
	 Patient_Account=Math.floor((Math.random()*1000000000)+9000000000)
	 Accept_Assignment=Math.floor((Math.random()*2)+0)  
	 ssn=Math.floor((Math.random()*2)+1) 
	 federal=Math.floor((Math.random()*900000000)+100000000) 


     browser
        .HICFAworking(selected,insured_Id,gen1,Relationship,Employment,auto,other,auto_text,insured_policy,gen2,Insurance_Plan,Health_Benefit,first,
	                  last,middle,Insurance_Plan_1,Insurance_Plan_2,QUAL1,QUAL2,Referring,physician,NPI,outside_lab,lab_fee,nature_of_ill,Diagnosis_Pointer,
	                  Medicaid_Resubmission_1,Medicaid_Resubmission_2,Prior_Authorization,Patient_Account,Accept_Assignment,paid,facilityNpi,facilityId,pin,grp,ssn)
        .useCss()
        .waitForElementVisible('#sendelectroincally' , 60000)
        .pause(500)
        .useXpath()
        .click("//*[@id='hicfaList']/div[1]/span/button[2]")
        .useCss()
        .waitForElementVisible('#btnSendHICFAForm' , 60000)
        .pause(500)
        .HICFAcheck(selected_1,first_name_1,middle_name_1,last_name_1,insured_Id_1,dob_1,gen1_1,address_1,city_1,state_1,zipcode_1,number_1,
	                insured_first_name_1,insured_middle_name_1,insured_last_name_1,insured_address_1,insured_city_1,insured_state_1,insured_zipcode_1,
                    insured_number_1, Relationship_1, Employment_1,auto_1,auto_text_1,other_1,insured_policy_1,dob_2,gen2_1,Insurance_Plan1,Health_Benefit_1,
                    first_1,last_1,middle_1,Insurance_Plan_1_1,Insurance_Plan_2_1,date_1,date_2,date_3,date_4,date_5,date_6,date_7, Referring_1,physician_1,
                    NPI_1,QUAL1_1,QUAL2_1,outside_lab_1,lab_fee_1,nature_of_ill_1,Medicaid_Resubmission_1_1,Medicaid_Resubmission_2_1,Prior_Authorization_1,
                    Diagnosis_Pointer_1,ein_1_1,Patient_Account_1,Accept_Assignment_1,paid_1,facilityNpi_1,facilityId_1,pin_1,grp_1,date_8,facilityname,
                    facilityaddress,facilitycity,facilitystate,facilityzipcode,suppliername,supplieraddress,suppliercity,supplierstate,supplierzipcode,
                    supplierphone,ssn_1, federalTax_1,ssn,federal,first_name,middle_name,last_name,dob,number,address,state,city,zipcode,selected,insured_Id,
                    gen1,Relationship,Employment,auto,auto_text,other,insured_policy,gen2,Insurance_Plan,Health_Benefit,first,last,middle,Insurance_Plan_1,
                    Insurance_Plan_2,QUAL1,QUAL2,Referring,physician,NPI,outside_lab,lab_fee,nature_of_ill,Diagnosis_Pointer,Medicaid_Resubmission_1,
                    Medicaid_Resubmission_2,Prior_Authorization,Patient_Account,Accept_Assignment,paid,facilityNpi,facilityId,pin,grp,facilityname,
                    facilityaddress,facilitycity,facilitystate,facilityzipcode,suppliername,supplieraddress,suppliercity,supplierstate,supplierzipcode,
                    supplierphone)
        .pause(500)
        .click('button[onclick="gobackInsuranceList()"]')
        .waitForElementVisible('#sendelectroincally' , 60000)
        .pause(500)
        .useXpath()
        .click("//*[@id='hicfaList']/div[1]/span/button[1]")
        .useCss()
        .waitForElementVisible('#HICFA_outer_div' , 60000)
        .pause(500)

},
'Form check':function(browser){
	
	browser
	     .useCss()
	     if(selected==1){
	     	browser
	     	  .verify.visible('#Image_container')
	     }else{
	     	browser
	     	   .verify.visible('#Image'+[selected-1]+'_container')
	     }
         browser
         .verify.containsText('#label' , insured_Id)
         if(middle_name==""){
            browser
               .verify.containsText('#label1' , last_name.toUpperCase()+', '+first_name.toUpperCase()+',')
         }else{
            browser
               .verify.containsText('#label1' , last_name.toUpperCase()+', '+first_name.toUpperCase()+', '+middle_name.toUpperCase())
         }
         browser
         .verify.containsText('#label2' , dob.substring(0, 2))
         .verify.containsText('#label3' , dob.substring(3, 5))
         .verify.containsText('#label4' , dob.substring(8, 10))
         .verify.visible('#Image'+[6+gen1]+'_container')
         if(middle_name==""){
         	browser
         	   .verify.containsText('#label5' , last_name.toUpperCase()+', '+first_name.toUpperCase()+',')

         }else{
         	browser
         	   .verify.containsText('#label5' , last_name.toUpperCase()+', '+first_name.toUpperCase()+', '+middle_name.toUpperCase())
         }
         browser
         
         .verify.containsText('#label6' , address.toUpperCase())
         .verify.containsText('#label8' , city.toUpperCase())
         .verify.containsText('#label9' , state.toUpperCase())
         .verify.containsText('#label12' , zipcode)
         .verify.containsText('#label13' , (number[1]+number[2]+number[3]))
         .verify.containsText('#label14' , (number[6]+number[7]+number[8]+'-'+number[10]+number[11]+number[12]+number[13]))
         if(middle_name==""){
         	browser
         	  .verify.containsText('#label5' , last_name.toUpperCase()+', '+first_name.toUpperCase()+',')

         }else{
             browser
               .verify.containsText('#label5' , last_name.toUpperCase()+', '+first_name.toUpperCase()+', '+middle_name.toUpperCase())
         }
         browser
         
         .verify.containsText('#label7' , address.toUpperCase())
         .verify.containsText('#label10' , city.toUpperCase())
         .verify.containsText('#label11' , state.toUpperCase())
         .verify.containsText('#label16_container' , zipcode)
         .verify.containsText('#label17' , (number[1]+number[2]+number[3]))
         .verify.containsText('#label18' , (number[6]+number[7]+number[8]+'-'+number[10]+number[11]+number[12]+number[13]))
         .verify.elementPresent('#Image'+[8+Relationship]+'_container')
         .verify.containsText('#label21' , insured_policy)
         .verify.visible('#Image'+[14-Employment]+'_container')
         .verify.visible('#Image'+[16-auto]+'_container')
         .verify.visible('#Image'+[18-other]+'_container')
         if(auto==1){
         	browser
         	   .verify.containsText('#label27' , auto_text)
         	}else{
         		browser
         	   .verify.elementNotPresent('#label27')
         	}
      browser                                                      
        .verify.containsText('#label23' , dob_2.join().substring(0, 2))
        .verify.containsText('#label24' , dob_2.join().substring(3, 5))
        .verify.containsText('#label25' , dob_2.join().substring(8, 10))
        .verify.visible('#Image'+[18+gen2]+'_container')
        .verify.containsText('#label31' , Insurance_Plan.toUpperCase())
        .verify.visible('#Image'+[22-Health_Benefit]+'_container')
        if(Health_Benefit==1){
        	browser
        	  .verify.containsText('#label19' , last.toUpperCase()+', '+first.toUpperCase()+', '+middle.toUpperCase())
        	  .verify.containsText('#label22' , Insurance_Plan_1.toUpperCase())
        	  .verify.containsText('#label32' , Insurance_Plan_2.toUpperCase())
        }else{
        	browser
        	  .verify.containsText('#label19' , '')
        	  .verify.containsText('#label22' , '')
        	  .verify.containsText('#label32' , '')
        }
        browser
          .verify.containsText('#label35' , date_1)
          .verify.containsText('#label37' , date_2.join().substring(0, 2))
          .verify.containsText('#label38' , date_2.join().substring(3, 5))
          .verify.containsText('#label39' , date_2.join().substring(8, 10))
          .verify.containsText('#label40' , QUAL1[0])
          .verify.containsText('#label41' , QUAL2[0])
          .verify.containsText('#label42' , date_3.join().substring(0, 2))
          .verify.containsText('#label43' , date_3.join().substring(3, 5))
          .verify.containsText('#label44' , date_3.join().substring(8, 10))

          .verify.containsText('#label45' , date_4.join().substring(0, 2))
          .verify.containsText('#label46' , date_4.join().substring(3, 5))
          .verify.containsText('#label47' , date_4.join().substring(8, 10))

          .verify.containsText('#label48' , date_5.join().substring(0, 2))
          .verify.containsText('#label49' , date_5.join().substring(3, 5))
          .verify.containsText('#label50' , date_5.join().substring(8, 10))

          .verify.containsText('#label56' , date_6.join().substring(0, 2))
          .verify.containsText('#label57' , date_6.join().substring(3, 5))
          .verify.containsText('#label58' , date_6.join().substring(8, 10))

          .verify.containsText('#label59' , date_7.join().substring(0, 2))
          .verify.containsText('#label60' , date_7.join().substring(3, 5))
          .verify.containsText('#label61' , date_7.join().substring(8, 10))

          .verify.containsText('#label52' , Referring.toUpperCase())
          .verify.containsText('#label54' , physician.toUpperCase())
          .verify.containsText('#label55' , NPI.toUpperCase())
          .verify.elementPresent('#Image'+[24-outside_lab]+'_container')
          if(Number.isInteger(lab_fee)==true){
          	browser
                .verify.containsText('#label63' , lab_fee)
                .verify.containsText('#label64' , '0')
          }else{
          	browser
          	    .verify.containsText('#label63' , lab_fee.toString().split(".")[0])
                .verify.containsText('#label64' , lab_fee.toString().split(".")[1])
          }
          browser
          .verify.containsText('#label79' , Medicaid_Resubmission_1)
          .verify.containsText('#label80' , Medicaid_Resubmission_2)
          .verify.containsText('#label81' , Prior_Authorization)
          abc=['#label90' , '#label108' , '#label127' , '#label146' , '#label165' , '#label184']
          abc1=['#label88' , '#label106' , '#label125' , '#label144' , '#label163' , '#label182']
          abc2=['#label89' , '#label107' , '#label126' , '#label145' , '#label164' , '#label183']
          abc3=['#label96' , '#label115' , '#label134' , '#label153' , '#label172' , '#label191']
          abc4=['#label98' , '#label117' , '#label136' , '#label155' , '#label174' , '#label193']
          abc5=['#label95' , '#label114' , '#label133' , '#label152' , '#label171' , '#label190']
          abc6=fee.map(Number)
          abc7=['#label65' , '#label66' , '#label67' , '#label68' , '#label69' , '#label70' , '#label71' , '#label72' , '#label73' , '#label74' , '#label75' ,
                '#label76']
          abc8=['#label97' , '#label116' , '#label135' , '#label154' , '#label173' , '#label192']
                for(i=0; i<abc7.length;i++){
                	browser
                	  .verify.containsText(abc7[i] , nature_of_ill[i])
                }
          if(cpt_code.length>=6){
          	 for(i=0; i<6; i++){
          	 	browser
          	 	   .useCss()
                   .verify.containsText(abc[i] , cpt_code[i])
                   .verify.containsText(abc1[i] , '11')
                   .verify.containsText(abc2[i] , 'G2')
                   if(Number.isInteger(abc6[i])==true){
                   	  browser
                         .verify.containsText(abc3[i] , abc6[i])
                         .verify.containsText(abc8[i] , '0')
                   }else{
                   	  browser
                         .verify.containsText(abc3[i] , abc6[i].toString().split(".")[0])
                         .verify.containsText(abc8[i] , abc6[i].toString().split(".")[1])
                   }
                   browser
                   .verify.containsText(abc4[i] , '1')
                   if(i==0){
                   	browser
                   	 .verify.containsText(abc5[i] , Diagnosis_Pointer)
                   }else{
                   	 browser
                   	 .verify.containsText(abc5[i] , 'AB')
                   }
            }
        }else{
        	for(i=0; i<cpt_code.length; i++){
          	 	browser
          	 	   .useCss()
                   .verify.containsText(abc[i] , cpt_code[i])
                   .verify.containsText(abc1[i] , '11')
                   .verify.containsText(abc2[i] , 'G2')
                   if(Number.isInteger(abc6[i])==true){
                   	  browser
                         .verify.containsText(abc3[i] , abc6[i])
                         .verify.containsText(abc8[i] , '0')
                   }else{
                   	  browser
                         .verify.containsText(abc3[i] , abc6[i].toString().split(".")[0])
                         .verify.containsText(abc8[i] , abc6[i].toString().split(".")[1])
                   }
                   browser
                   .verify.containsText(abc4[i] , '1')
                   if(i==0){
                   	browser
                   	 .verify.containsText(abc5[i] , Diagnosis_Pointer)
                   }else{
                   	 browser
                   	 .verify.containsText(abc5[i] , 'AB')
                   }
            }

            }
       
           if(cpt_code.length>=6){
                   for(i=0; i<6; i++){
                   	   abc9=abc6[0]+abc6[1]+abc6[2]+abc6[3]+abc6[4]+abc6[5]
                   	       if(Number.isInteger(abc9)==true){
                   	       	   browser
                                   .verify.containsText('#label198' ,abc9)
                                   .verify.containsText('#label199' ,'0')
                            }else{
                            	 browser
                                   .verify.containsText('#label198' , abc9.toString().split(".")[0])
                                   .verify.containsText('#label199' , abc9.toString().split(".")[1])
                           }

                    }
	       }else{
                   for(k=0; k<cpt_code.length; k++){
                   	abc10=(abc6.map(Number)).reduce(function(a, b) { return a + b; }, 0)
                   	    if(Number.isInteger(abc10)==true){
                   	       	   browser
                                   .verify.containsText('#label198' ,abc10)
                                   .verify.containsText('#label199' ,'0')
                            }else{
                            	 browser
                                   .verify.containsText('#label198' , abc10.toString().split(".")[0])
                                   .verify.containsText('#label199' , abc10.toString().split(".")[1])
                           }
                    }
           }

           if(Number.isInteger(paid[0])==true){
          	browser
                .verify.containsText('#label200' , paid)
                .verify.containsText('#label201' , '0')
          }else{
          	browser
          	    .verify.containsText('#label200' , paid.toString().split(".")[0])
                .verify.containsText('#label201' , paid.toString().split(".")[1])
          }  
          abc11=ssn_1.map(Number)
          browser
            .verify.containsText('#label197' , Patient_Account)
            .verify.visible('#Image'+[28-Accept_Assignment]+'_container')
            .verify.containsText('#label205' , date_8[0])
            .verify.containsText('#label206' , facilityname[0].toUpperCase())
            .verify.containsText('#label206' , facilityaddress[0].toUpperCase())
            .verify.containsText('#label206' , facilitycity[0].toUpperCase())
            .verify.containsText('#label206' , facilitystate[0].toUpperCase())
            .verify.containsText('#label206' , facilityzipcode[0].toUpperCase())
            .verify.containsText('#label211' , suppliername[0].toUpperCase())
            .verify.containsText('#label211' , supplieraddress[0].toUpperCase())
            .verify.containsText('#label211' , suppliercity[0].toUpperCase())
            .verify.containsText('#label211' , supplierstate[0].toUpperCase())
            .verify.containsText('#label211' , supplierzipcode[0].toUpperCase())
            .verify.containsText('#label211' , supplierphone[0].toUpperCase())
            .verify.containsText('#label207' , facilityNpi)
            .verify.containsText('#label208' , facilityId)
            .verify.containsText('#label212' , pin)
            .verify.containsText('#label213' , grp)
            .verify.containsText('#label196' , federalTax_1)
            .verify.visible('#Image'+[24+abc11[0]]+'_container')
            .pause(500)
            .useXpath()
            .click("html/body/div[25]/div/div/form/div[1]/button")
            .pause(1000)
         browser   
         .useCss()
	   .elements('css selector', 'div#hicfaList div', function(result) {
                 if(result.value.length>1){
                 	for(i=2; i<=result.value.length; i++){
                 		browser
                 		   .useCss()
                 		   .waitForElementVisible('#sendelectroincally' , 60000)
                 		   .pause(500)
                 		   .useXpath()
                 		   .click("//*[@id='hicfaList']/div["+i+"]/span/button[2]")
                 		   .useCss()
                 		   .waitForElementVisible('#insured_Id' , 60000)
                 		   .pause(500)
                 		   .clearValue('#insured_Id')
                 		   .setValue('#insured_Id' , 'abc')
                 		   .pause(500)
                 		   .click('a[onclick="return copyPatientDetailsInsurance();"]')
                 		   .pause(500)
                 		   .clearValue('#diaganosis1')
                 		   .setValue('#diaganosis1' , 'abc')
                 		   .clearValue('#diaganosis2')
                 		   .setValue('#diaganosis2' , 'abc')
                 		   .pause(500)
                 		   .getLocationInView('#supplierzipcodeid')
                 		   .pause(500)
                 		   .useXpath()
	   	                    .click("//*[@id='insurancesubmit']/div[14]/button[1]")
	   	                    .pause(500)
	   	                      if(i>=4){
	   	                      	  browser
	   	                      	     .useXpath()
	   	                      	     .waitForElementVisible("//*[@id='hicfaList']/div["+i+"]/span/button[2]" , 60000)
	   	                      	     .pause(1000)
	   	                      	     .getLocationInView("//*[@id='hicfaList']/div["+i+"]/span/button[2]")
	   	                      	     .pause(1000)
	   	                      	     .getLocationInView("//*[@id='hicfaList']/div["+(i-2)+"]/span/button[2]")
	   	                      	     .pause(1000)
	   	                      }
                 	}
                 }
        })
	   browser
	     .useCss()
	     .pause(800)
	     .getLocationInView('#patname')
	     .pause(500)
	     .click('#sendelectroincally')
	     .waitForElementVisible('#sendBillsConfirmModal' , 60000)
	     .pause(500)
	     .click('button[onclick="moveAccountReceivableBills(1)"]')
	     .useXpath()
	     .waitForElementVisible("html/body/div[3]/div/div/form/div[2]/div" , 65000)
	     .pause(500)
	     .verify.containsText("html/body/div[3]/div/div/form/div[2]/div" , 'Sent successfully.')
	     .pause(500)
	     .click("html/body/div[3]/div/div/form/div[3]/button")
	     .pause(1000)
	     .end()
        
         
},
'Result':''+function(browser){
	browser
        console.log("ssn----------------------->"+[ssn==ssn_1])
        console.log("federal------------------->"+[federal==federalTax_1[0].replace(/-/g, "")])
        console.log("first_name---------------->"+[JSON.stringify(first_name)==JSON.stringify(first_name_1.join())])
        console.log("middle_name--------------->"+[JSON.stringify(middle_name)==JSON.stringify(middle_name_1.join())])
        console.log("last_name----------------->"+[JSON.stringify(last_name)==JSON.stringify(last_name_1.join())])
        console.log("dob----------------------->"+[dob==dob_1])
        console.log("number-------------------->"+[number==number_1])
        console.log("address------------------->"+[address==address_1])
        console.log("state--------------------->"+[state==state_1])
        console.log("city---------------------->"+[city==city_1])
        console.log("zipcode------------------->"+[zipcode==zipcode_1])
        console.log("selected------------------>"+[selected==selected_1])
        console.log("insured_Id---------------->"+[insured_Id==insured_Id_1])
        console.log("gender-1------------------>"+[gen1==gen1_1])
        console.log("Relationship-------------->"+[Relationship==Relationship_1])
        console.log("Employment---------------->"+[Employment==Employment_1])
        console.log("auto---------------------->"+[auto==auto_1])
        console.log("other--------------------->"+[other==other_1])
        console.log("auto_text----------------->"+[auto_text==auto_text_1])
        console.log("insured_policy------------>"+[insured_policy==insured_policy_1])
        console.log("gender-2------------------>"+[gen2==gen2_1])
        console.log("Insurance_Plan------------>"+[Insurance_Plan==Insurance_Plan1])
        console.log("Health_Benefit------------>"+[Health_Benefit==Health_Benefit_1])
        console.log("first--------------------->"+[first==first_1])
        console.log("last---------------------->"+[last==last_1])
        console.log("middle-------------------->"+[middle==middle_1])
        console.log("Insurance_Plan_1---------->"+[Insurance_Plan_1==Insurance_Plan_1_1])
        console.log("Insurance_Plan_2---------->"+[Insurance_Plan_2==Insurance_Plan_2_1])
        console.log("QUAL1--------------------->"+[JSON.stringify(QUAL1)==JSON.stringify(QUAL1_1)])
        console.log("QUAL2--------------------->"+[JSON.stringify(QUAL2)==JSON.stringify(QUAL2_1)])
        console.log("Referring----------------->"+[Referring==Referring_1])
        console.log("physician----------------->"+[physician==physician_1])
        console.log("NPI----------------------->"+[NPI==NPI_1])
        console.log("outside_lab--------------->"+[outside_lab==outside_lab_1])
        console.log("lab_fee------------------->"+[lab_fee==lab_fee_1])
        console.log("nature_of_ill------------->"+[JSON.stringify(nature_of_ill.join())==JSON.stringify(nature_of_ill_1.join())])
        console.log("Diagnosis_Pointer--------->"+[Diagnosis_Pointer==Diagnosis_Pointer_1])
        console.log("Medicaid_Resubmission_1--->"+[Medicaid_Resubmission_1==Medicaid_Resubmission_1_1])
        console.log("Medicaid_Resubmission_2--->"+[Medicaid_Resubmission_2==Medicaid_Resubmission_2_1])
        console.log("Prior_Authorization------->"+[Prior_Authorization==Prior_Authorization_1])
        console.log("Patient_Account----------->"+[Patient_Account==Patient_Account_1])
        console.log("Accept_Assignment--------->"+[Accept_Assignment==Accept_Assignment_1])
        console.log("paid---------------------->"+[JSON.stringify(paid.map(Number))==JSON.stringify(paid_1.map(Number))])
        console.log("facilityNpi--------------->"+[facilityNpi==facilityNpi_1])
        console.log("facilityId---------------->"+[facilityId==facilityId_1])
        console.log("pin----------------------->"+[pin==pin_1])
        console.log("grp----------------------->"+[grp==grp_1])
        console.log("facility name------------->"+[facilityname==clinic_name_1])
        console.log("facility address---------->"+[facilityaddress==address_s])
        console.log("facility city------------->"+[facilitycity==city_s])
        console.log("facility state------------>"+[facilitystate==state_s])
        console.log("facility zip code--------->"+[facilityzipcode==zip_s])
        console.log("supplier name------------->"+[suppliername==clinic_name_1])
        console.log("supplier address---------->"+[supplieraddress==address_s])
        console.log("supplier city------------->"+[suppliercity==city_s])
        console.log("supplier state------------>"+[supplierstate==state_s])
        console.log("supplier zip code--------->"+[supplierzipcode==zip_s])
        console.log("supplier phone------------>"+[supplierphone==phone_s])
	    if(Number.isInteger(a)==true){ 
	    	console.log("no of HICFA form---------->"+[c==a])
	    }else{
	    	console.log("no of HICFA form---------->"+[c==Math.ceil(a)])
	    }
}
}