var Data = require('../EHR_Json/data.json')
var hand = require('../EHR_Json/Wristexam.json')


var Dominant=[];                            var Dominant_1=[];                          var abc1=[];
var PALPATION=[];                           var PALPATION_1=[];                         var abc2=[];
var Thenar_Eminence=[];                     var Thenar_Eminence_1=[];                   var abc3=[];
var Flexor_Carpi_Radialis=[];               var Flexor_Carpi_Radialis_1=[];             var abc4=[];
var Common_Flexors=[];                      var Common_Flexors_1=[];                    var abc5=[];
var Hypothenar_Eminence=[];                 var Hypothenar_Eminence_1=[];               var abc6=[];
var Extensor_Carpi=[];                      var Extensor_Carpi_1=[];                    var abc7=[];
var Common_Extensor=[];                     var Common_Extensor_1=[];                   var abc8=[];
var Abductor_Pollius_Longus=[];             var Abductor_Pollius_Longus_1=[];           var abc9=[];
var Abductor_Pollicis_Brevis=[];            var Abductor_Pollicis_Brevis_1=[];          var abc10=[];
var Extensor_Pollicis_Brevis=[];            var Extensor_Pollicis_Brevis_1=[];          var abc11=[];
var functional_range=[];                    var functional_range_1=[];                  var abc13=[];
var orthopedic_testing=[];                  var orthopedic_testing_1=[];                var abc14=[];
var Allen=[];                               var Allen_1=[];                             var abc15=[];
var neurological=[];                        var neurological_1=[];                      var abc16=[];
var cc=[];                                  var cc_1=[];                                var abc17=[];
var FUNCTIONAL_DEFICIT=[];                  var FUNCTIONAL_DEFICIT_1=[];                var abc18=[];
var FUNCTIONAL_DEFICIT_other=[];            var FUNCTIONAL_DEFICIT_other_1=[];          var abc19=[];
var Muscle_Symmetry;                        var Muscle_Symmetry_1=[];
var Swelling;                               var Swelling_1=[];
var aox;                                    var aox_1=[];
var other;                                  var other_1=[];
var Wrist_Flexion=[];                       var Wrist_Flexion_1=[];
var c5=[];                                  var c5_1=[];

module.exports={
  login : function (browser) {
    browser 
    .login(Data.user1[1].username, Data.user1[1].password)

},
'view files' : function (browser){
      browser
      .pause(1000)      
       .useCss()
       .click('a[class="firstLevel"]')
       .pause(500)
       .click('a[href="/EHR/Clinicadmin/view-patient-details-open"]')
       .waitForElementVisible('#col0_filter' , 60000)
       .useXpath()
       .waitForElementVisible("//*[@id='patient']/tbody/tr/td[2]" , 60000)
       .pause(200)
       .click("//*[@id='patient']/tbody/tr/td[6]/a/i")
       .useCss()
       .waitForElementVisible('#patient_first_name' , 60000)
       .pause(500)
     },
'Exam Forms' : function(browser){
  browser
       .pause(2000)
       .useCss()
       .click('a[href="#treatmentforms"]')
       .waitForElementVisible('button[class="btn btn-primary btn-sm tooltipsclass"][onclick="openStartTreatment();"]' , 60000)
       .pause(500)
},
'Treatment Plan 2' : function (browser){
  browser
      .useXpath()
      .click("//*[@id='treatmentformsContent']/div[3]/span/button")
      .waitForElementVisible("//*[@id='treatmentformsContent']/div[1]/span[2]" , 60000)
      .pause(500)
 },
 'Thoracic exam' : function (browser){
  browser
        .pause(2000)
        .useXpath()
        .waitForElementVisible("//*[@id='treatmentformsContent']/div/a[text()='Wrist And Hand Initial Exam -']" , 60000)
        .pause(500)
        .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Wrist And Hand Initial Exam -']")
        .pause(500)
        .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Shoulder Initial Exam -']")
        .pause(500)
        .click("//*[@id='treatmentformsContent']/div/a[text()='Wrist And Hand Initial Exam -']")
        .useCss()
        .waitForElementVisible('#btnExportPatientForm' , 60000)
        .pause(500)
        .getLocationInView('#otherNote_id')
        .pause(500)
        .getLocationInView('input[name="patientName"]')
        .pause(500)
        .wristandhand(Dominant, PALPATION, Thenar_Eminence, Flexor_Carpi_Radialis, Common_Flexors, Hypothenar_Eminence, Extensor_Carpi, Common_Extensor,
	                       Abductor_Pollius_Longus, Abductor_Pollicis_Brevis, Extensor_Pollicis_Brevis, functional_range, orthopedic_testing, Allen, neurological,
	                       cc, FUNCTIONAL_DEFICIT, FUNCTIONAL_DEFICIT_other)

        .pause(500)
        .getLocationInView('input[name="patientName"]')

        var a=['Muscle' , 'Symmetry' , 'Swelling' , 'Discoloration']
        Muscle_Symmetry=a[Math.floor(Math.random()*a.length)]
        Swelling=a[Math.floor(Math.random()*a.length)]
        aox=Math.floor((Math.random()*4)+1)
        

        browser
        .clearValue('#muscleSymmetry_id')
        .setValue('#muscleSymmetry_id', Muscle_Symmetry)
        .clearValue('#swellingOrDiscoloration_id')
        .setValue('#swellingOrDiscoloration_id' , Swelling)
        .click('input[name="AOX"][value="'+aox+'"]')
        for(i=0; i<3; i++){
        	b=Math.floor((Math.random()*2)+0)
        	Dominant.push(b)
        	c=Math.floor((Math.random()*2)+0)
        	PALPATION.push(c)
        	d=Math.floor((Math.random()*2)+0)
        	e=Math.floor((Math.random()*2)+0)
        	f=Math.floor((Math.random()*2)+0)
        	g=Math.floor((Math.random()*2)+0)
        	h=Math.floor((Math.random()*2)+0)
        	j=Math.floor((Math.random()*2)+0)
        	k=Math.floor((Math.random()*2)+0)
        	l=Math.floor((Math.random()*2)+0)
        	m=Math.floor((Math.random()*2)+0)
        	Thenar_Eminence.push(d)
            Flexor_Carpi_Radialis.push(e)
            Common_Flexors.push(f)
            Hypothenar_Eminence.push(g)
            Extensor_Carpi.push(h)
            Common_Extensor.push(j)
            Abductor_Pollius_Longus.push(k)
            Abductor_Pollicis_Brevis.push(l)
            Extensor_Pollicis_Brevis.push(m)
        	browser
               .click(hand.dominant[b])
               .click(hand.pal[c])
               .click(hand.pal1[d])
               .click(hand.pal2[e])
               .click(hand.pal3[f])
               .click(hand.pal4[g])
               .click(hand.pal5[h])
               .click(hand.pal6[j])
               .click(hand.pal7[k])
               .click(hand.pal8[l])
               .click(hand.pal9[m])
        }
        var n=['other 1' , 'other 2' , 'other 3' , 'other 4']
        other=n[Math.floor(Math.random()*n.length)]
        browser
          .clearValue('#otherNote_id')
          .setValue('#otherNote_id' , other)
          .pause(500)
          .getLocationInView('#neurologicalTestingUnremarkable1')
          .pause(500)
          .getLocationInView('#otherNote_id')
          .pause(500)

          for(i=0; i<3; i++){
          	o=Math.floor((Math.random()*2)+0)
          	p=Math.floor((Math.random()*2)+0)
          	functional_range.push(o)
            orthopedic_testing.push(p)
            browser
              .click(hand.fun[o])
              .click(hand.ort[p])

          }

          for(i=0; i<=9; i++){
          	var q=["20" , "30" , "43" , "60"]
          	num=q[Math.floor(Math.random()*q.length)]
          	Wrist_Flexion.push(num)
          	browser
          	.clearValue(hand.wri[i])
          	.setValue(hand.wri[i] , num)

          }

          for(i=0; i<7; i++){
          	r=Math.floor((Math.random()*12)+0)
          	Allen.push(r)
          	browser
          	 .click(hand.all[r])
          }
          browser
          .pause(500)
          .getLocationInView('#functionalDeficit_Writing')
          .pause(500)
          .getLocationInView('#ulttRight_id')
          .pause(500)
          for(i=0; i<3; i++){
          	s=Math.floor((Math.random()*2)+0)
          	neurological.push(s)
          	browser
          	.click(hand.neu[s])
          }
          for(i=0; i<5; i++){
              t=Math.floor((Math.random()*10)+0)
              cc.push(t)
              browser
               .click(hand.lev[t])
          }

          for(i=0; i<=15; i++){
          	var u=['1' , '2' , '3' , '4' , '5']
          	val=u[Math.floor(Math.random()*u.length)]
          	c5.push(val)
          	browser
          	.clearValue(hand.lev2[i])
          	.setValue(hand.lev2[i] , val)

          }

          for(i=0; i<2; i++){
          	v=Math.floor((Math.random()*3)+0)
          	FUNCTIONAL_DEFICIT.push(v)
             browser
             .click(hand.fundef[v])
             if(v=="2"){
             	browser
             	.isVisible('#wristfunctionalDeficitOther_id' , function(result){
             		var w=['other1' , 'other2' , 'other3' , 'other4' , 'other5']
          	        tex=w[Math.floor(Math.random()*w.length)]
          	        FUNCTIONAL_DEFICIT_other.push(tex)
          	        browser
          	        .clearValue('#wristfunctionalDeficitOther_id')
          	        .setValue('#wristfunctionalDeficitOther_id' , tex)
             	})
             }
          }

          browser
          .pause(500)
          .useXpath()
          .getLocationInView("//*[@id='formid']/div[15]/div[9]/div[29]/button[1]")
          .pause(500)
          .useCss()
          .getLocationInView('#sensoryC6Left_id')
          .pause(500)
          .useXpath()
          .click("//*[@id='formid']/div[15]/div[9]/div[29]/button[1]")
          .waitForElementVisible("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 1 -']" , 60000)
          .pause(500)
          .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Wrist And Hand Initial Exam -']")
          .pause(500)
          .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Shoulder Initial Exam -']")
          .pause(500)
          .click("//*[@id='treatmentformsContent']/div/a[text()='Wrist And Hand Initial Exam -']")
          .useCss()
          .waitForElementVisible('#btnExportPatientForm' , 60000)
          .pause(500)
          .getLocationInView('#otherNote_id')
          .pause(500)
          .getLocationInView('input[name="patientName"]')
          .pause(500)
          
     },
'Check':function(browser){
	browser
	Dominant.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Dominant.length; i++) {
    if (Dominant[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc1.push(current)
    }
        }
        current = Dominant[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc1.push(current)
    }
}

//-------------------------------------------------------------------------------------------
PALPATION.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < PALPATION.length; i++) {
    if (PALPATION[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc2.push(current)
    }
        }
        current = PALPATION[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc2.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Thenar_Eminence.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Thenar_Eminence.length; i++) {
    if (Thenar_Eminence[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc3.push(current)
    }
        }
        current = Thenar_Eminence[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc3.push(current)
    }
}

//-------------------------------------------------------------------------------------------

Flexor_Carpi_Radialis.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Flexor_Carpi_Radialis.length; i++) {
    if (Flexor_Carpi_Radialis[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc4.push(current)
    }
        }
        current = Flexor_Carpi_Radialis[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc4.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Common_Flexors.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Common_Flexors.length; i++) {
    if (Common_Flexors[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc5.push(current)
    }
        }
        current = Common_Flexors[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc5.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Hypothenar_Eminence.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Hypothenar_Eminence.length; i++) {
    if (Hypothenar_Eminence[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc6.push(current)
    }
        }
        current = Hypothenar_Eminence[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc6.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Extensor_Carpi.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Extensor_Carpi.length; i++) {
    if (Extensor_Carpi[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc7.push(current)
    }
        }
        current = Extensor_Carpi[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc7.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Common_Extensor.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Common_Extensor.length; i++) {
    if (Common_Extensor[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc8.push(current)
    }
        }
        current = Common_Extensor[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc8.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Abductor_Pollius_Longus.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Abductor_Pollius_Longus.length; i++) {
    if (Abductor_Pollius_Longus[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc9.push(current)
    }
        }
        current = Abductor_Pollius_Longus[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc9.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Abductor_Pollicis_Brevis.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Abductor_Pollicis_Brevis.length; i++) {
    if (Abductor_Pollicis_Brevis[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc10.push(current)
    }
        }
        current = Abductor_Pollicis_Brevis[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc10.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Extensor_Pollicis_Brevis.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Extensor_Pollicis_Brevis.length; i++) {
    if (Extensor_Pollicis_Brevis[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc11.push(current)
    }
        }
        current = Extensor_Pollicis_Brevis[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc11.push(current)
    }
}

//-------------------------------------------------------------------------------------------
functional_range.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < functional_range.length; i++) {
    if (functional_range[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc13.push(current)
    }
        }
        current = functional_range[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc13.push(current)
    }
}

//-------------------------------------------------------------------------------------------
orthopedic_testing.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < orthopedic_testing.length; i++) {
    if (orthopedic_testing[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc14.push(current)
    }
        }
        current = orthopedic_testing[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc14.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Allen.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Allen.length; i++) {
    if (Allen[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc15.push(current)
    }
        }
        current = Allen[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc15.push(current)
    }
}

//-------------------------------------------------------------------------------------------
neurological.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < neurological.length; i++) {
    if (neurological[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc16.push(current)
    }
        }
        current = neurological[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc16.push(current)
    }
}

//-------------------------------------------------------------------------------------------
cc.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < cc.length; i++) {
    if (cc[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc17.push(current)
    }
        }
        current = cc[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc17.push(current)
    }
}

//-------------------------------------------------------------------------------------------
FUNCTIONAL_DEFICIT.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < FUNCTIONAL_DEFICIT.length; i++) {
    if (FUNCTIONAL_DEFICIT[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      abc18.push(current)
    }
        }
        current = FUNCTIONAL_DEFICIT[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      abc18.push(current)
    }
}

//-------------------------------------------------------------------------------------------
if ((abc18.map(Number)).indexOf(2) > -1) {
  abc19.push(FUNCTIONAL_DEFICIT_other.pop())
}
//-------------------------------------------------------------------------------------------
browser
  .pause(500)
  .wristandhandexam(Dominant_1, PALPATION_1, Thenar_Eminence_1, Flexor_Carpi_Radialis_1, Common_Flexors_1, Hypothenar_Eminence_1, Extensor_Carpi_1, 
                             Common_Extensor_1, Abductor_Pollius_Longus_1, Abductor_Pollicis_Brevis_1, Extensor_Pollicis_Brevis_1, functional_range_1, 
                             orthopedic_testing_1, Allen_1, neurological_1, cc_1, FUNCTIONAL_DEFICIT_1, FUNCTIONAL_DEFICIT_other_1, Muscle_Symmetry_1, 
                             Swelling_1, other_1, aox_1, Wrist_Flexion_1, c5_1, abc1,abc2,abc3,abc4,abc5,abc6,abc7,abc8,abc9,abc10,abc11,abc13,abc14,abc15,
                             abc16,abc17,abc18,abc19,Muscle_Symmetry,Swelling,other,aox,Wrist_Flexion,c5)
  .pause(500)
  .end()
},
'Result':''+function(browser){
	browser

console.log("Dominant------------------->"+[JSON.stringify(Dominant_1.map(Number))==JSON.stringify(abc1.map(Number))])
console.log("PALPATION------------------>"+[JSON.stringify(PALPATION_1.map(Number))==JSON.stringify(abc2.map(Number))])
console.log("Thenar_Eminence------------>"+[JSON.stringify(Thenar_Eminence_1.map(Number))==JSON.stringify(abc3.map(Number))])
console.log("Flexor_Carpi_Radialis------>"+[JSON.stringify(Flexor_Carpi_Radialis_1.map(Number))==JSON.stringify(abc4.map(Number))])
console.log("Common_Flexors------------->"+[JSON.stringify(Common_Flexors_1.map(Number))==JSON.stringify(abc5.map(Number))])
console.log("Hypothenar_Eminence-------->"+[JSON.stringify(Hypothenar_Eminence_1.map(Number))==JSON.stringify(abc6.map(Number))])
console.log("Extensor_Carpi------------->"+[JSON.stringify(Extensor_Carpi_1.map(Number))==JSON.stringify(abc7.map(Number))])
console.log("Common_Extensor------------>"+[JSON.stringify(Common_Extensor_1.map(Number))==JSON.stringify(abc8.map(Number))])
console.log("Abductor_Pollius_Longus---->"+[JSON.stringify(Abductor_Pollius_Longus_1.map(Number))==JSON.stringify(abc9.map(Number))])
console.log("Abductor_Pollicis_Brevis--->"+[JSON.stringify(Abductor_Pollicis_Brevis_1.map(Number))==JSON.stringify(abc10.map(Number))])
console.log("Extensor_Pollicis_Brevis--->"+[JSON.stringify(Extensor_Pollicis_Brevis_1.map(Number))==JSON.stringify(abc11.map(Number))])
console.log("functional_range----------->"+[JSON.stringify(functional_range_1.map(Number))==JSON.stringify(abc13.map(Number))])
console.log("orthopedic_testing--------->"+[JSON.stringify(orthopedic_testing_1.map(Number))==JSON.stringify(abc14.map(Number))])
console.log("Allen---------------------->"+[JSON.stringify(Allen_1.sort(function(a,b){return a-b}))==JSON.stringify(abc15.sort(function(a,b){return a-b}))])
console.log("neurological--------------->"+[JSON.stringify(neurological_1.map(Number))==JSON.stringify(abc16.map(Number))])
console.log("cc------------------------->"+[JSON.stringify(cc_1.map(Number))==JSON.stringify(abc17.map(Number))])
console.log("FUNCTIONAL_DEFICIT--------->"+[JSON.stringify(FUNCTIONAL_DEFICIT_1.map(Number))==JSON.stringify(abc18.map(Number))])
console.log("FUNCTIONAL_DEFICIT_other--->"+[JSON.stringify(FUNCTIONAL_DEFICIT_other_1.map(Number))==JSON.stringify(abc19.map(Number))])
console.log("Muscle_Symmetry------------>"+[JSON.stringify(Muscle_Symmetry_1.join())==JSON.stringify(Muscle_Symmetry)])
console.log("Swelling------------------->"+[JSON.stringify(Swelling_1.join())==JSON.stringify(Swelling)])
console.log("aox------------------------>"+[aox==aox_1])
console.log("other---------------------->"+[JSON.stringify(other_1.join())==JSON.stringify(other)])
console.log("Wrist_Flexion-------------->"+[JSON.stringify(Wrist_Flexion_1.sort(function(a,b){return a-b}))==JSON.stringify(Wrist_Flexion.sort(function(a,b){return a-b}))])
console.log("c5------------------------->"+[JSON.stringify(c5_1.sort(function(a,b){return a-b}))==JSON.stringify(c5.sort(function(a,b){return a-b}))])
}     
}