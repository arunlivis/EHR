var Data = require('../EHR_Json/data.json')
var elbow = require('../EHR_Json/elbowinitialexam.json')

var a;                           var a_1=[];
var vcheck_1=[];                 var vcheck_2=[];                var aa1=[];      
var vtext_1=[];                  var vtext_2=[];             
var Dominant_Hand=[];            var Dominant_Hand_1=[];         var aa2=[];     
var Biceps_Brachii=[];           var Biceps_Brachii_1=[];        var aa3=[];             
var Triceps_Brachi=[];           var Triceps_Brachi_1=[];        var aa4=[];             
var Common_Flexors=[];           var Common_Flexors_1=[];        var aa5=[];           
var Pronator_Teres=[];           var Pronator_Teres_1=[];        var aa6=[];      
var Anconeus=[];                 var Anconeus_1=[];              var aa7=[];                 
var Common_Extensors=[];         var Common_Extensors_1=[];      var aa8=[];   
var test=[];      var test_1=[];      var aa9=[];
var neuro=[];     var neuro_1=[];     var aa10=[];   
var func=[];      var func_1=[];      var aa11=[];      
var other=[];     var other_1=[];     var ck_1=[];    var aa12=[];
var Flexion=[];   var Flexion_1=[];        
var c_level=[];   var c_level_1=[];      

module.exports={
  login : function (browser) {
    browser 
    .login(Data.user1[1].username, Data.user1[1].password)

},
'view files' : function (browser){
      browser
      .pause(1000)      
       .useCss()
       .click('a[class="firstLevel"]')
       .pause(500)
       .click('a[href="/EHR/Clinicadmin/view-patient-details-open"]')
       .waitForElementVisible('#col0_filter' , 60000)
       .useXpath()
       .waitForElementVisible("//*[@id='patient']/tbody/tr/td[2]" , 60000)
       .pause(200)
       .click("//*[@id='patient']/tbody/tr/td[6]/a/i")
       .useCss()
       .waitForElementVisible('#patient_first_name' , 60000)
       .pause(500)
     },
'Exam Forms' : function(browser){
  browser
       .pause(2000)
       .useCss()
       .click('a[href="#treatmentforms"]')
       .waitForElementVisible('button[class="btn btn-primary btn-sm tooltipsclass"][onclick="openStartTreatment();"]' , 60000)
       .pause(500)
},
'Treatment Plan 2' : function (browser){
  browser
      .useXpath()
      .waitForElementVisible("//*[@id='treatmentformsContent']/div[3]/span/button" , 60000)
      .pause(1000)
      .click("//*[@id='treatmentformsContent']/div[3]/span/button")
      .waitForElementVisible("//*[@id='treatmentformsContent']/div[1]/span[2]" , 60000)
      .pause(500)
 },
 'Elbow exam' : function (browser){
  browser
        .pause(2000)
        .useXpath()
        .waitForElementVisible("//*[@id='treatmentformsContent']/div/a[text()='Elbow Initial Exam -']" , 60000)
        .pause(500)
        .click("//*[@id='treatmentformsContent']/div/a[text()='Elbow Initial Exam -']")
        .waitForElementVisible("//*[@id='treatmentformsContent']/div[1]/span[2]" , 60000)
        .useCss()
        .pause(500)
        .elbowexam(vcheck_1, Dominant_Hand, Biceps_Brachii, Triceps_Brachi, Common_Flexors, Pronator_Teres, Anconeus, Common_Extensors, test, neuro, func, other)
        .pause(500)
        .getLocationInView('#functionalRangeOfMotionUnremarkableid')
        .pause(500)
        .getLocationInView('#dateid')
        .pause(500)
        a=Math.floor((Math.random()*4)+1)
        browser
        .useXpath()
        .click("//*[@id='formid']/div[3]/div[2]/div[1]/label["+a+"]")
        for(i=0; i<3; i++){
        b=Math.floor((Math.random()*2)+1)
        c=Math.floor((Math.random()*2)+1)
        d=Math.floor((Math.random()*2)+1)
        e=Math.floor((Math.random()*2)+1)
        f=Math.floor((Math.random()*2)+1)
        g=Math.floor((Math.random()*2)+1)
        h=Math.floor((Math.random()*2)+1)
        Dominant_Hand.push(b)
        Biceps_Brachii.push(c)
        Triceps_Brachi.push(d)
        Common_Flexors.push(e)
        Pronator_Teres.push(f)
        Anconeus.push(g)
        Common_Extensors.push(h)
        browser
        .useXpath()
        
        .click("//*[@id='formid']/div[4]/div[5]/div[1]/label["+b+"]")
        .click("//*[@id='formid']/div[7]/div[2]/div[1]/label["+c+"]")
        .click("//*[@id='formid']/div[7]/div[4]/div[1]/label["+d+"]")
        .click("//*[@id='formid']/div[7]/div[6]/div[1]/label["+e+"]")
        .click("//*[@id='formid']/div[8]/div[2]/div[1]/label["+f+"]")
        .click("//*[@id='formid']/div[8]/div[4]/div[1]/label["+g+"]")
        .click("//*[@id='formid']/div[8]/div[6]/div[1]/label["+h+"]")
    }

    for(i=0; i<=2; i++){
        j=Math.floor((Math.random()*4)+0)
        vtext_1.push(j)
        browser
        .useCss()
        .clearValue(elbow.viewT_1[i])
        .setValue(elbow.viewT_1[i] , elbow.tex[j])
    }

    for(i=0;i<5; i++){
    	k=Math.floor((Math.random()*6)+0)
    	vcheck_1.push(k)
    	browser
    	.useCss()
    	.click(elbow.viewC_1[k])
    }
    browser
    .pause(500)
    .getLocationInView('#overheadActivitiesid')
    .pause(500)
    .getLocationInView('#functionalRangeOfMotionUnremarkableid')
     .pause(500)

    for(i=0; i<=5; i++){
      l=Math.floor((Math.random()*4)+0)
      Flexion.push(l)
      browser
      .useCss()
      .clearValue(elbow.flex[i])
      .setValue(elbow.flex[i] , elbow.num[l])
    }

    for(i=0; i<7; i++){
      m=Math.floor((Math.random()*12)+0)
      test.push(m)
      browser
      .useCss()
      .click(elbow.tes[m])
    }
    browser
    .pause(500)
    .getLocationInView('#overheadActivitiesid')
    .pause(500)
    .getLocationInView('#neurologicalTestingUnremarkableid')
    .pause(500)

    for(i=0; i<5; i++){
      n=Math.floor((Math.random()*10)+0)
      neuro.push(n)
      browser
      .useCss()
      .click(elbow.nero[n])
    }

    for(i=0; i<=15; i++){
      o=Math.floor((Math.random()*5)+0)
      c_level.push(o)
      browser
      .useCss()
      .clearValue(elbow.cc[i])
      .setValue(elbow.cc[i] , elbow.val[o])
    }

    browser
    .pause(500)
    .useXpath()
    .getLocationInView("//*[@id='formid']/div[35]/button[1]")
    .pause(500)
    .useCss()
    .getLocationInView('#medElbowT1Leftid')
    .pause(500)

    for(i=0; i<3; i++){
      browser
       p=Math.floor((Math.random()*3)+0)
       func.push(p)
       if(p<=1){
       browser
       .useCss()
       .click(elbow.fun[p])
     }
      
       if(p==2){
         browser
       .useCss()
       .click(elbow.fun[p])
       .pause(500)
          .isVisible('#otherDeficitTextid' , function(result) {
            if(result.value==true){
               q=Math.floor((Math.random()*4)+0)
               other.push(q)
               console.log("qq"+q)
               browser
               .useCss()
              .setValue('#otherDeficitTextid' , elbow.tex[q])
            }
         })
       }

    }

//------------------------------------------------------------------------------------------------------------
            browser
            .useXpath()
            .click("//*[@id='formid']/div[35]/button[1]")
            .waitForElementVisible("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 1 -']" , 60000)
            .pause(500)
            .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Elbow Initial Exam -']")
            .pause(500)
            .getLocationInView("//*[@id='treatmentformsContent']/div/a[text()='Initial Exam Screen 1 -']")
            .pause(500)

            .click("//*[@id='treatmentformsContent']/div/a[text()='Elbow Initial Exam -']")
            .waitForElementVisible("//*[@id='treatmentformsContent']/div[1]/span[2]" , 60000)
            .useCss()
            .pause(500)    
           
},
'check':function(browser){
  browser
vcheck_1.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < vcheck_1.length; i++) {
    if (vcheck_1[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa1.push(current)
    }
        }
        current = vcheck_1[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa1.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Dominant_Hand.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Dominant_Hand.length; i++) {
    if (Dominant_Hand[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa2.push(current)
    }
        }
        current = Dominant_Hand[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa2.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Biceps_Brachii.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Biceps_Brachii.length; i++) {
    if (Biceps_Brachii[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa3.push(current)
    }
        }
        current = Biceps_Brachii[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa3.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Triceps_Brachi.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Triceps_Brachi.length; i++) {
    if (Triceps_Brachi[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa4.push(current)
    }
        }
        current = Triceps_Brachi[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa4.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Common_Flexors.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Common_Flexors.length; i++) {
    if (Common_Flexors[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa5.push(current)
    }
        }
        current = Common_Flexors[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa5.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Pronator_Teres.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Pronator_Teres.length; i++) {
    if (Pronator_Teres[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa6.push(current)
    }
        }
        current = Pronator_Teres[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa6.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Anconeus.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Anconeus.length; i++) {
    if (Anconeus[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa7.push(current)
    }
        }
        current = Anconeus[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa7.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Common_Extensors.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Common_Extensors.length; i++) {
    if (Common_Extensors[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa8.push(current)
    }
        }
        current = Common_Extensors[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa8.push(current)
    }
}

//-------------------------------------------------------------------------------------------
test.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < test.length; i++) {
    if (test[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa9.push(current)
    }
        }
        current = test[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa9.push(current)
    }
}

//-------------------------------------------------------------------------------------------
neuro.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < neuro.length; i++) {
    if (neuro[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa10.push(current)
    }
        }
        current = neuro[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa10.push(current)
    }
}

//-------------------------------------------------------------------------------------------
func.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < func.length; i++) {
    if (func[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa11.push(current)
    }
        }
        current = func[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa11.push(current)
    }
}

//-------------------------------------------------------------------------------------------
for(i=0;i<func.length;i++){
          if(func[i]==2){
           ck_1.push(func[i])

           
        }
        }
        if(ck_1.length%2==1){
           if(other.length>0){
      aa12.push(other.pop())
    }
    }

//-------------------------------------------------------------------------------------------
browser
   .pause(500)
   .elbowinitialexam(a_1, vcheck_2, vtext_2, Dominant_Hand_1, Biceps_Brachii_1, Triceps_Brachi_1, Common_Flexors_1, Pronator_Teres_1, Anconeus_1, 
                     Common_Extensors_1, test_1, neuro_1, func_1, other_1, Flexion_1, c_level_1,a,aa1,elbow,vtext_1,aa2,aa3,aa4,aa5,aa6,aa7,aa8,aa9,aa10,
                     aa11,aa12,Flexion,c_level)
   .pause(500)
   .end()

},
'Result':''+ function(browser){
  browser
  console.log("AOX------------------>"+[a==a_1])
  console.log("view 1 checkbox------>"+[JSON.stringify(aa1.sort())==JSON.stringify(vcheck_2.sort())])
  console.log("view 1 textbox------->"+[JSON.stringify(vtext_1.sort())==JSON.stringify(vtext_2.sort())])
  console.log("Dominant_Hand-------->"+[JSON.stringify(aa2.sort())==JSON.stringify(Dominant_Hand_1.sort())])
  console.log("Biceps_Brachii------->"+[JSON.stringify(aa3.sort())==JSON.stringify(Biceps_Brachii_1.sort())])
  console.log("Triceps_Brachi------->"+[JSON.stringify(aa4.sort())==JSON.stringify(Triceps_Brachi_1.sort())])
  console.log("Common_Flexors------->"+[JSON.stringify(aa5.sort())==JSON.stringify(Common_Flexors_1.sort())])
  console.log("Pronator_Teres------->"+[JSON.stringify(aa6.sort())==JSON.stringify(Pronator_Teres_1.sort())])
  console.log("Anconeus------------->"+[JSON.stringify(aa7.sort())==JSON.stringify(Anconeus_1.sort())])
  console.log("Common_Extensors----->"+[JSON.stringify(aa8.sort())==JSON.stringify(Common_Extensors_1.sort())])
  console.log("test----------------->"+[JSON.stringify(aa9.sort())==JSON.stringify(test_1.sort())])
  console.log("neuro---------------->"+[JSON.stringify(aa10.sort())==JSON.stringify(neuro_1.sort())])
  console.log("FUNCTIONAL DEFICIT--->"+[JSON.stringify(aa11.sort())==JSON.stringify(func_1.sort())])
  console.log("other---------------->"+[JSON.stringify(aa12.sort())==JSON.stringify(other_1.sort())])
  console.log("Flexion-------------->"+[JSON.stringify(Flexion.sort())==JSON.stringify(Flexion_1.sort())])
  console.log("c_level-------------->"+[JSON.stringify(c_level_1.sort())==JSON.stringify(c_level_1.sort())])

}    
}