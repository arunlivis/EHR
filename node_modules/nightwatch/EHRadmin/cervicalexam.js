var Data = require('../EHR_Json/data.json')
var cervi = require('../EHR_Json/cervicalexam.json')

var Rounded=[].sort();               var Rounded_1=[].sort();                 var aa1=[].sort();  
var c;                               var AOX_1=[].sort();                 
var vi_1=[].sort();                  var vi_2=[].sort();                      var aa3=[].sort();
var Sub_Occipita=[].sort();          var Sub_Occipita_1=[].sort();            var aa4=[].sort();         
var Scalenes=[].sort();              var Scalenes_1=[].sort();                var aa5=[].sort();   
var Levator=[].sort();               var Levator_1=[].sort();                 var aa6=[].sort();      
var Teres=[].sort();                 var Teres_1=[].sort();                   var aa7=[].sort();      
var Teres_Major=[].sort();           var Teres_Major_1=[].sort();             var aa8=[].sort();       
var Rhomboids=[].sort();             var Rhomboids_1=[].sort();               var aa9=[].sort();     
var Trapezius=[].sort();             var Trapezius_1=[].sort();               var aa10=[].sort(); 
var Pectoralis=[].sort();            var Pectoralis_1=[].sort().sort();       var aa11=[].sort(); 
var Paraspinals=[].sort();           var Paraspinals_1=[].sort();             var aa12=[].sort();     
var text=[].sort();                  var text_1=[].sort();         
var tex=[].sort();                   var tex_1=[].sort();
var CO_1=[].sort();                  var CO_2=[].sort();                      var aa13=[].sort();      
var test=[].sort();                  var test_1=[].sort();                    var aa14=[].sort();           
var NEUROLOGICAL=[].sort();          var NEUROLOGICAL_1=[].sort();            var aa15=[].sort();            
var neuro_t=[].sort();               var abc=[].sort();
var defi=[];                         var defi_1=[];                           var aa19=[];
var other=[];                        var other_1=[];      var ck_1=[];        var aa20=[];

module.exports={
  login : function (browser) {
    browser 
    .login(Data.user1[1].username, Data.user1[1].password)

},
'view files' : function (browser){
      browser
      .pause(1000)      
       .useCss()
       .click('a[class="firstLevel"]')
       .pause(500)
       .click('a[href="/EHR/Clinicadmin/view-patient-details-open"]')
       .waitForElementVisible('#col0_filter' , 60000)
       .useXpath()
       .waitForElementVisible("//*[@id='patient']/tbody/tr/td[2]" , 60000)
       .pause(200)
       .click("//*[@id='patient']/tbody/tr/td[6]/a/i")
       .useCss()
       .waitForElementVisible('#patient_first_name' , 60000)
       .pause(500)
     },
'Exam Forms' : function(browser){
  browser
       .pause(2000)
       .useCss()
       .click('a[href="#treatmentforms"]')
       .waitForElementVisible('button[class="btn btn-primary btn-sm tooltipsclass"][onclick="openStartTreatment();"]' , 60000)
       .pause(1000)
},
'Treatment Plan 2' : function (browser){
  browser
      .useXpath()
      .pause(500)
      .waitForElementVisible("//*[@id='treatmentformsContent']/div[3]/span/button" , 60000)
      .pause(500)
      .click("//*[@id='treatmentformsContent']/div[3]/span/button")
      .waitForElementVisible("//*[@id='treatmentformsContent']/div[1]/span[2]" , 60000)
      .pause(500)
 },
 'Cervical exam' : function (browser){
  browser
        .pause(2000)
        .useXpath()
        .waitForElementVisible("//*[@id='treatmentformsContent']/div/a[text()='Cervical Initial Exam -']" , 60000)
        .pause(500)
        .click("//*[@id='treatmentformsContent']/div/a[text()='Cervical Initial Exam -']")
        .waitForElementVisible("//*[@id='treatmentformsContent']/div[1]/span[2]" , 60000)
        .pause(500)
        .cervical_1(Rounded, vi_1, Sub_Occipita, Scalenes, Levator, Teres, Teres_Major, Rhomboids, Trapezius ,Pectoralis, Paraspinals, CO_1, test, NEUROLOGICAL, defi, other)
        for(i=0; i<=4; i++){
        	a=Math.floor((Math.random()*3)+0)
        	text.push(a)
        	browser
        	.useCss()
        	.clearValue(cervi.obs[i])
        	.setValue(cervi.obs[i] , cervi.tex[a])
        }
        b=Math.floor((Math.random()*2)+1)
        c=Math.floor((Math.random()*4)+1)
        d=Math.floor((Math.random()*2)+1)
        e=Math.floor((Math.random()*2)+1)
        f=Math.floor((Math.random()*2)+1)
        g=Math.floor((Math.random()*2)+1)
        h=Math.floor((Math.random()*2)+1)
        j=Math.floor((Math.random()*2)+1)
        k=Math.floor((Math.random()*2)+1)
        l=Math.floor((Math.random()*2)+1)
        m=Math.floor((Math.random()*2)+1)
        Rounded.push(b)
        Sub_Occipita.push(d)
        Scalenes.push(e) 
        Levator.push(f) 
        Teres.push(g) 
        Teres_Major.push(h)
        Rhomboids.push(j) 
        Trapezius.push(k)
        Pectoralis.push(l)
        Paraspinals.push(m)
        browser
        .useXpath()
        .click("//*[@id='formid']/div[4]/div[2]/div[1]/label["+b+"]")
        .click("//*[@id='formid']/div[4]/div[6]/div[1]/label["+c+"]")
        .click("//*[@id='formid']/div[7]/div[2]/div[1]/label["+d+"]")
        .click("//*[@id='formid']/div[7]/div[4]/div[1]/label["+e+"]")
        .click("//*[@id='formid']/div[7]/div[6]/div[1]/label["+f+"]")
        .click("//*[@id='formid']/div[8]/div[2]/div[1]/label["+g+"]")
        .click("//*[@id='formid']/div[8]/div[4]/div[1]/label["+h+"]")
        .click("//*[@id='formid']/div[8]/div[6]/div[1]/label["+j+"]")
        .click("//*[@id='formid']/div[9]/div[2]/div[1]/label["+k+"]")
        .click("//*[@id='formid']/div[9]/div[4]/div[1]/label["+l+"]")
        .click("//*[@id='formid']/div[9]/div[6]/div[1]/label["+m+"]")


       for(i=0; i<5; i++){
        m=Math.floor((Math.random()*8)+0)
        vi_1.push(m)
        browser
        .useCss()
        .click(cervi.view1[m])
    }
    browser
    .useCss()
.pause(500)
.getLocationInView('#neurologicalUnremarkableid')
.pause(500)
.getLocationInView('#functionalRangeMotionUnremarkableid')
.pause(500)

    for(i=0; i<=5; i++){
    	n=Math.floor((Math.random()*4)+0)
    	tex.push(n)
    	browser
    	.useCss()
    	.clearValue(cervi.func[i])
    	.setValue(cervi.func[i] , cervi.num[n])
    }

    for(i=0; i<7; i++){
    	o=Math.floor((Math.random()*15)+0)
    	CO_1.push(o)
    	browser
    	.useCss()
    	.click(cervi.sublu[o])
    }

    for(i=0;i<7;i++){
    	p=Math.floor((Math.random()*12)+0)
    	test.push(p)
    	browser
    	.useCss()
    	.click(cervi.ortho[p])
    }
    browser
    .useCss()
    .pause(500)
    .getLocationInView('#functionalDeficitSittingid')
    .pause(500)
    .getLocationInView('#ulitRightid')
    .pause(500)

    for(i=0; i<5; i++){
      q=Math.floor((Math.random()*12)+0)
      NEUROLOGICAL.push(q)
      browser
      .useCss()
      .click(cervi.neuro[q])
    }

    for(i=0; i<=15; i++){
      r=Math.floor((Math.random()*4)+0)
      neuro_t.push(r)
      browser
      .useCss()
      .clearValue(cervi.NT[i])
      .setValue(cervi.NT[i] , cervi.number[r])
    }
browser
.useCss()
.pause(500)
.getLocationInView('#functionalDeficitOtherid')
.pause(500)
.getLocationInView('#medElbowT1Leftid')
.pause(500)
    for(i=0; i<3; i++){
     s=Math.floor((Math.random()*5)+0)
      defi.push(s)
      if(s<=3){
      browser
      .useCss()
      .click(cervi.fina[s])
    }

      if(s==4){
        browser
        .useCss()
        .click(cervi.fina[s])
        .pause(500)
          .isVisible('#cervicalfunctionalDeficitOtherTextid' , function(result) {
            if(result.value==true){
              t=Math.floor((Math.random()*4)+0)
               other.push(t)
               browser
               .useCss()
              .clearValue('#cervicalfunctionalDeficitOtherTextid')
              .setValue('#cervicalfunctionalDeficitOtherTextid' , cervi.tex[t])
            }
         })
      }

    }


//------------------------------------------------------------------------------------------------------------------------------------------
            
            browser
            .useXpath()
            .pause(500)
            .getLocationInView("//*[@id='formid']/div[37]/button[1]")
            .pause(500)
            .useCss()
            .getLocationInView('#functionalDeficitStandingid')
            .pause(500)
            .useXpath()
            .click("//*[@id='formid']/div[37]/button[1]")
            .pause(1500)
            .useXpath()
            .waitForElementVisible("//*[@id='treatmentformsContent']/div/a[text()='Cervical Initial Exam -']" , 60000)
            .pause(500)
            .click("//*[@id='treatmentformsContent']/div/a[text()='Cervical Initial Exam -']")
            .waitForElementVisible("//*[@id='treatmentformsContent']/div[1]/span[2]" , 60000)
            .pause(500)

},
'check':function(browser){
	browser
Rounded.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Rounded.length; i++) {
    if (Rounded[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa1.push(current)
    }
        }
        current = Rounded[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa1.push(current)
    }
}

//-------------------------------------------------------------------------------------------

vi_1.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < vi_1.length; i++) {
    if (vi_1[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa3.push(current)
    }
        }
        current = vi_1[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa3.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Sub_Occipita.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Sub_Occipita.length; i++) {
    if (Sub_Occipita[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa4.push(current)
    }
        }
        current = Sub_Occipita[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa4.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Scalenes.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Scalenes.length; i++) {
    if (Scalenes[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa5.push(current)
    }
        }
        current = Scalenes[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa5.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Levator.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Levator.length; i++) {
    if (Levator[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa6.push(current)
    }
        }
        current = Levator[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa6.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Teres.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Teres.length; i++) {
    if (Teres[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa7.push(current)
    }
        }
        current = Teres[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa7.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Teres_Major.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Teres_Major.length; i++) {
    if (Teres_Major[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa8.push(current)
    }
        }
        current = Teres_Major[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa8.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Rhomboids.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Rhomboids.length; i++) {
    if (Rhomboids[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa9.push(current)
    }
        }
        current = Rhomboids[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa9.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Trapezius.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Trapezius.length; i++) {
    if (Trapezius[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa10.push(current)
    }
        }
        current = Trapezius[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa10.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Pectoralis.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Pectoralis.length; i++) {
    if (Pectoralis[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa11.push(current)
    }
        }
        current = Pectoralis[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa11.push(current)
    }
}

//-------------------------------------------------------------------------------------------
Paraspinals.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < Paraspinals.length; i++) {
    if (Paraspinals[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa12.push(current)
    }
        }
        current = Paraspinals[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa12.push(current)
    }
}

//-------------------------------------------------------------------------------------------
CO_1.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < CO_1.length; i++) {
    if (CO_1[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa13.push(current)
    }
        }
        current = CO_1[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa13.push(current)
    }
}

//-------------------------------------------------------------------------------------------
test.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < test.length; i++) {
    if (test[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa14.push(current)
    }
        }
        current = test[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa14.push(current)
    }
}

//-------------------------------------------------------------------------------------------
NEUROLOGICAL.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < NEUROLOGICAL.length; i++) {
    if (NEUROLOGICAL[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa15.push(current)
    }
        }
        current = NEUROLOGICAL[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa15.push(current)
    }
}

//-------------------------------------------------------------------------------------------
defi.sort();

var current = null;
var cnt = 0;
for (var i = 0; i < defi.length; i++) {
    if (defi[i] != current) {
        if (cnt > 0) {
           // console.log(current + ' comes --> ' + cnt + ' times<br>');
            if(cnt % 2 == 1){
      aa19.push(current)
    }
        }
        current = defi[i];
        cnt = 1;
    } else {
        cnt++;
    }
}
if (cnt > 0) {
   // console.log(current + ' comes --> ' + cnt + ' times');
    if(cnt % 2 == 1){
      aa19.push(current)
    }
}

//-------------------------------------------------------------------------------------------
for(i=0;i<defi.length;i++){
          if(defi[i]==4){
           ck_1.push(defi[i])

           
        }
        }
        if(ck_1.length%2==1){
           if(other.length>0){
      aa20.push(other.pop())
    }
    }

//-------------------------------------------------------------------------------------------
     browser
       .pause(500)
       .cervicalexam(Rounded_1, AOX_1, vi_2, Sub_Occipita_1, Scalenes_1, Levator_1, Teres_1, Teres_Major_1, Rhomboids_1, Trapezius_1, Pectoralis_1, 
                     Paraspinals_1, text_1, tex_1, CO_2, test_1, NEUROLOGICAL_1, abc, defi_1, other_1,aa1,c,aa3,aa4,aa5,aa6,aa7,aa8,aa9,aa10,aa11,aa12,
                     cervi,text,tex,aa13,aa14,aa15,neuro_t,aa19,aa20)
       .pause(500)
       .end()
},
'Result':''+function(browser){
	browser

         console.log("Rounded-------------->"+[JSON.stringify(aa1.sort())==JSON.stringify(Rounded_1.sort())])
         console.log("AOX------------------>"+[c==AOX_1])
         console.log("view----------------->"+[JSON.stringify(aa3.sort())==JSON.stringify(vi_2.sort())])
         console.log("Sub_Occipita--------->"+[JSON.stringify(aa4.sort())==JSON.stringify(Sub_Occipita_1.sort())])        
         console.log("Scalenes------------->"+[JSON.stringify(aa5.sort())==JSON.stringify(Scalenes_1.sort())])
         console.log("Levator-------------->"+[JSON.stringify(aa6.sort())==JSON.stringify(Levator_1.sort())])
         console.log("Teres---------------->"+[JSON.stringify(aa7.sort())==JSON.stringify(Teres_1.sort())])
         console.log("Teres_Major---------->"+[JSON.stringify(aa8.sort())==JSON.stringify(Teres_Major_1.sort())])       
         console.log("Rhomboids------------>"+[JSON.stringify(aa9.sort())==JSON.stringify(Rhomboids_1.sort())])
         console.log("Trapezius------------>"+[JSON.stringify(aa10.sort())==JSON.stringify(Trapezius_1.sort())])
         console.log("Pectoralis----------->"+[JSON.stringify(aa11.sort())==JSON.stringify(Pectoralis_1.sort())])
         console.log("Paraspinals---------->"+[JSON.stringify(aa12.sort())==JSON.stringify(Paraspinals_1.sort())])
         console.log("text----------------->"+[JSON.stringify(text.sort())==JSON.stringify(text_1.sort())])
         console.log("tex------------------>"+[JSON.stringify(tex.sort())==JSON.stringify(tex_1.sort())])
         console.log("CO_1----------------->"+[JSON.stringify(CO_2.sort(function(a, b){return a-b}))==JSON.stringify(aa13.sort(function(a, b){return a-b}))])
         console.log("test----------------->"+[JSON.stringify(test_1.sort(function(a, b){return a-b}))==JSON.stringify(aa14.sort(function(a, b){return a-b}))])
         console.log("NEUROLOGICAL--------->"+[JSON.stringify(NEUROLOGICAL_1.sort(function(a, b){return a-b}))==JSON.stringify(aa15.sort(function(a, b){return a-b}))])
         console.log("neuro---------------->"+[JSON.stringify(neuro_t.sort())==JSON.stringify(abc.sort())])
         console.log("FUNCTIONAL DEFICIT--->"+[JSON.stringify(defi_1.sort())==JSON.stringify(aa19.sort())])
         console.log("other---------------->"+[JSON.stringify(other_1.sort())==JSON.stringify(aa20.sort())])
        
         
     }
  }