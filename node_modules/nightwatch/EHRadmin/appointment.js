var Data = require('../EHR_Json/data.json')

var value;
var id;
var first_name;
var last_name;
var Day = new Date();
var today = Day.getDay()
var mgn_start;
var mgn_end;
var eve_start;
var eve_end;

var arr=[];
var time;                var time_1;   var time_2;

var appointment_1;
var appointment_2;
var appointment_3;

module.exports={
    login : function (browser) {
        browser 
        .login(Data.user1[1].username, Data.user1[1].password)

},
'Set Clinic Hours':function(browser){
	browser
	   .useCss()
	   .click('a[class=""]')
	   .pause(500)
	   .click('a[href="/EHR/Clinicadmin/clinicadmin-settings"]')
	   .waitForElementVisible('#patientsCount' , 60000)
	   .pause(500)
	   .getValue('#slotDurationId' , function(result){
	   	    value=result.value
	   })
	   if(today==0){
	    	browser 
               .getValue('#startTimeSun' , function(result){
               	   mgn_start=result.value
               })
               .getValue('#breakStartTimeSun' , function(result){
               	   mgn_end=result.value
               })
               .getValue('#breakEndTimeSun' , function(result){
                   eve_start=result.value
               })
               .getValue('#endTimeSun' , function(result){
                   eve_end=result.value
               })
	   }
	   if(today==1){
	    	browser 
               .getValue('#startTimeMon' , function(result){
               	   mgn_start=result.value
               })
               .getValue('#breakStartTimeMon' , function(result){
               	   mgn_end=result.value
               })
               .getValue('#breakEndTimeMon' , function(result){
                   eve_start=result.value
               })
               .getValue('#endTimeMon' , function(result){
                   eve_end=result.value
               })
	   }
	   if(today==2){
	    	browser 
               .getValue('#startTimeTue' , function(result){
               	   mgn_start=result.value
               })
               .getValue('#breakStartTimeTue' , function(result){
               	   mgn_end=result.value
               })
               .getValue('#breakEndTimeTue' , function(result){
                   eve_start=result.value
               })
               .getValue('#endTimeTue' , function(result){
                   eve_end=result.value
               })
	   }
	   if(today==3){
	    	browser 
               .getValue('#startTimeWed' , function(result){
               	   mgn_start=result.value
               })
               .getValue('#breakStartTimeWed' , function(result){
               	   mgn_end=result.value
               })
               .getValue('#breakEndTimeWed' , function(result){
                   eve_start=result.value
               })
               .getValue('#endTimeWed' , function(result){
                   eve_end=result.value
               })
	   }
	   if(today==4){
	    	browser 
               .getValue('#startTimeThu' , function(result){
               	   mgn_start=result.value
               })
               .getValue('#breakStartTimeThu' , function(result){
               	   mgn_end=result.value
               })
               .getValue('#breakEndTimeThu' , function(result){
                   eve_start=result.value
               })
               .getValue('#endTimeThu' , function(result){
                   eve_end=result.value
               })
	   }
	   if(today==5){
	    	browser 
               .getValue('#startTimeFri' , function(result){
               	   mgn_start=result.value
               })
               .getValue('#breakStartTimeFri' , function(result){
               	   mgn_end=result.value
               })
               .getValue('#breakEndTimeFri' , function(result){
                   eve_start=result.value
               })
               .getValue('#endTimeFri' , function(result){
                   eve_end=result.value
               })
	   }
	   if(today==6){
	    	browser 
               .getValue('#startTimeSat' , function(result){
               	   mgn_start=result.value
               })
               .getValue('#breakStartTimeSat' , function(result){
               	   mgn_end=result.value
               })
               .getValue('#breakEndTimeSat' , function(result){
                   eve_start=result.value
               })
               .getValue('#endTimeSat' , function(result){
                   eve_end=result.value
               })
	   }
},
'working hours':function(browser){
    browser


    var c=mgn_end.substring(0, 2)

var g=parseInt(mgn_start.substring(0, 2))
var d=parseInt(mgn_end.substring(0, 2))

var h;
var f;

var a2;
var b2;

       if(mgn_start.substring(6, 9)=='PM' && g<12){
	h=((g+12)+':'+mgn_start.substring(3, 5))
}else{
	h=mgn_start.substring(0, 5)
}

if(mgn_end.substring(6, 9)=='PM' && d<12){
	f=((d+12)+':'+mgn_end.substring(3, 5))
}else{
	f=mgn_end.substring(0, 5)
}




a2 = new Date("2015-01-01 "+h+":00")
b2 = new Date("2015-01-01 "+f+":00")

a1=a2.getTime();
b1=b2.getTime();



i=a1;
do{
	var date = new Date(i);
	var hours = date.getHours();
  	var minutes = date.getMinutes();
  	var ampm = hours >= 12 ? 'PM' : 'AM';
  	hours = hours % 24;
  	hours = hours ? hours : 24; // the hour '0' should be '12'
  	minutes = minutes < 10 ? '0'+minutes : minutes;
  	if(hours<10){
  	var strTime = '0' + hours + ':' + minutes;
  }else{
  	var strTime = hours + ':' + minutes;
  }
	arr.push(strTime);
  	i=i+(value*60000);
}
while(i<b1)
	//----------------------------------------------------------------------------------------

    var c_1=eve_end.substring(0, 2)

var g_1=parseInt(eve_start.substring(0, 2))
var d_1=parseInt(eve_end.substring(0, 2))

var h_1;
var f_1;

var a2_1;
var b2_1;

       if(eve_start.substring(6, 9)=='PM' && g_1<12){
	h_1=((g_1+12)+':'+eve_start.substring(3, 5))
}else{
	h_1=eve_start.substring(0, 5)
}

if(eve_end.substring(6, 9)=='PM' && d_1<12){
	f_1=((d_1+12)+':'+eve_end.substring(3, 5))
}else{
	f_1=eve_end.substring(0, 5)
}




a2_1 = new Date("2015-01-01 "+h_1+":00")
b2_1 = new Date("2015-01-01 "+f_1+":00")

a1_1=a2_1.getTime();
b1_1=b2_1.getTime();



i_1=a1_1;
do{
	var date_1 = new Date(i_1);
	var hours_1 = date_1.getHours();
  	var minutes_1 = date_1.getMinutes();
  	var ampm_1 = hours_1 >= 12 ? 'PM' : 'AM';
  	hours_1 = hours_1 % 24;
  	hours_1 = hours_1 ? hours_1 : 24; // the hour '0' should be '12'
  	minutes_1 = minutes_1 < 10 ? '0'+minutes_1 : minutes_1;
  	if(hours_1<10){
  	var strTime_1 = '0' + hours_1 + ':' + minutes_1;
  }else{
  	var strTime_1 = hours_1 + ':' + minutes_1;
  }
	arr.push(strTime_1);
  	i_1=i_1+(value*60000);
}
while(i_1<b1_1)
},
'open patient file':function(browser){
	browser
	  .useCss()
	 .pause(500)
	 .click('a[class="firstLevel"]')
	 .pause(300)
	 .click('a[href="/EHR/Clinicadmin/view-patient-details-open"]')
	 .waitForElementVisible('a[onclick="getPatientProfile()"]' , 60000)
	 .pause(1000)
	 .waitForElementVisible('td[class="sorting_1"]' , 60000)
	 .pause(500)
	 .getText('td[class="sorting_1"]' , function(result){
	 	id=result.value
	 })
	 .pause(500)
	
	  
},
'Appointment 1':function(browser){
	browser
	  .useXpath()
	  .waitForElementVisible("//*[@id='"+id+"']/a[3]/i" , 60000)
	  .pause(500)
	  .click("//*[@id='"+id+"']/a[3]/i")

	  .windowHandles(function(result) {
    var newWindow;
    this.verify.equal(result.value.length, 2, 'There should be 2 windows   open');
    newWindow = result.value[1];
    this.switchWindow(newWindow);
})

	  browser
	  .useCss()
	   .waitForElementVisible('#calendar' , 60000)
	   .pause(2000)
	   .useXpath()
	   .waitForElementVisible("//*[@id='calendar']/div[2]/div/table/tbody/tr/td/div/div/div[2]/table/tbody/tr[3]/td[2]" , 60000)
	   .pause(500)
	   .click("//*[@id='calendar']/div[2]/div/table/tbody/tr/td/div/div/div[2]/table/tbody/tr[3]/td[2]")
	   .useCss()
	   .waitForElementVisible('#addAppointmentTime' , 60000)
	   .pause(500)
	   .click('#addAppointmentTime')
	   .useXpath()
	   .waitForElementVisible("//*[@id='time-slotsName']/span" , 60000)
	   .pause(500)
	   .useCss()
	   .elements('css selector', 'div#time-slotsName div label input', function(result) {
	   	    time=result.value.length
	   })
	   .pause(500)
aa=Math.floor((Math.random()*arr.length)+2)
ab=['fever' , 'leg pain' , 'foot pain']
appointmentDescription=ab[Math.floor(Math.random()*ab.length)]
     browser
       .useCss()
       .pause(1000)
       .click('input[value="'+arr[aa]+'"][name="booking"]')
       .pause(500)
       .clearValue('#appointmentDescription')
       .setValue('#appointmentDescription' , appointmentDescription)
       .pause(500)
       .click('#eventUrl-addName')
       .pause(1000)

       .windowHandles(function(result) {
    var newWindow;
    this.verify.equal(result.value.length, 1, 'There should be 1 windows   open');
    newWindow = result.value[0];
    this.switchWindow(newWindow);
})
     browser  
       .pause(500)
       .useXpath()
       .waitForElementVisible("//*[@id='"+id+"']/a[3]/i" , 60000 , function(result){
       	browser
       .pause(500)
       .click("//*[@id='appointmentAlertModal']/div/div/div[1]/button")
       .pause(2000)

       var timeString = arr[aa];
var H = +timeString.substr(0, 2);
var h = (H % 12) || 12;
var ampm = H < 12 ? "AM" : "PM";
appointment_1 = h + timeString.substr(2, 3) + ' ' +ampm;
})
},
'open patient':function(browser){
	browser
	 .useCss()
	 .pause(500)
	 .click('a[onclick="postNavigateToProfile('+id+',1);"]')
	 .waitForElementVisible('#patient_first_name' , 60000)
	 .pause(500)
	 .getValue('#patient_first_name' , function(result){
	 	first_name=result.value
	 })
	 .getValue('#patient_last_name' , function(result){
        last_name=result.value
	 })

},
'Appointment 2':function(browser){
	browser
	  .useCss()
	  .click('a[onclick="loadDatatable()"]')
	  .waitForElementVisible('button[onclick="openAppointmentWindow();"]' , 60000)
	  .click('button[onclick="openAppointmentWindow();"]')

	   .windowHandles(function(result) {
    var newWindow;
    this.verify.equal(result.value.length, 2, 'There should be 2 windows   open');
    newWindow = result.value[1];
    this.switchWindow(newWindow);
})


       browser
	  .useCss()
	   .waitForElementVisible('#calendar' , 60000)
	   .pause(2000)
	   .useXpath()
	   .waitForElementVisible("//*[@id='calendar']/div[2]/div/table/tbody/tr/td/div/div/div[2]/table/tbody/tr[3]/td[2]" , 60000)
	   .pause(500)
	   .click("//*[@id='calendar']/div[2]/div/table/tbody/tr/td/div/div/div[2]/table/tbody/tr[3]/td[2]")
	   .useCss()
	   .waitForElementVisible('#addAppointmentTime' , 60000)
	   .pause(500)
	   .click('#addAppointmentTime')
	   .useXpath()
	   .waitForElementVisible("//*[@id='time-slotsName']/span" , 60000)
	   .pause(500)
	   .useCss()
	   .elements('css selector', 'div#time-slotsName div label input', function(result) {
	   	    time_1=result.value.length
	   })
	   .pause(500)
ac=Math.floor((Math.random()*arr.length)+2)
ad=['fever' , 'leg pain' , 'foot pain']
appointmentDescription_1=ad[Math.floor(Math.random()*ad.length)]
     browser
       .useCss()
       .pause(1000)
       .click('input[value="'+arr[ac]+'"][name="booking"]')
       .pause(500)
       .clearValue('#appointmentDescription')
       .setValue('#appointmentDescription' , appointmentDescription_1)
       .pause(500)
       .click('#eventUrl-addName')
       .pause(2000)

       .windowHandles(function(result) {
    var newWindow;
    this.verify.equal(result.value.length, 1, 'There should be 1 windows   open');
    newWindow = result.value[0];
    this.switchWindow(newWindow);
})
     browser
     .useCss()
     .waitForElementVisible('button[onclick="openAppointmentWindow();"]' , 60000 ,function(result){
     	browser
     .pause(1000)
       

       var timeString_2 = arr[ac];
var H_2 = +timeString_2.substr(0, 2);
var h_2 = (H_2 % 12) || 12;
var ampm_2 = H_2 < 12 ? "AM" : "PM";
appointment_2 = h_2 + timeString_2.substr(2, 3) + ' ' +ampm_2;
})

},
'appointment_3':function(browser){
	var patient_name=last_name + ' ' + first_name
	browser
	   .useXpath()
	   .pause(1000)
	   .click("//*[@id='mainMenu']/ul/li[3]/a")
	   .pause(300)
	   .useCss()
	   .click('a[href="/EHR/Patient-Details/viewCalender?date=1"]')
	   .useXpath()
	   .waitForElementVisible("//*[@id='calendar']/div[2]/div/table/tbody/tr/td/div/div/div[2]/table/tbody/tr[7]/td[2]" , 60000)
	   .pause(500)
	   .click("//*[@id='calendar']/div[2]/div/table/tbody/tr/td/div/div/div[2]/table/tbody/tr[7]/td[2]")
	   .useCss()
	   .waitForElementVisible('#regularPatientName' , 60000)
	   .pause(500)
	   .click('input[name="patientType"][value="1"]')
	   .pause(300)
	   .setValue('#regularPatientName' , patient_name)
	   .pause(500)
	   .waitForElementVisible('li[data-value="'+patient_name +' - '+ id+'"]' , 60000)
	   .pause(500)
	   .click('li[data-value="'+patient_name +' - '+ id+'"]')
	   .pause(500)
	   .click('#addAppointmentTime')
	   .useXpath()
	   .waitForElementVisible("//*[@id='time-slotsName']/span" , 60000)
	   .elements('css selector', 'div#time-slotsName div label input', function(result) {
	   	    time_2=result.value.length
	   })
	   .pause(500)
ae=Math.floor((Math.random()*arr.length)+2)
af=['fever' , 'leg pain' , 'foot pain']
appointmentDescription_2=af[Math.floor(Math.random()*af.length)]
     browser
       .useCss()
       .pause(1000)
       .click('input[value="'+arr[ae]+'"][name="booking"]')
       .pause(500)
       .clearValue('#appointmentDescription')
       .setValue('#appointmentDescription' , appointmentDescription_2)
       .pause(500)
       .click('#eventUrl-addName' , function(result){
        browser
       .pause(2000)

var timeString_3 = arr[ae];
var H_3 = +timeString_3.substr(0, 2);
var h_3 = (H_3 % 12) || 12;
var ampm_3 = H_3 < 12 ? "AM" : "PM";
appointment_3 = h_3 + timeString_3.substr(2, 3) + ' ' +ampm_3;
})
},
'Check Appointment':function(browser){
	var check=[];
	check.push(appointment_1)
	check.push(appointment_2)
	check.push(appointment_3)

	check.sort(function (a, b) {
  return new Date('1970/01/01 ' + a) - new Date('1970/01/01 ' + b);
});

      browser
      .useCss()
      .pause(1000)
      .click('a[class="firstLevel"]')
      .pause(500)
      .click('a[href="/EHR/Clinicadmin/view-patient-details-open"]')
      .waitForElementVisible('a[onclick="getPatientProfile()"]' , 60000)
      .pause(500)
      .useXpath()
      .waitForElementVisible("//*[@id='patient']/tbody/tr[1]/td[6]/a/i" , 60000)
      .pause(500)
      .click("//*[@id='patient']/tbody/tr[1]/td[6]/a/i")
      .useCss()
      .waitForElementVisible('#patient_first_name' , 60000)
      .pause(500)
      .click('a[onclick="loadDatatable()"]')
      .waitForElementVisible('input[id="col2_filter"][onchange="datesearch()"]' , 60000)
      .pause(1000)
      .elements('css selector', 'table#appointment tbody tr', function(result) {
      	console.log("Table Length--->"+[result.value.length==3])
       })

      
      .useXpath()
      .verify.containsText("//*[@id='appointment']/tbody/tr[1]/td[4]" , check[0])
      .verify.containsText("//*[@id='appointment']/tbody/tr[2]/td[4]" , check[1])
      .verify.containsText("//*[@id='appointment']/tbody/tr[3]/td[4]" , check[2])
      .pause(1000)
      .end()
}
}